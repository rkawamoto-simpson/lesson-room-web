/*! VSWebRTCCore v3.1.0  | (c) Saver Corp */ var ERROR_SIGNALING_URL_NOT_SET =
    'Signaling server url was not set yet',
  ERROR_SIGNALING_NOT_CONNECT_YET = 'Not connect to signaling server yet',
  ERROR_SIGNALING_CONNECT_FAIL = 'Connect to signaling server fail',
  ERROR_SIGNALING_HAS_ERROR = 'Signaling server error',
  ERROR_ROOM_NAME_EMPTY = 'Room name is empty',
  ERROR_ROOM_ALREADY_JOINED = 'Already joined this room',
  ERROR_NOT_PREPARE_MEDIA_YET = 'Not prepare media yet',
  ERROR_NOT_ACCEPTED_CALLING = 'Not accepted calling yet',
  ERROR_NOT_CREATE_PEER_SESSION_YET = 'Peer session was not initialized yet',
  ERROR_REMOTE_RENDER_PROXY_SET_FAIL = 'Set remote render proxy fail',
  ERROR_TARGET_NOT_MATCH = 'Taget does not match',
  ERROR_SDP_MULTIPLE = 'Multiple was SDP created',
  ERROR_ICE_CONNECT_FAIL = 'Connect ICE server fail',
  ERROR_STREAM_NOT_FOUND = 'Stream does not found',
  ERROR_DATACHANNEL_ERROR = 'Data channel has error',
  ERROR_SEND_MSG_SIGNALING_FAIL = 'Send message via signaling server fail',
  INFO_SIGNALING_CONNECTED = 'Connected to signaling server',
  INFO_SIGNALING_DISCONNECTED = 'Disconnected with signaling server',
  INFO_SIGNALING_RECONNECTED = 'Reconnected with signaling server',
  INFO_LOCAL_MEDIA_SRC_START = 'Local media source has been started',
  INFO_LOCAL_MEDIA_SRC_STOP = 'Local media source has been stopped',
  INFO_MEDIA_SRC_FAIL = 'Media source has been started fail',
  INFO_PEER_SESSION_INITIALIZED = 'Peer session was initialized',
  INFO_CALL_SUCCESS = 'Call success',
  INFO_CALL_FAIL = 'Call fail',
  INFO_HANGUP_SUCCESS = 'Hangup success',
  INFO_HANGUP_FAIL = 'Hangup fail',
  INFO_MEDIA_COMMUNICATION_READY = 'Media communication ready',
  INFO_JOIN_SUCCESS = 'Join room success',
  INFO_JOIN_FAIL = 'Join room fail',
  INFO_LEAVE_SUCCESS = 'Leave room success',
  INFO_LEAVE_FAIL = 'Leave room fail',
  INFO_HUNG_UP = 'Hungup',
  INFO_ON_BE_CALLED = 'Be called',
  INFO_ON_BE_ACCPETED = 'Be accepted',
  INFO_ICE_CONNECTED = 'ICE server connected',
  INFO_ICE_CLOSED = 'ICE server closed',
  INFO_ICE_RESTART = 'ICE restart',
  INFO_DATACHANNEL_CREATED = 'Data channel was created',
  INFO_DATACHANNEL_OPENED = 'Data channel was opened',
  INFO_DATACHANNEL_CLOSED = 'Data channel was closed',
  INFO_ROOM_CHANGED = 'Room info has changed',
  WARN_SDP_NO_MEDIA_DES_LINE = 'There is not mediaDescription line',
  WARN_SDP_NO_AUDIO_DES_LINE = 'There is not audio mediaDescription line',
  WARN_SDP_NO_VIDEO_DES_LINE = 'There is not video mediaDescription line',
  WARN_SDP_CODEC_NO_PAYLOAD_TYPE = 'No payload types',
  WARN_SDP_MEDIA_DES_FORMAT = 'Wrong SDP media description format',
  WARN_MESSAGE_NOT_MATCH_TYPE = 'Not handle message type',
  WARN_MESSAGE_NOT_MATCH_EVENT = 'Not handle notify message with event'
function _classCallCheck(e, n) {
  if (!(e instanceof n))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(e, n) {
  for (var o = 0; o < n.length; o++) {
    var t = n[o]
    ;(t.enumerable = t.enumerable || !1),
      (t.configurable = !0),
      'value' in t && (t.writable = !0),
      Object.defineProperty(e, t.key, t)
  }
}
function _createClass(e, n, o) {
  return n && _defineProperties(e.prototype, n), o && _defineProperties(e, o), e
}
var VSWebRTCClient = (function () {
    'use strict'
    function e() {
      _classCallCheck(this, e),
        (this._roomHandler = new RoomHandler()),
        (this._localStreamHandler = new StreamHandler()),
        (this._socketHandler = new SocketHandler(this)),
        (this._signalHandler = new SignalHandler(
          this,
          this._socketHandler,
          this._roomHandler
        )),
        (this._webrtcHandler = new WebrtcHandler(
          this,
          this._signalHandler,
          this._localStreamHandler
        )),
        (this._requestCallList = []),
        (this._myUID = void 0)
    }
    return (
      _createClass(
        e,
        [
          {
            key: 'setLogReporting',
            value: function (e) {
              logFlag = e
            }
          },
          {
            key: 'configure',
            value: function (e, n) {
              this._socketHandler.setSocketUrl(e),
                this._webrtcHandler.setIceServers(n)
            }
          },
          {
            key: 'connect',
            value: function () {
              this._socketHandler.connect() ||
                (connectionListener.onConnectFail(ERROR_SIGNALING_URL_NOT_SET),
                Log.error(
                  null,
                  ERROR_SIGNALING_CONNECT_FAIL +
                    ':' +
                    ERROR_SIGNALING_URL_NOT_SET
                ))
            }
          },
          {
            key: 'disconnect',
            value: function () {
              this.hangupAll(),
                this._roomHandler.clearAll(),
                this._socketHandler.disconnect(),
                this._webrtcHandler.close()
            }
          },
          {
            key: 'isConnected',
            value: function () {
              return this._socketHandler.isConnected()
            }
          },
          {
            key: 'identify',
            value: function (e) {
              this._myUID = e
            }
          },
          {
            key: 'getMySocketId',
            value: function () {
              return this._socketHandler.getMySocketId()
            }
          },
          {
            key: 'joinRoom',
            value: function (n, e, o) {
              if (null == n || '' == n)
                return (
                  roomListener.onJoinRoomFail('', ERROR_ROOM_NAME_EMPTY),
                  void Log.error(
                    null,
                    INFO_JOIN_FAIL +
                      ' room:' +
                      n +
                      ' msg:' +
                      ERROR_ROOM_NAME_EMPTY
                  )
                )
              if (
                !this.isConnected() ||
                null == this._socketHandler.getMySocketId()
              )
                return (
                  roomListener.onJoinRoomFail(
                    n,
                    ERROR_SIGNALING_NOT_CONNECT_YET
                  ),
                  void Log.error(
                    null,
                    INFO_JOIN_FAIL +
                      ' room:' +
                      n +
                      ' msg:' +
                      ERROR_SIGNALING_NOT_CONNECT_YET
                  )
                )
              try {
                var t = new User(
                  e,
                  this._socketHandler.getMySocketId(),
                  this._myUID,
                  User.STATUS_ONLINE,
                  o
                )
                this._roomHandler.createRoom(n, t)
                  ? this._signalHandler.joinRoom(n, t)
                  : (roomListener.onJoinRoomFail(n, ERROR_ROOM_ALREADY_JOINED),
                    Log.error(
                      null,
                      INFO_JOIN_FAIL +
                        ' room:' +
                        n +
                        ' msg:' +
                        ERROR_ROOM_ALREADY_JOINED
                    ))
              } catch (e) {
                Log.error('joinRoom', e.message),
                  roomListener.onJoinRoomFail(n, e.message)
              }
            }
          },
          {
            key: 'leaveRoom',
            value: function (e) {
              if ((this.hangupAll(), null == e.getRoomName()))
                return (
                  roomListener.onLeaveRoomFail('', ERROR_ROOM_NAME_EMPTY),
                  void Log.error(
                    null,
                    INFO_LEAVE_FAIL +
                      ' room:' +
                      e.getRoomName() +
                      ' msg:' +
                      ERROR_ROOM_NAME_EMPTY
                  )
                )
              this._signalHandler.leaveRoom(e)
            }
          },
          {
            key: 'updateMyInfo',
            value: function (e, n, o) {
              e && n && this._signalHandler.updateMyInfo(e, n, o)
            }
          },
          {
            key: 'updateRoomInfo',
            value: function (e, n, o) {
              e && n && this._signalHandler.updateRoomInfo(e, n, o)
            }
          },
          {
            key: 'call',
            value: function (n, o) {
              if (
                (this._requestCallList.push(n.getRoomName() + o.getUID()),
                !this.isConnected())
              )
                return (
                  Log.error(
                    'call - room:' + n.getRoomName() + ' partner:' + o.getUID(),
                    ERROR_SIGNALING_NOT_CONNECT_YET
                  ),
                  void callListener.onCallFail(
                    n,
                    o,
                    ERROR_SIGNALING_NOT_CONNECT_YET
                  )
                )
              try {
                this._signalHandler.call(n, o),
                  callListener.onCallSuccess(n, o),
                  Log.info(
                    null,
                    INFO_CALL_SUCCESS +
                      ' - room:' +
                      n.getRoomName() +
                      ' partner:' +
                      o.getUID()
                  )
              } catch (e) {
                Log.error('call', e.message),
                  callListener.onCallFail(n, o, e.message)
              }
            }
          },
          {
            key: 'response',
            value: function (n, o, e, t) {
              var a = 2 < arguments.length && void 0 !== e && e,
                t = 3 < arguments.length && void 0 !== t ? t : 'def'
              this._webrtcHandler.closePeerConnection(
                PeerSession.getId(n, o, t)
              )
              try {
                this._signalHandler.response(n, o, a),
                  this._roomHandler.addCallingTargetInRoom(n.getRoomName(), o),
                  callListener.onResponseSuccess(n, o)
              } catch (e) {
                Log.error('response', e.message),
                  callListener.onResponseFail(n, o, e.message)
              }
            }
          },
          {
            key: 'hangup',
            value: function (n, o) {
              if (!this.isConnected())
                return (
                  callListener.onHangupFail(
                    n,
                    o,
                    ERROR_SIGNALING_NOT_CONNECT_YET
                  ),
                  void Log.error(
                    null,
                    INFO_HANGUP_FAIL +
                      ' - room:' +
                      n.getRoomName() +
                      ' partner:' +
                      o.getUID()
                  )
                )
              this._webrtcHandler.clearPeerConnection(n, o),
                this._roomHandler.removeCallingTargetInRoom(n.getRoomName(), o)
              try {
                this._signalHandler.hangup(n, o),
                  callListener.onHangupSuccess(n, o),
                  Log.info(
                    null,
                    INFO_HANGUP_SUCCESS +
                      ' - room:' +
                      n.getRoomName() +
                      ' partner:' +
                      o.getUID()
                  )
              } catch (e) {
                Log.error('hangup', e.message),
                  callListener.onHangupFail(n, o, e.message)
              }
            }
          },
          {
            key: 'hangupAll',
            value: function () {
              var e,
                n = this._roomHandler.getRooms()
              for (e in n) {
                var o,
                  t = n[e],
                  a = t.getCallingTargets()
                for (o in a) this.hangup(t, a[o])
              }
              var l,
                r = this._webrtcHandler.getPeerSessions()
              for (l in r) {
                var i = r[l]
                null != i && this.hangup(i.getRoom(), i.getTargetUser())
              }
            }
          },
          {
            key: 'startMediaCommunication',
            value: function (e, n, o) {
              o = 2 < arguments.length && void 0 !== o ? o : 'def'
              this._webrtcHandler.connectTo(e, n, o, !0),
                this._webrtcHandler.createOffer(e, n, o)
            }
          },
          {
            key: 'stopMediaCommunication',
            value: function (e, n, o) {
              o = 2 < arguments.length && void 0 !== o ? o : 'def'
              this._webrtcHandler.closePeerConnection(
                PeerSession.getId(e, n, o)
              )
            }
          },
          {
            key: 'getMediaCommunicationStats',
            value: function (e, n, o) {
              o = 2 < arguments.length && void 0 !== o ? o : 'def'
              return this._webrtcHandler.getPeerSessionStats(e, n, o)
            }
          },
          {
            key: 'sendMessage',
            value: function (e, n, o, t, a) {
              a = 4 < arguments.length && void 0 !== a ? a : 'def'
              if (!this._roomHandler.isCalling(e.getRoomName(), n))
                return (
                  Log.error(
                    'sendMessage - room:' +
                      e.getRoomName() +
                      ' partner:' +
                      n.getUID(),
                    ERROR_NOT_ACCEPTED_CALLING
                  ),
                  void messageListener.onError(e, n, ERROR_NOT_ACCEPTED_CALLING)
                )
              ;(t ? this._signalHandler : this._webrtcHandler).sendMessage(
                e,
                n,
                a,
                o
              )
            }
          },
          {
            key: 'sendData',
            value: function (e, n, o, t) {
              t = 3 < arguments.length && void 0 !== t ? t : 'def'
              if (!this._roomHandler.isCalling(e.getRoomName(), n))
                return (
                  Log.error(
                    'sendData - room:' +
                      e.getRoomName() +
                      ' partner:' +
                      n.getUID(),
                    ERROR_NOT_ACCEPTED_CALLING
                  ),
                  void dataListener.onError(e, n, ERROR_NOT_ACCEPTED_CALLING)
                )
              this._webrtcHandler.sendData(e, n, t, o)
            }
          },
          {
            key: 'broadcastMessage',
            value: function (e, n, o) {
              o = 2 < arguments.length && void 0 !== o ? o : 'def'
              this._signalHandler.sendMessage(e, void 0, o, n)
            }
          },
          {
            key: 'configStream',
            value: function (e, n, o) {
              o = 2 < arguments.length && void 0 !== o ? o : 'def'
              this._localStreamHandler.config(e, o, n)
            }
          },
          {
            key: 'configIceTransportPolicy',
            value: function (e) {
              this._localStreamHandler.configIceTransportPolicy(e)
            }
          },
          {
            key: 'getDevices',
            value: function (e) {
              return this._localStreamHandler.getDevices(e)
            }
          },
          {
            key: 'makeStream',
            value: function (e, n, o, t, a, l) {
              l = 5 < arguments.length && void 0 !== l ? l : 'def'
              this._localStreamHandler.makeStream(e, n, o, t, a, l)
            }
          },
          {
            key: 'pauseStream',
            value: function (e) {
              var n = this
              null != e
                ? e.forEach(function (e) {
                    n._localStreamHandler.pauseTrack(e)
                  })
                : this._localStreamHandler.cleanStream()
            }
          },
          {
            key: 'resumeStream',
            value: function (e) {
              var n = this
              null != e &&
                e.forEach(function (e) {
                  n._localStreamHandler.resumeTrack(e)
                })
            }
          },
          {
            key: 'stopStream',
            value: function (e) {
              var n = this
              null != e &&
                e.forEach(function (e) {
                  n._localStreamHandler.stopTrack(e)
                })
            }
          },
          {
            key: 'notifyStreamChanged',
            value: function (e, n, o) {
              o = 2 < arguments.length && void 0 !== o ? o : 'def'
              void 0 !==
                this._webrtcHandler.peerSessions[PeerSession.getId(e, n, o)] &&
                this._webrtcHandler.peerSessions[
                  PeerSession.getId(e, n, o)
                ].renegotiation()
            }
          },
          {
            key: 'showStream',
            value: function (n, o) {
              var e
              null != o &&
                (Browser.isSafari() &&
                  (n.onpause = function () {
                    n.play()
                  }),
                n.setAttribute('autoplay', 'autoplay'),
                n.setAttribute('playsinline', ''),
                n.setAttribute('autoplay', ''),
                (n.srcObject = o),
                void 0 !== (e = n.play()) &&
                  e
                    .then(function (e) {
                      Log.info(
                        'WebrtcClient:showStream',
                        INFO_LOCAL_MEDIA_SRC_START
                      )
                    })
                    .catch(function (e) {
                      Log.error(
                        'WebrtcClient:showStream',
                        INFO_MEDIA_SRC_FAIL + ' :' + e.message
                      ),
                        streamListener.onPlayStreamFail(e, n, o)
                    }))
            }
          },
          {
            key: 'getLocalStream',
            value: function (e) {
              return this._localStreamHandler.getStream(e)
            }
          },
          {
            key: 'getRemoteStream',
            value: function (e, n, o) {
              o = 2 < arguments.length && void 0 !== o ? o : 'def'
              return this._webrtcHandler.getRemoteStream(e, n, o)
            }
          },
          {
            key: 'setConnectionListener',
            value: function (e, n, o, t, a) {
              null != e && (connectionListener.onConnectSuccess = e),
                null != n && (connectionListener.onConnectFail = n),
                null != o && (connectionListener.onDisconnected = o),
                null != t && (connectionListener.onDisconnectFail = t),
                null != a && (connectionListener.onReconnected = a)
            }
          },
          {
            key: 'setEventListener',
            value: function (e) {
              null != e && (eventListener.onEventError = e)
            }
          },
          {
            key: 'setCallListener',
            value: function (e, n, o, t, a, l, r, i, s, c) {
              null != e && (callListener.onCallSuccess = e),
                null != n && (callListener.onCallFail = n),
                null != o && (callListener.onHangupSuccess = o),
                null != t && (callListener.onHangupFail = t),
                null != a && (callListener.onBeCalled = a),
                null != l && (callListener.onBeAccepted = l),
                null != r && (callListener.onBeRejected = r),
                null != i && (callListener.onHungup = i),
                null != s && (callListener.onResponseSuccess = s),
                null != c && (callListener.onResponseFail = c)
            }
          },
          {
            key: 'setRoomListener',
            value: function (e, n, o, t, a, l, r, i, s, c) {
              null != e && (roomListener.onJoinRoomSuccess = e),
                null != n && (roomListener.onJoinRoomFail = n),
                null != o && (roomListener.onLeaveRoomSuccess = o),
                null != t && (roomListener.onLeaveRoomFail = t),
                null != a && (roomListener.onRoomInfoChanged = a),
                null != l && (roomListener.onMemberJoin = l),
                null != r && (roomListener.onMemberLeave = r),
                null != i && (roomListener.onOnline = i),
                null != s && (roomListener.onOffline = s),
                null != c && (roomListener.onUserInfoChanged = c)
            }
          },
          {
            key: 'setMessageListener',
            value: function (e, n, o, t) {
              null != e && (messageListener.onError = e),
                null != n && (messageListener.onMessage = n),
                null != o && (messageListener.onOpen = o),
                null != t && (messageListener.onClose = t)
            }
          },
          {
            key: 'setDataListener',
            value: function (e, n, o, t) {
              null != e && (dataListener.onError = e),
                null != n && (dataListener.onData = n),
                null != o && (dataListener.onOpen = o),
                null != t && (dataListener.onClose = t)
            }
          },
          {
            key: 'setStreamListener',
            value: function (e, n) {
              null != e && (streamListener.onRemoteStreamChanged = e),
                null != n && (streamListener.onPlayStreamFail = n)
            }
          },
          {
            key: 'setMediaRTCListener',
            value: function (e, n) {
              null != e && (mediaRTCListener.onMediaCommunicationError = e),
                null != n && (mediaRTCListener.onMediaCommunicationOpened = n)
            }
          }
        ],
        [
          {
            key: 'getInstance',
            value: function () {
              return null == e._instance && (e._instance = new e()), e._instance
            }
          }
        ]
      ),
      _createClass(e, [
        {
          key: 'onReceiveMessageSignal',
          value: function (e) {
            this._signalHandler.handleMessageSignal(e)
          }
        },
        {
          key: 'onReceiveNotifySignal',
          value: function (e) {
            this._signalHandler.handleNotifySignal(e)
          }
        },
        {
          key: 'onReceiveRoomSignal',
          value: function (e) {
            this._signalHandler.handleRoomSignal(e)
          }
        },
        {
          key: 'onReceiveHandshakeSignal',
          value: function (e) {
            this._signalHandler.handlerMessageSignal(e)
          }
        },
        {
          key: 'onReceiveVideoChatSignal',
          value: function (e) {
            this._signalHandler.handleVideoChatSignal(e)
          }
        },
        {
          key: 'onWebSocketError',
          value: function (e) {
            eventListener.onEventError(void 0, e)
          }
        },
        {
          key: 'onConnected',
          value: function () {
            this._signalHandler.sendOnlineStatus(this._myUID)
          }
        },
        {
          key: 'onDisconnected',
          value: function (e) {
            connectionListener.onDisconnected(e)
          }
        },
        {
          key: 'onReconnected',
          value: function () {
            connectionListener.onReconnected(),
              this._signalHandler.sendReconnectStatus(this._myUID)
          }
        },
        {
          key: 'onBeCalled',
          value: function (e, n) {
            callListener.onBeCalled(e, n)
          }
        },
        {
          key: 'onBeResponded',
          value: function (e, n, o) {
            for (
              var t = !1, a = e.getRoomName() + n.getUID(), l = 0;
              l < this._requestCallList.length;
              l++
            )
              if (this._requestCallList[l] == a) {
                ;(t = !0), this._requestCallList.splice(l, 1)
                break
              }
            t &&
              (o
                ? callListener.onBeRejected(e, n)
                : (this._roomHandler.addCallingTargetInRoom(e.getRoomName(), n),
                  callListener.onBeAccepted(e, n)))
          }
        },
        {
          key: 'onCallingFail',
          value: function (e, n, o) {
            callListener.onCallFail(e, n, o),
              Log.error(
                null,
                INFO_CALL_FAIL +
                  ' - room:' +
                  e.getRoomName() +
                  ' partner:' +
                  n.getUID() +
                  ' msg:' +
                  o
              )
          }
        },
        {
          key: 'onReceiveOffer',
          value: function (e, n, o, t) {
            this._webrtcHandler.connectTo(e, n, o, !1),
              this._webrtcHandler.createAnswer(e, n, o, t)
          }
        },
        {
          key: 'onReceiveAnswer',
          value: function (e, n, o, t) {
            this._webrtcHandler.setAnswer(e, n, o, t)
          }
        },
        {
          key: 'onReceiveCandidate',
          value: function (e, n, o, t, a, l) {
            this._webrtcHandler.addRemoteIceCandidate(e, n, o, t, a, l)
          }
        },
        {
          key: 'onReceiveHangup',
          value: function (e, n) {
            this._webrtcHandler.clearPeerConnection(e, n),
              this._roomHandler.removeCallingTargetInRoom(e.getRoomName(), n),
              callListener.onHungup(e, n),
              Log.info(
                null,
                INFO_HUNG_UP +
                  ' - room:' +
                  e.getRoomName() +
                  ' partner:' +
                  n.getUID()
              )
          }
        },
        {
          key: 'onErrorMessage',
          value: function (e, n) {
            eventListener.onEventError(e, n)
          }
        },
        {
          key: 'onWebRTCHandlerError',
          value: function (e, n, o) {
            eventListener.onEventError(e.getRoomName(), o)
          }
        },
        {
          key: 'onIceConnected',
          value: function (e, n) {
            Log.info(
              null,
              INFO_CALL_SUCCESS +
                ' - room:' +
                e.getRoomName() +
                ' partner:' +
                n.getUID()
            )
          }
        },
        {
          key: 'onIceClosed',
          value: function (e, n) {
            Log.info(
              null,
              INFO_HANGUP_SUCCESS +
                ' - room:' +
                e.getRoomName() +
                ' partner:' +
                n.getUID()
            )
          }
        },
        {
          key: 'onIceCompleted',
          value: function (e, n) {
            Log.info(
              null,
              INFO_MEDIA_COMMUNICATION_READY +
                ' - room:' +
                e.getRoomName() +
                ' partner:' +
                n.getUID()
            ),
              mediaRTCListener.onMediaCommunicationOpened(e, n)
          }
        }
      ]),
      e
    )
  })(),
  logFlag = 0
VSWebRTCClient._instance = void 0
function _classCallCheck(i, e) {
  if (!(i instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(i, e) {
  for (var t = 0; t < e.length; t++) {
    var o = e[t]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(i, o.key, o)
  }
}
function _createClass(i, e, t) {
  return e && _defineProperties(i.prototype, e), t && _defineProperties(i, t), i
}
var VideoCodec = {
    VIDEO_CODEC_VP8: 'VP8',
    VIDEO_CODEC_VP9: 'VP9',
    VIDEO_CODEC_H264: 'H264'
  },
  AudioCodec = { AUDIO_CODEC_OPUS: 'opus', AUDIO_CODEC_ISAC: 'ISAC' },
  ScreenCursor = { ALWAYS: 'always', MOTION: 'motion', NEVER: 'never' },
  ScreenDisplaySurface = {
    APPLICATION: 'application',
    BROWSER: 'browser',
    MONITOR: 'monitor',
    WINDOW: 'window'
  },
  CONNECT_TYPE_STUN = 1,
  CONNECT_TYPE_TURN = 2,
  CONNECT_TYPE_BOTH = 3,
  StreamConfiguration = (function () {
    'use strict'
    function t() {
      _classCallCheck(this, t),
        (this._videoWidth = []),
        (this._videoHeight = []),
        (this._videoFps = []),
        (this._videoCodec = []),
        (this._videoMaxBitrate = []),
        (this._videoSourceId = []),
        (this._audioCodec = []),
        (this._audioMaxBitrate = []),
        (this._audioSourceId = []),
        (this._echoCancellation = []),
        (this._autoGainControl = []),
        (this._noiseSuppression = []),
        (this._highpassFilter = []),
        (this._typingNoiseDetection = []),
        (this._enableConstantBitrate = []),
        (this._screenCursor = []),
        (this._screenDisplaySurface = []),
        (this._connectType = CONNECT_TYPE_BOTH)
    }
    return (
      _createClass(t, [
        {
          key: 'setAudioConfig',
          value: function (i, e) {
            null != i &&
              (i.codec
                ? (this._audioCodec[e] = i.codec)
                : (this._audioCodec[e] = t.DEFAULT_AUDIO_CODEC),
              i.bitrate_max
                ? (this._audioMaxBitrate[e] = i.bitrate_max)
                : (this._audioMaxBitrate[e] = t.DEFAULT_AUDIO_BITRATE_MAX),
              i.audio_source_id && (this._audioSourceId[e] = i.audio_source_id),
              i.echo_cancellation &&
                (this._echoCancellation[e] = i.echo_cancellation),
              i.auto_gain_control &&
                (this._autoGainControl[e] = i.auto_gain_control),
              i.noise_suppression &&
                (this._noiseSuppression[e] = i.noise_suppression),
              i.highpass_filter &&
                (this._highpassFilter[e] = i.highpass_filter),
              i.typing_noise_detection &&
                (this._typingNoiseDetection[e] = i.typing_noise_detection),
              i.enable_constant_bitrate &&
                (this._enableConstantBitrate[e] = i.enable_constant_bitrate))
          }
        },
        {
          key: 'setVideoConfig',
          value: function (i, e) {
            null != i &&
              (i.codec
                ? (this._videoCodec[e] = i.codec)
                : (this._videoCodec[e] = t.DEFAULT_VIDEO_CODEC),
              i.bitrate_max
                ? (this._videoMaxBitrate[e] = i.bitrate_max)
                : (this._videoMaxBitrate[e] = t.DEFAULT_VIDEO_BITRATE_MAX),
              i.width && (this._videoWidth[e] = i.width),
              i.height && (this._videoHeight[e] = i.height),
              i.fps && (this._videoFps[e] = i.fps),
              i.video_source_id && (this._videoSourceId[e] = i.video_source_id))
          }
        },
        {
          key: 'setScreenConfig',
          value: function (i, e) {
            null != i &&
              (null != i.cursor
                ? (this._screenCursor[e] = i.cursor)
                : (this._screenCursor[e] = t.DEFAULT_SCREEN_CURSOR),
              null != i.display_surface
                ? (this._screenDisplaySurface[e] = i.display_surface)
                : (this._screenDisplaySurface[e] =
                    t.DEFAULT_SCREEN_DISPLAYSURFACE),
              i.bitrate_max
                ? (this._videoMaxBitrate[e] = i.bitrate_max)
                : (this._videoMaxBitrate[e] = t.DEFAULT_VIDEO_BITRATE_MAX))
          }
        },
        {
          key: 'configIceTransportPolicy',
          value: function (i) {
            this._connectType = i
          }
        },
        {
          key: 'getVideoConfig',
          value: function (i) {
            var e = { video: {} }
            return (
              null != this._videoSourceId[i] &&
                (e.video.deviceId = { exact: this._videoSourceId[i] }),
              null != this._videoWidth[i] &&
                (e.video.width = { ideal: this._videoWidth[i] }),
              null != this._videoHeight[i] &&
                (e.video.height = { ideal: this._videoHeight[i] }),
              null != this._videoFps[i] &&
                (e.video.frameRate = this._videoFps[i]),
              e
            )
          }
        },
        {
          key: 'getScreenConfig',
          value: function (i) {
            return Browser.getOS().includes('Firefox') || Browser.isSafari()
              ? { video: !0 }
              : {
                  video: {
                    cursor:
                      null != this._screenCursor[i]
                        ? this._screenCursor[i]
                        : t.DEFAULT_SCREEN_CURSOR,
                    displaySurface:
                      null != this._screenDisplaySurface[i]
                        ? this._screenDisplaySurfacenCursor[i]
                        : t.DEFAULT_SCREEN_DISPLAYSURFACE
                  },
                  audio: !0
                }
          }
        },
        {
          key: 'getAudioConfig',
          value: function (i) {
            var e = { audio: { mandatory: {} } }
            return (
              null != this._audioSourceId[i] &&
                (e.audio.mandatory.sourceId = this._audioSourceId[i]),
              null != this._echoCancellation[i] &&
                (e.audio.mandatory.echoCancellation =
                  this._echoCancellation[i]),
              null != this._echoCancellation[i] &&
                (e.audio.mandatory.googEchoCancellation =
                  this._echoCancellation[i]),
              null != this._autoGainControl[i] &&
                (e.audio.mandatory.googAutoGainControl =
                  this._autoGainControl[i]),
              null != this._autoGainControl[i] &&
                (e.audio.mandatory.googAutoGainControl2 =
                  this._autoGainControl[i]),
              null != this._noiseSuppression[i] &&
                (e.audio.mandatory.googNoiseSuppression =
                  this._noiseSuppression[i]),
              null != this._highpassFilter[i] &&
                (e.audio.mandatory.googHighpassFilter =
                  this._highpassFilter[i]),
              e
            )
          }
        },
        {
          key: 'getAudioCodec',
          value: function (i) {
            return this._audioCodec[i]
          }
        },
        {
          key: 'setAudioCodec',
          value: function (i, e) {
            this._audioCodec[e] = i
          }
        },
        {
          key: 'getVideoCodec',
          value: function (i) {
            return this._videoCodec[i]
          }
        },
        {
          key: 'setVideoCodec',
          value: function (i, e) {
            this._videoCodec[e] = i
          }
        },
        {
          key: 'setEnableVideoSrc',
          value: function (i) {
            this._enableVideoSrc = i
          }
        },
        {
          key: 'isEnableVideoSrc',
          value: function () {
            return this._enableVideoSrc
          }
        },
        {
          key: 'setEnableAudioSrc',
          value: function (i) {
            this._enableAudioSrc = i
          }
        },
        {
          key: 'isEnableAudioSrc',
          value: function () {
            return this._enableAudioSrc
          }
        },
        {
          key: 'getAudioMaxBitrate',
          value: function (i) {
            return this._audioMaxBitrate[i]
          }
        },
        {
          key: 'setAudioMaxBitrate',
          value: function (i, e) {
            this._audioMaxBitrate[e] = i
          }
        },
        {
          key: 'getVideoMaxBitrate',
          value: function (i) {
            return void 0 !== i
              ? this._videoMaxBitrate[i]
              : (t.DEFAULT_VIDEO_BITRATE_MAX = -1)
          }
        },
        {
          key: 'setVideoMaxBitrate',
          value: function (i, e) {
            this._videoMaxBitrate[e] = i
          }
        }
      ]),
      t
    )
  })()
;(StreamConfiguration.DEFAULT_VIDEO_CODEC = VideoCodec.VIDEO_CODEC_H264),
  (StreamConfiguration.DEFAULT_VIDEO_BITRATE_MAX = -1),
  (StreamConfiguration.DEFAULT_AUDIO_CODEC = AudioCodec.AUDIO_CODEC_OPUS),
  (StreamConfiguration.DEFAULT_AUDIO_BITRATE_MAX = -1),
  (StreamConfiguration.DEFAULT_SCREEN_CURSOR = ScreenCursor.ALWAYS),
  (StreamConfiguration.DEFAULT_SCREEN_DISPLAYSURFACE =
    ScreenDisplaySurface.MONITOR),
  (StreamConfiguration.DEFAULT_ECHO_CANCELLATION = !0),
  (StreamConfiguration.DEFAULT_AUTO_GAIN_CONTROL = !0),
  (StreamConfiguration.DEFAULT_NOISE_SUPPESSION = !0),
  (StreamConfiguration.DEFAULT_HIGH_PASS_FILTER = !0),
  (StreamConfiguration.DEFAULT_TYPING_NOISE_DETECTION = !0),
  (StreamConfiguration.DEFAULT_ENABLE_CONSTANT_BITRATE = !1)

var callListener = {
  onCallSuccess: function () {},
  onCallFail: function () {},
  onHangupSuccess: function () {},
  onHangupFail: function () {},
  onBeCalled: function () {},
  onBeAccepted: function () {},
  onBeRejected: function () {},
  onHungup: function () {},
  onResponseSuccess: function () {},
  onResponseFail: function () {}
}
var connectionListener = {
  onConnectSuccess: function () {},
  onConnectFail: function () {},
  onDisconnected: function () {},
  onReconnected: function () {}
}
var dataListener = {
  onError: function () {},
  onData: function () {},
  onOpen: function () {},
  onClose: function () {}
}
var eventListener = { onEventError: function () {} }
var mediaRTCListener = {
  onMediaCommunicationError: function () {},
  onMediaCommunicationOpened: function () {}
}
var messageListener = {
  onError: function () {},
  onMessage: function () {},
  onOpen: function () {},
  onClose: function () {}
}
var roomListener = {
  onJoinRoomSuccess: function () {},
  onJoinRoomFail: function () {},
  onLeaveRoomSuccess: function () {},
  onLeaveRoomFail: function () {},
  onRoomInfoChanged: function () {},
  onMemberJoin: function () {},
  onMemberLeave: function () {},
  onOnline: function () {},
  onOffline: function () {},
  onUserInfoChanged: function () {}
}
var streamListener = {
  onRemoteStreamChanged: function () {},
  onPlayStreamFail: function () {}
}
function RoomHandler() {
  ;(this.rooms = []),
    (this.waitNotifyJoinedRooms = []),
    (this.__construct = function () {}),
    (this.getRooms = function () {
      return this.rooms
    }),
    (this.getRoom = function (o) {
      return this.rooms[o]
    }),
    (this.createRoom = function (o, t) {
      if (null != this.rooms[o])
        return (
          null != this.waitNotifyJoinedRooms[o] &&
          (this.rooms[o].setMyUser(t), !0)
        )
      var e = new Room(o)
      return (
        e.setMyUser(t),
        (this.rooms[o] = e),
        (this.waitNotifyJoinedRooms[o] = e),
        !0
      )
    }),
    (this.removeRoom = function (o) {
      delete this.rooms[o], delete this.waitNotifyJoinedRooms[o]
    }),
    (this.updateRoom = function (o, t, e, i, s) {
      var n = this.rooms[o]
      if ((null != s && n.setInfo(s), null != e)) {
        if (n.getMyUser().equals(e))
          return (
            this.removeRoom(o),
            Log.info(
              'RoomHandler:updateRoom',
              'room:' + n.getRoomName() + ' msg:' + INFO_LEAVE_SUCCESS
            ),
            void roomListener.onLeaveRoomSuccess(n)
          )
        n.removeMember(e), roomListener.onMemberLeave(n, e)
      }
      null != i &&
        (n.getMyUser().equals(i)
          ? null != this.waitNotifyJoinedRooms[n.getRoomName()] &&
            ((this.waitNotifyJoinedRooms[n.getRoomName()] = void 0),
            t.forEach(function (o) {
              n.getMyUser().equals(o) || n.addMember(o)
            }),
            Log.info(
              'RoomHandler:updateRoom',
              'room:' + n.getRoomName() + ' msg:' + INFO_JOIN_SUCCESS
            ),
            roomListener.onJoinRoomSuccess(n))
          : roomListener.onMemberJoin(n, i),
        n.addMember(i)),
        (null == e && null == i) ||
          (roomListener.onRoomInfoChanged(n),
          Log.info(
            'RoomHandler:updateRoom',
            'room:' + n.getRoomName() + ' msg:' + INFO_ROOM_CHANGED
          ))
    }),
    (this.setStatus = function (o, t, e) {
      this.rooms[o] && this.rooms[o].changeMemberStatus(t, e)
    }),
    (this.updateUserInfo = function (o, t, e, i) {
      this.rooms[o] && this.rooms[o].updateUserInfo(t, e, i)
    }),
    (this.updateRoomInfo = function (o, t, e) {
      this.rooms[o] && this.rooms[o].updateRoomInfo(t, e)
    }),
    (this.addCallingTargetInRoom = function (o, t) {
      this.rooms[o].addCallingTarget(t)
    }),
    (this.removeCallingTargetInRoom = function (o, t) {
      void 0 !== this.rooms[o] &&
        void 0 !== t &&
        this.rooms[o].removeCallingTarget(t)
    }),
    (this.isCalling = function (o, t) {
      return (
        null != o &&
        null != t &&
        null != this.rooms[o].getCallingTarget(t.getUID())
      )
    }),
    (this.clearAll = function () {
      ;(this.rooms = []), (this.waitNotifyJoinedRooms = [])
    }),
    this.__construct()
}
function StreamHandler() {
  var d = this
  ;(this.streamConfiguration = void 0),
    (this.__construct = function () {
      ;(this.mainStreams = []),
        (this.streamConfiguration = new StreamConfiguration())
    }),
    (this.tracks = []),
    (this.streamName = void 0),
    (this.addTrack = function (t, e) {
      this.tracks[e] = t
    }),
    (this.stopTrack = function (t) {
      null != this.tracks[t] &&
        ((this.tracks[t].enabled = !1),
        this.tracks[t].stop(),
        (this.tracks[t] = void 0))
    }),
    (this.pauseTrack = function (t) {
      null != this.tracks[t] && (this.tracks[t].enabled = !1)
    }),
    (this.resumeTrack = function (t) {
      null != this.tracks[t] && (this.tracks[t].enabled = !0)
    }),
    (this.cleanStream = function (e) {
      this.mainStreams[e].getTracks().forEach(function (t) {
        d.mainStreams[e].removeTrack(t), (t.enabled = !1)
      })
    }),
    (this.makeStream = function (t, e, a, r, i, n) {
      d.mainStreams[n] || (d.mainStreams[n] = new MediaStream()),
        (this.streamName = n),
        null == i && (i = !0),
        i && this.cleanStream(n),
        t && 0 == t.length
          ? e && e(d.mainStreams[n], n)
          : ((i = t[0]),
            null == r
              ? (r = StreamHandler.TRACK_DONT_CREATE)
              : r == StreamHandler.TRACK_CREATE_NEW ||
                (r == StreamHandler.TRACK_CREATE_NEW_IF_DONT_EXIST &&
                  null == d.tracks[i])
              ? i == StreamHandler.TRACK_KIND_MIC
                ? d.getUserMedia(
                    STREAM_DEVICE,
                    StreamHandler.TRACK_KIND_MIC,
                    d.streamConfiguration.getAudioConfig(),
                    e,
                    a,
                    t,
                    r,
                    n
                  )
                : i == StreamHandler.TRACK_KIND_CAMERA
                ? d.getUserMedia(
                    STREAM_DEVICE,
                    StreamHandler.TRACK_KIND_CAMERA,
                    d.streamConfiguration.getVideoConfig(),
                    e,
                    a,
                    t,
                    r,
                    n
                  )
                : i == StreamHandler.TRACK_KIND_SCREEN &&
                  d.getUserMedia(
                    STREAM_SCREEN,
                    StreamHandler.TRACK_KIND_SCREEN,
                    d.streamConfiguration.getScreenConfig(),
                    e,
                    a,
                    t,
                    r,
                    n
                  )
              : (null == d.tracks[i] ||
                  (r != StreamHandler.TRACK_CREATE_NEW_IF_DONT_EXIST &&
                    r != StreamHandler.TRACK_DONT_CREATE) ||
                  ((d.tracks[i].enabled = !0),
                  d.mainStreams[n].addTrack(d.tracks[i])),
                t.splice(0, 1),
                d.makeStream(t, e, a, r, !1, n)))
    }),
    (this.getUserMedia = function (e, a, t, r, i, n, o, s) {
      StreamProvider.getProvider(
        e,
        t,
        function (t) {
          t.getTracks().forEach(function (t) {
            ;(t.enabled = !0), (d.tracks[a] = t), d.mainStreams[s].addTrack(t)
          }),
            n.splice(0, 1),
            d.makeStream(n, r, i, o, !1, s)
        },
        function (t) {
          Log.error('StreamHandler:getUserMedia', e + ':' + t),
            i && i(t, e, a),
            n.splice(0, 1),
            d.makeStream(n, r, i, o, !1, s)
        }
      ).do()
    }),
    (this.getStream = function (t) {
      return this.mainStreams[t]
    }),
    (this.config = function (t, e, a) {
      t == StreamHandler.TRACK_KIND_MIC
        ? this.streamConfiguration.setAudioConfig(a, e)
        : t == StreamHandler.TRACK_KIND_CAMERA
        ? this.streamConfiguration.setVideoConfig(a, e)
        : t == StreamHandler.TRACK_KIND_SCREEN &&
          this.streamConfiguration.setScreenConfig(a, e)
    }),
    (this.configIceTransportPolicy = function (t) {
      this.streamConfiguration.configIceTransportPolicy(t)
    }),
    (this.getSdp = function (e, a) {
      return (
        null != this.streamConfiguration &&
          d.mainStreams[this.streamName] &&
          d.mainStreams[this.streamName].getTracks().forEach(function (t) {
            'audio' == t.kind
              ? ((e = Codec.preferCodec(
                  e,
                  d.streamConfiguration.getAudioCodec(a),
                  !0
                )),
                d.streamConfiguration._enableConstantBitrate &&
                  d.streamConfiguration.getAudioCodec(a) ==
                    AudioCodec.AUDIO_CODEC_OPUS &&
                  (e = Codec.enableConstantBitrate(e)),
                d.streamConfiguration.getAudioMaxBitrate(a) &&
                  (console.log(
                    'XXXX',
                    d.streamConfiguration.getAudioMaxBitrate(a)
                  ),
                  (e =
                    -1 == d.streamConfiguration.getAudioMaxBitrate(a)
                      ? Bandwidth.removeBandwidthRestriction(
                          e,
                          d.streamConfiguration.getAudioMaxBitrate(a),
                          !0
                        )
                      : Bandwidth.updateBandwidthRestriction(
                          e,
                          d.streamConfiguration.getAudioMaxBitrate(a),
                          !0
                        ))))
              : 'video' == t.kind &&
                ((e = Codec.preferCodec(
                  e,
                  d.streamConfiguration.getVideoCodec(a),
                  !1
                )),
                d.streamConfiguration.getVideoMaxBitrate(a) &&
                  (console.log(
                    'YYYYY',
                    d.streamConfiguration.getVideoMaxBitrate(a)
                  ),
                  (e =
                    -1 == d.streamConfiguration.getVideoMaxBitrate(a)
                      ? Bandwidth.removeBandwidthRestriction(
                          e,
                          d.streamConfiguration.getVideoMaxBitrate(a),
                          !1
                        )
                      : Bandwidth.updateBandwidthRestriction(
                          e,
                          d.streamConfiguration.getVideoMaxBitrate(a),
                          !1
                        ))))
          }),
        e
      )
    }),
    (this.compareTracks = function (t, r) {
      if (null == t || null == r) return !1
      var i = !1
      return (
        t.forEach(function (e) {
          var a = !1
          if (
            (r.forEach(function (t) {
              t.id == e.id && (a = !0)
            }),
            0 == a)
          )
            return (i = !1)
          i = !0
        }),
        i
      )
    }),
    (this.getDevices = function (r) {
      var i = []
      return (
        navigator.mediaDevices.enumerateDevices().then(function (t) {
          for (var e = 0; e < t.length; e++) {
            var a = t[e]
            ;(a.kind === r || a.kind === r) && i.push(a)
          }
        }),
        i
      )
    }),
    this.__construct()
}
;(StreamHandler.TRACK_KIND_MIC = 'audio'),
  (StreamHandler.TRACK_KIND_CAMERA = 'video'),
  (StreamHandler.TRACK_KIND_SCREEN = 'screen'),
  (StreamHandler.TRACK_CREATE_NEW_IF_DONT_EXIST = 1),
  (StreamHandler.TRACK_CREATE_NEW = 3),
  (StreamHandler.TRACK_DONT_CREATE = 0),
  (StreamHandler.REMOTE_NOTIFY_TRACK_CHANGED = 1),
  (StreamHandler.REMOTE_NOTIFY_STREAM_CHANGED = 2),
  (StreamHandler.REMOTE_DONT_NOTIFY = 0),
  (StreamHandler.DEVICE_KIND_CAMERA = 'videoinput'),
  (StreamHandler.DEVICE_KIND_AUDIO = 'audioinput')
function _slicedToArray(e, n) {
  return (
    _arrayWithHoles(e) ||
    _iterableToArrayLimit(e, n) ||
    _unsupportedIterableToArray(e, n) ||
    _nonIterableRest()
  )
}
function _nonIterableRest() {
  throw new TypeError(
    'Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
  )
}
function _unsupportedIterableToArray(e, n) {
  if (e) {
    if ('string' == typeof e) return _arrayLikeToArray(e, n)
    var r = Object.prototype.toString.call(e).slice(8, -1)
    return (
      'Object' === r && e.constructor && (r = e.constructor.name),
      'Map' === r || 'Set' === r
        ? Array.from(e)
        : 'Arguments' === r ||
          /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        ? _arrayLikeToArray(e, n)
        : void 0
    )
  }
}
function _arrayLikeToArray(e, n) {
  ;(null == n || n > e.length) && (n = e.length)
  for (var r = 0, t = new Array(n); r < n; r++) t[r] = e[r]
  return t
}
function _iterableToArrayLimit(e, n) {
  if ('undefined' != typeof Symbol && Symbol.iterator in Object(e)) {
    var r = [],
      t = !0,
      o = !1,
      s = void 0
    try {
      for (
        var i, a = e[Symbol.iterator]();
        !(t = (i = a.next()).done) && (r.push(i.value), !n || r.length !== n);
        t = !0
      );
    } catch (e) {
      ;(o = !0), (s = e)
    } finally {
      try {
        t || null == a.return || a.return()
      } finally {
        if (o) throw s
      }
    }
    return r
  }
}
function _arrayWithHoles(e) {
  if (Array.isArray(e)) return e
}
function _classCallCheck(e, n) {
  if (!(e instanceof n))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(e, n) {
  for (var r = 0; r < n.length; r++) {
    var t = n[r]
    ;(t.enumerable = t.enumerable || !1),
      (t.configurable = !0),
      'value' in t && (t.writable = !0),
      Object.defineProperty(e, t.key, t)
  }
}
function _createClass(e, n, r) {
  return n && _defineProperties(e.prototype, n), r && _defineProperties(e, r), e
}
var WebrtcHandler = (function () {
  'use strict'
  function t(e, n, r) {
    _classCallCheck(this, t),
      (this.webRTCHandlerDelegate = e),
      (this.signalHandler = n),
      (this.localStreamHandler = r),
      (this.iceServers = []),
      (this.peerSessions = []),
      (this.iceCompletedTimer = []),
      (this.iceCompleted = [])
  }
  return (
    _createClass(t, [
      {
        key: 'setIceServers',
        value: function (e) {
          var n = this
          e.forEach(function (e) {
            n.iceServers.push(e.getIceServer())
          })
        }
      },
      {
        key: 'connectTo',
        value: function (e, n, r, t) {
          var o = this.peerSessions[PeerSession.getId(e, n, r)]
          o &&
            (o.setPeerConnectionObserver(null),
            o.setSdpObserver(null),
            o.releasePeerConnection())
          t = new PeerSession(e, n, r, t)
          t.setLocalStreamHandler(this.localStreamHandler),
            (this.peerSessions[PeerSession.getId(e, n, r)] = t),
            this.createPeerConnectionInternal(t)
        }
      },
      {
        key: 'createOffer',
        value: function (e, n, r) {
          r = this.peerSessions[PeerSession.getId(e, n, r)]
          null != r &&
            r.isPeerConnectionReady() &&
            !r.isError &&
            r.createOffer()
        }
      },
      {
        key: 'createAnswer',
        value: function (e, n, r, t) {
          var o = this.localStreamHandler.streamConfiguration._connectType
          t = Sdp.editCandidateDescription(t, o)
          var s = PeerSession.getId(e, n, r),
            o = this.peerSessions[s]
          null == o || (o.getRoom().equals(e) && o.getTargetUser().equals(n))
            ? o.isPeerConnectionReady() &&
              !o.isError &&
              ((t = new RTCSessionDescription({ type: 'offer', sdp: t })),
              this.setRemoteDescription(e, n, r, t),
              o.createAnswer())
            : Log.error(
                'WebrtcHandler:createAnswer - peerSessionId:' + s,
                ERROR_TARGET_NOT_MATCH
              )
        }
      },
      {
        key: 'setAnswer',
        value: function (e, n, r, t) {
          var o = this.localStreamHandler.streamConfiguration._connectType
          t = Sdp.editCandidateDescription(t, o)
          var s = PeerSession.getId(e, n, r),
            o = this.peerSessions[s]
          null == o || (o.getRoom().equals(e) && o.getTargetUser().equals(n))
            ? o.isPeerConnectionReady() &&
              !o.isError &&
              ((t = new RTCSessionDescription({ type: 'answer', sdp: t })),
              this.setRemoteDescription(e, n, r, t))
            : Log.error(
                'WebrtcHandler:setAnswer - peerSessionId:' + s,
                ERROR_TARGET_NOT_MATCH
              )
        }
      },
      {
        key: 'addRemoteIceCandidate',
        value: function (e, n, r, t, o, s) {
          var i = PeerSession.getId(e, n, r),
            r = this.peerSessions[i]
          null != r && r.getRoom().equals(e) && r.getTargetUser().equals(n)
            ? null != r &&
              r.isPeerConnectionReady() &&
              !r.isError &&
              ((s = new RTCIceCandidate({
                sdpMid: o,
                sdpMLineIndex: t,
                candidate: s
              })),
              r.addIceCandidate(s))
            : Log.error(
                'WebrtcHandler:addRemoteIceCandidate:peerSessionId:' + i,
                ERROR_TARGET_NOT_MATCH
              )
        }
      },
      {
        key: 'getRemoteStream',
        value: function (e, n, r) {
          r = this.peerSessions[PeerSession.getId(e, n, r)]
          if (null != r) return r.getRemoteStream()
        }
      },
      {
        key: 'sendMessage',
        value: function (e, n, r, t) {
          var o = this.peerSessions[PeerSession.getId(e, n, r)]
          null == o
            ? (messageListener.onError(e, n, ERROR_NOT_CREATE_PEER_SESSION_YET),
              Log.error(
                'WebrtcHandler:sendMessage:peerSessionId:' +
                  PeerSession.getId(e, n, r),
                ERROR_NOT_CREATE_PEER_SESSION_YET
              ))
            : o.sendMessage(t)
        }
      },
      {
        key: 'sendData',
        value: function (e, n, r, t) {
          var o = this.peerSessions[PeerSession.getId(e, n, r)]
          null == o
            ? (messageListener.onError(e, n, ERROR_NOT_CREATE_PEER_SESSION_YET),
              Log.error(
                'WebrtcHandler:sendData:peerSessionId:' +
                  PeerSession.getId(e, n, r),
                ERROR_NOT_CREATE_PEER_SESSION_YET
              ))
            : o.sendData(t)
        }
      },
      {
        key: 'changeLocalStream',
        value: function (e, n, r, t) {
          this.peerSessions[PeerSession.getId(e, n, r)].changeLocalStream(
            this.localStreamHandler.getStream(t),
            !this.localStreamHandler.contain(t)
          )
        }
      },
      {
        key: 'setRemoteDescription',
        value: function (e, n, r, t) {
          n = this.peerSessions[PeerSession.getId(e, n, r)]
          null != n &&
            n.isPeerConnectionReady() &&
            !n.isError &&
            ((r = new RTCSessionDescription({
              type: t.type,
              sdp: this.localStreamHandler.getSdp(t.sdp, r)
            })),
            n.setRemoteDescription(r))
        }
      },
      {
        key: 'getPeerSessions',
        value: function () {
          return this.peerSessions
        }
      },
      {
        key: 'getPeerSessionStats',
        value: function (e, n, r) {
          r = this.peerSessions[PeerSession.getId(e, n, r)]
          if (null != r) return r.getStats()
        }
      },
      {
        key: 'closePeerConnection',
        value: function (e) {
          e = this.peerSessions[e]
          null != e &&
            e.isPeerConnectionReady() &&
            e.releasePeerConnection([this.localStreamHandler.getStream()])
        }
      },
      {
        key: 'clearPeerConnection',
        value: function (e, n) {
          for (
            var r = 0, t = Object.entries(this.peerSessions);
            r < t.length;
            r++
          ) {
            var o = _slicedToArray(t[r], 2),
              s = o[0],
              o = o[1]
            s.includes(e.getRoomName() + n.getUID()) &&
              ((s = s.split('_')),
              o.releasePeerConnection([
                this.localStreamHandler.getStream(s[s.length - 1])
              ]))
          }
        }
      },
      {
        key: 'close',
        value: function () {
          for (var e in this.peerSessions) this.closePeerConnection(e)
        }
      },
      {
        key: 'createPeerConnectionInternal',
        value: function (e) {
          var t = this,
            n = {
              onCreateSdpSuccess: function (e, n) {
                var r = t.peerSessions[e]
                if (null != r && r.isPeerConnectionReady()) {
                  if (r.hasLocalDescription())
                    return (
                      (r.isError = !0),
                      Log.error(
                        'WebrtcHandler:createPeerConnectionInternal - peerSessionId:' +
                          e,
                        ERROR_SDP_MULTIPLE
                      ),
                      void t.webRTCHandlerDelegate.onWebRTCHandlerError(
                        t.peerSessions[e].getRoom(),
                        t.peerSessions[e].getTargetUser(),
                        ERROR_SDP_MULTIPLE
                      )
                    )
                  null != r &&
                    r.isPeerConnectionReady() &&
                    !r.isError &&
                    ((e =
                      t.localStreamHandler.streamConfiguration._connectType),
                    (n.sdp = Sdp.editCandidateDescription(n.sdp, e)),
                    r.setLocalDescription(n))
                }
              },
              onCreateSdpFailed: function (e, n) {
                Log.error(
                  'WebrtcHandler:onCreateSdpFailed - peerSessionId:' + e,
                  n
                ),
                  t.webRTCHandlerDelegate.onWebRTCHandlerError(
                    t.peerSessions[e].getRoom(),
                    t.peerSessions[e].getTargetUser(),
                    'onCreateSdpFailed:' + n
                  )
              },
              onSetLocalDescriptionSuccess: function (e) {
                e = t.peerSessions[e]
                e.isCaller
                  ? t.signalHandler.sendOffer(
                      e.getRoom(),
                      e.getTargetUser(),
                      e.getPeerName(),
                      e.getLocalDescription()
                    )
                  : t.signalHandler.sendAnswer(
                      e.getRoom(),
                      e.getTargetUser(),
                      e.getPeerName(),
                      e.getLocalDescription()
                    )
              },
              onSetLocalDescriptionFailed: function (e, n) {
                Log.error(
                  'WebrtcHandler:onSetLocalDescriptionFailed - peerSessionId:' +
                    e,
                  n
                ),
                  t.webRTCHandlerDelegate.onWebRTCHandlerError(
                    t.peerSessions[e].getRoom(),
                    t.peerSessions[e].getTargetUser(),
                    'onSetLocalDescriptionFailed: ' + n
                  )
              },
              onSetRemoteDescriptionSuccess: function (e) {
                e = t.peerSessions[e]
                null != e &&
                  !e.isError &&
                  e.isPeerConnectionReady() &&
                  e.drainCandidates()
              },
              onSetRemoteDescriptionFailed: function (e, n) {
                Log.error(
                  'WebrtcHandler:onSetRemoteDescriptionFailed - peerSessionId:' +
                    e,
                  n
                ),
                  t.webRTCHandlerDelegate.onWebRTCHandlerError(
                    t.peerSessions[e].getRoom(),
                    t.peerSessions[e].getTargetUser(),
                    'onSetRemoteDescriptionFailed: ' + n
                  )
              }
            },
            r = {
              onIceConnectionChange: function (e, n) {
                switch (
                  (Log.info(
                    'WebrtcHandler:onIceConnectionChange - peerSessionId:' + e,
                    n.currentTarget.iceConnectionState
                  ),
                  n.currentTarget.iceConnectionState)
                ) {
                  case 'checking':
                    t.iceCompleted[e] = !1
                    break
                  case 'completed':
                    t.iceCompleted[e] ||
                      (Log.info(
                        'WebrtcHandler:onIceConnectionChange - peerSessionId:' +
                          e,
                        'Clear ready timer'
                      ),
                      (t.iceCompleted[e] = !0),
                      clearTimeout(t.iceCompletedTimer[e]),
                      delete t.iceCompletedTimer[e],
                      Log.info(
                        'WebrtcHandler:onIceConnectionChange - peerSessionId:' +
                          e,
                        'Ready! (by iceConnectionState completed)'
                      ),
                      t.webRTCHandlerDelegate.onIceCompleted(
                        t.peerSessions[e].getRoom(),
                        t.peerSessions[e].getTargetUser()
                      ))
                    break
                  case 'connected':
                    Log.info(
                      'WebrtcHandler:onIceConnectionChange - peerSessionId:' +
                        e,
                      INFO_ICE_CONNECTED
                    ),
                      t.webRTCHandlerDelegate.onIceConnected(
                        t.peerSessions[e].getRoom(),
                        t.peerSessions[e].getTargetUser()
                      )
                    break
                  case 'closed':
                    Log.info(
                      'WebrtcHandler:onIceConnectionChange - peerSessionId:' +
                        e,
                      INFO_ICE_CLOSED
                    ),
                      t.webRTCHandlerDelegate.onIceClosed(
                        t.peerSessions[e].getRoom(),
                        t.peerSessions[e].getTargetUser()
                      )
                    break
                  case 'failed':
                    Log.error(
                      'WebrtcHandler:onIceConnectionChange - peerSessionId:' +
                        e,
                      ERROR_ICE_CONNECT_FAIL
                    ),
                      (t.peerSessions[e].isError = !0),
                      t.webRTCHandlerDelegate.onWebRTCHandlerError(
                        t.peerSessions[e].getRoom(),
                        t.peerSessions[e].getTargetUser(),
                        ERROR_ICE_CONNECT_FAIL
                      )
                    break
                  case 'disconnected':
                    Log.info(
                      'WebrtcHandler:onIceConnectionChange - peerSessionId:' +
                        e,
                      INFO_ICE_RESTART
                    ),
                      t.peerSessions[e].peerConnection.restartIce()
                  default:
                    Log.info(
                      'WebrtcHandler:onIceConnectionChange (not handle) - peerSessionId:' +
                        e,
                      n.currentTarget.iceConnectionState
                    )
                }
              },
              onIceCandidate: function (e, n) {
                var r = t.localStreamHandler.streamConfiguration._connectType
                !t.iceCompleted[e] &&
                  n &&
                  null == n.candidate &&
                  'complete' == n.target.iceGatheringState &&
                  (Log.info(
                    'WebrtcHandler:onIceCandidate - peerSessionId:' + e,
                    'Ready after 1s...'
                  ),
                  (t.iceCompletedTimer[e] = setTimeout(
                    function (e) {
                      ;(t.iceCompleted[e] = !0),
                        delete t.iceCompletedTimer[e],
                        Log.info(
                          'WebrtcHandler:onIceCandidate - peerSessionId:' + e,
                          'Ready! (receive last iceCandidate as null) '
                        ),
                        t.webRTCHandlerDelegate.onIceCompleted(
                          t.peerSessions[e].getRoom(),
                          t.peerSessions[e].getTargetUser()
                        )
                    },
                    1e3,
                    e
                  ))),
                  n.candidate &&
                    (3 == r &&
                      t.signalHandler.sendCandidate(
                        t.peerSessions[e].getRoom(),
                        t.peerSessions[e].getTargetUser(),
                        t.peerSessions[e].getPeerName(),
                        n.candidate
                      ),
                    2 == r &&
                      'relay' == n.candidate.type &&
                      t.signalHandler.sendCandidate(
                        t.peerSessions[e].getRoom(),
                        t.peerSessions[e].getTargetUser(),
                        t.peerSessions[e].getPeerName(),
                        n.candidate
                      ),
                    1 == r &&
                      'relay' !== n.candidate.type &&
                      t.signalHandler.sendCandidate(
                        t.peerSessions[e].getRoom(),
                        t.peerSessions[e].getTargetUser(),
                        t.peerSessions[e].getPeerName(),
                        n.candidate
                      ))
              }
            },
            o = e.id.split('_')
          e.setPeerConnectionObserver(r),
            e.setSdpObserver(n),
            e.initPeerConnection(this.iceServers, o[o.length - 1])
        }
      }
    ]),
    t
  )
})()
function _classCallCheck(e, t) {
  if (!(e instanceof t))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(e, t) {
  for (var n = 0; n < t.length; n++) {
    var o = t[n]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(e, o.key, o)
  }
}
function _createClass(e, t, n) {
  return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e
}
var SignalHandler = (function () {
  'use strict'
  function o(e, t, n) {
    _classCallCheck(this, o),
      (this.signalingHandlerDelegate = e),
      (this.socketHandler = t),
      (this.roomHandler = n)
  }
  return (
    _createClass(o, [
      {
        key: 'handleMessageSignal',
        value: function (e) {
          var t = new ChatMessage()
          t.parseData(e)
          var n = this.roomHandler.getRoom(t.getRoomName()),
            e = n.getMember(t.getFrom())
          messageListener.onMessage(n, e, t.getContent())
        }
      },
      {
        key: 'handleNotifySignal',
        value: function (e) {
          var t, n, o, a, s
          'enter_fail' == e.event
            ? ((t = new EnterFailMessage()).parseData(e),
              this.roomHandler.removeRoom(t.getRoomName()),
              Log.error(
                'SignalHandler:handleNotifySignal',
                'room:' +
                  t.getRoomName() +
                  ' msg:' +
                  t.getErrorMsg() +
                  '-' +
                  INFO_JOIN_FAIL
              ),
              roomListener.onJoinRoomFail(t.getRoomName(), t.getErrorMsg()))
            : 'exit_fail' == e.event
            ? ((n = new ExitFailMessage()).parseData(e),
              Log.error(
                'SignalHandler:handleNotifySignal',
                'room:' +
                  n.getRoomName() +
                  ' msg:' +
                  n.getErrorMsg() +
                  '-' +
                  INFO_LEAVE_FAIL
              ),
              roomListener.onLeaveRoomFail(n.getRoomName(), n.getErrorMsg()))
            : 'online' == e.event || 'offline' == e.event
            ? ((t = new StatusMessage()).parseData(e),
              (o = (n = this.roomHandler.getRoom(t.getRoomName())).getMember(
                t.getUid()
              )),
              'online' == e.event
                ? (this.roomHandler.setStatus(
                    t.getRoomName(),
                    o,
                    User.STATUS_ONLINE
                  ),
                  roomListener.onOnline(n, o))
                : 'offline' == e.event &&
                  (this.roomHandler.setStatus(
                    t.getRoomName(),
                    o,
                    User.STATUS_OFFLINE
                  ),
                  roomListener.onOffline(n, o)))
            : 'update-user-info' == e.event
            ? ((s = new UpdateUserInfoMessage()).parseData(e),
              (a = (o = this.roomHandler.getRoom(s.getRoomName())).getMember(
                s.getUid()
              )),
              this.roomHandler.updateUserInfo(
                o.getRoomName(),
                a,
                s.getAttribute(),
                s.getNewValue()
              ),
              o.getMyUser().equals(a) ||
                roomListener.onUserInfoChanged(
                  o,
                  a,
                  s.getAttribute(),
                  s.getOldValue(),
                  s.getNewValue()
                ))
            : 'update-room-info' == e.event &&
              ((a = new UpdateRoomInfoMessage()).parseData(e),
              (e = (s = this.roomHandler.getRoom(a.getRoomName())).getMember(
                a.getByUser()
              )),
              this.roomHandler.updateRoomInfo(
                s.getRoomName(),
                a.getAttribute(),
                a.getNewValue()
              ),
              roomListener.onRoomInfoChanged(
                s,
                e,
                a.getAttribute(),
                a.getOldValue(),
                a.getNewValue()
              ))
        }
      },
      {
        key: 'handleRoomSignal',
        value: function (e) {
          var t = new RoomMessage()
          t.parseData(e),
            this.roomHandler.updateRoom(
              t.getRoomName(),
              t.getMembers(),
              t.getLeftMember(),
              t.getJoinedMember(),
              t.getInfo()
            )
        }
      },
      {
        key: 'joinRoom',
        value: function (e, t) {
          var n
          this.socketHandler.isConnected() &&
            (((n = new Object()).room_name = e),
            (n.nick_name = t.getName()),
            (n.uid = t.getUID()),
            (n.status = t.getStatus()),
            (n.info = t.getInfo()),
            this.socketHandler.emit('enter', n))
        }
      },
      {
        key: 'leaveRoom',
        value: function (e) {
          var t
          this.socketHandler.isConnected() &&
            (((t = new Object()).room_name = e.getRoomName()),
            (t.uid = e.getMyUser().getUID()),
            this.socketHandler.emit('exit', t))
        }
      },
      {
        key: 'updateMyInfo',
        value: function (e, t, n) {
          this.socketHandler.isConnected() &&
            ((n = new RoomUpdateMyInfoMessage(
              e.getRoomName(),
              e.getMyUser().getUID(),
              t,
              n
            )),
            this.socketHandler.emit('room_update_my_info', n.toJson()))
        }
      },
      {
        key: 'updateRoomInfo',
        value: function (e, t, n) {
          this.socketHandler.isConnected() &&
            ((n = new RoomUpdateInfoMessage(
              e.getRoomName(),
              e.getMyUser().getUID(),
              t,
              n
            )),
            this.socketHandler.emit('room_update_info', n.toJson()))
        }
      },
      {
        key: 'sendMessage',
        value: function (e, t, n, o) {
          this.socketHandler.isConnected() && null != o
            ? ((o = t
                ? new ChatMessage(
                    e.getRoomName(),
                    e.getMyUser().getUID(),
                    n,
                    o,
                    t.getUID()
                  )
                : new ChatMessage(
                    e.getRoomName(),
                    e.getMyUser().getUID(),
                    n,
                    o
                  )),
              this.socketHandler.emit('message', o.toJson()))
            : messageListener.onError(e, t, ERROR_SEND_MSG_SIGNALING_FAIL)
        }
      },
      {
        key: 'sendOnlineStatus',
        value: function (e) {
          var t
          this.socketHandler.isConnected() &&
            null != e &&
            (((t = new Object()).uid = e), this.socketHandler.emit('online', t))
        }
      },
      {
        key: 'sendReconnectStatus',
        value: function (e) {
          var t
          this.socketHandler.isConnected() &&
            null != e &&
            (((t = new Object()).uid = e),
            this.socketHandler.emit('re-connect', t))
        }
      },
      {
        key: 'handleVideoChatSignal',
        value: function (e) {
          var t, n, o, a, s, r, i, g, l, m
          'call' == e.type
            ? ((n = new CallMessage()).parseData(e),
              (n = (t = this.roomHandler.getRoom(n.getRoomName())).getMember(
                n.getFrom()
              )),
              this.signalingHandlerDelegate.onBeCalled(t, n))
            : 'response' == e.type
            ? ((s = new ResponseMessage()).parseData(e),
              (a = (o = this.roomHandler.getRoom(s.getRoomName())).getMember(
                s.getFrom()
              )),
              this.signalingHandlerDelegate.onBeResponded(o, a, s.deny))
            : 'offer' == e.type
            ? ((r = new OfferMessage()).parseData(e),
              (a = (o = this.roomHandler.getRoom(r.getRoomName())).getMember(
                r.getFrom()
              )),
              (s = r.peerName),
              null != this.signalingHandlerDelegate &&
                this.signalingHandlerDelegate.onReceiveOffer(
                  o,
                  a,
                  s,
                  r.getSdp()
                ))
            : 'answer' == e.type
            ? ((l = new AnswerMessage()).parseData(e),
              (i = (r = this.roomHandler.getRoom(l.getRoomName())).getMember(
                l.getFrom()
              )),
              (g = l.peerName),
              null != this.signalingHandlerDelegate &&
                this.signalingHandlerDelegate.onReceiveAnswer(
                  r,
                  i,
                  g,
                  l.getSdp()
                ))
            : 'candidate' == e.type
            ? ((m = new CandidateMessage()).parseData(e),
              (g = (i = this.roomHandler.getRoom(m.getRoomName())).getMember(
                m.getFrom()
              )),
              (l = m.peerName),
              null != this.signalingHandlerDelegate &&
                this.signalingHandlerDelegate.onReceiveCandidate(
                  i,
                  g,
                  l,
                  m.getSdpMLineIndex(),
                  m.getSdpMid(),
                  m.getCandidate()
                ))
            : 'hangup' == e.type &&
              ((m = new HangupMessage()).parseData(e),
              (m = (e = this.roomHandler.getRoom(m.getRoomName())).getMember(
                m.getFrom()
              )),
              null != this.signalingHandlerDelegate &&
                this.signalingHandlerDelegate.onReceiveHangup(e, m))
        }
      },
      {
        key: 'call',
        value: function (e, t) {
          this.socketHandler.isConnected() &&
            ((t = new CallMessage(
              e.getRoomName(),
              e.getMyUser().getUID(),
              t.getUID()
            )),
            this.socketHandler.emit('video_chat', t.toJson()))
        }
      },
      {
        key: 'response',
        value: function (e, t, n) {
          this.socketHandler.isConnected() &&
            ((n = new ResponseMessage(
              e.getRoomName(),
              e.getMyUser().getUID(),
              t.getUID(),
              n
            )),
            this.socketHandler.emit('video_chat', n.toJson()))
        }
      },
      {
        key: 'sendOffer',
        value: function (e, t, n, o) {
          this.socketHandler.isConnected() &&
            null != t &&
            null != o &&
            ((o = new OfferMessage(
              e.getRoomName(),
              e.getMyUser().getUID(),
              t.getUID(),
              n,
              o.sdp
            )),
            this.socketHandler.emit('video_chat', o.toJson()))
        }
      },
      {
        key: 'sendAnswer',
        value: function (e, t, n, o) {
          this.socketHandler.isConnected() &&
            null != t &&
            null != o &&
            ((o = new AnswerMessage(
              e.getRoomName(),
              e.getMyUser().getUID(),
              t.getUID(),
              n,
              o.sdp
            )),
            this.socketHandler.emit('video_chat', o.toJson()))
        }
      },
      {
        key: 'sendCandidate',
        value: function (e, t, n, o) {
          this.socketHandler.isConnected() &&
            null != t &&
            null != o &&
            ((o = new CandidateMessage(
              e.getRoomName(),
              e.getMyUser().getUID(),
              t.getUID(),
              n,
              o.sdpMLineIndex,
              o.sdpMid,
              o.candidate
            )),
            this.socketHandler.emit('video_chat', o.toJson()))
        }
      },
      {
        key: 'hangup',
        value: function (e, t) {
          this.socketHandler.isConnected() &&
            ((t = new HangupMessage(
              e.getRoomName(),
              e.getMyUser().getUID(),
              t.getUID()
            )),
            this.socketHandler.emit('video_chat', t.toJson()))
        }
      }
    ]),
    o
  )
})()
function SocketHandler(e) {
  ;(this.socket = null),
    (this.socketUrl = void 0),
    (this.socketHandlerDelegate = e),
    (this.isConnectedStatus = !1),
    (this.isRequestedDisconnect = !1),
    (this.__construct = function () {
      this.socketHandlerDelegate = e
    }),
    (this.setSocketUrl = function (e) {
      this.socketUrl = e
    }),
    (this.connect = function () {
      return null == this.socketUrl
        ? (Log.error('SocketHandler:connect', ERROR_SIGNALING_URL_NOT_SET), !1)
        : (null != this.socket && this.disconnect(),
          this.initializeSocket(this.socketUrl),
          this.listenEvent(),
          !(this.isRequestedDisconnect = !1))
    }),
    (this.disconnect = function () {
      ;(this.isRequestedDisconnect = !0),
        null != this.socket && this.socket.disconnect()
    }),
    (this.isConnected = function () {
      return null != this.socket && this.isConnectedStatus
    }),
    (this.emit = function (e, t) {
      null != this.socket && this.isConnectedStatus && this.socket.emit(e, t)
    }),
    (this.getMySocketId = function () {
      return null == this.socket ? null : this.socket.id
    }),
    (this.initializeSocket = function (e) {
      this.socket = io(this.socketUrl, { transports: ['websocket'] }).connect()
    }),
    (this.listenEvent = function () {
      var t = this
      this.socket.on('connect', function () {
        ;(t.isConnectedStatus = !0),
          t.socketHandlerDelegate.onConnected(),
          Log.info('SocketHandler:connect', INFO_SIGNALING_CONNECTED),
          connectionListener.onConnectSuccess()
      }),
        this.socket.on('disconnect', function () {
          ;(t.isConnectedStatus = !1),
            Log.info('SocketHandler:disconnect', INFO_SIGNALING_DISCONNECTED),
            t.socketHandlerDelegate.onDisconnected(t.isRequestedDisconnect)
        }),
        this.socket.on('reconnect', function () {
          t.isConnectedStatus ||
            ((t.isConnectedStatus = !0),
            Log.info('SocketHandler:reconnect', INFO_SIGNALING_RECONNECTED),
            t.socketHandlerDelegate.onReconnected())
        }),
        this.socket.on('connect_error', function (e) {
          Log.error(
            'SocketHandler:connect_error',
            ERROR_SIGNALING_CONNECT_FAIL + ':' + e
          ),
            connectionListener.onConnectFail(e)
        }),
        this.socket.on('error', function (e) {
          Log.error('SocketHandler:error', ERROR_SIGNALING_HAS_ERROR + ':' + e),
            t.socketHandlerDelegate.onWebSocketError(e)
        }),
        this.socket.on('message', function (e) {
          Log.debug('SocketHandler:message', JSON.stringify(e)),
            t.socketHandlerDelegate.onReceiveMessageSignal(e)
        }),
        this.socket.on('notify', function (e) {
          Log.debug('SocketHandler:notify', JSON.stringify(e)),
            t.socketHandlerDelegate.onReceiveNotifySignal(e)
        }),
        this.socket.on('room', function (e) {
          Log.debug('SocketHandler:room', JSON.stringify(e)),
            t.socketHandlerDelegate.onReceiveRoomSignal(e)
        }),
        this.socket.on('video_chat', function (e) {
          Log.debug('SocketHandler:video_chat', JSON.stringify(e)),
            t.socketHandlerDelegate.onReceiveVideoChatSignal(e)
        })
    }),
    this.__construct()
}
!(function (e) {
  'object' == typeof exports && 'undefined' != typeof module
    ? (module.exports = e())
    : 'function' == typeof define && define.amd
    ? define([], e)
    : (('undefined' != typeof window
        ? window
        : 'undefined' != typeof global
        ? global
        : 'undefined' != typeof self
        ? self
        : this
      ).adapter = e())
})(function () {
  return (function n(i, o, a) {
    function s(t, e) {
      if (!o[t]) {
        if (!i[t]) {
          var r = 'function' == typeof require && require
          if (!e && r) return r(t, !0)
          if (c) return c(t, !0)
          r = new Error("Cannot find module '" + t + "'")
          throw ((r.code = 'MODULE_NOT_FOUND'), r)
        }
        r = o[t] = { exports: {} }
        i[t][0].call(
          r.exports,
          function (e) {
            return s(i[t][1][e] || e)
          },
          r,
          r.exports,
          n,
          i,
          o,
          a
        )
      }
      return o[t].exports
    }
    for (
      var c = 'function' == typeof require && require, e = 0;
      e < a.length;
      e++
    )
      s(a[e])
    return s
  })(
    {
      1: [
        function (e, t, r) {
          'use strict'
          e = (0, e('./adapter_factory.js').adapterFactory)({ window: window })
          t.exports = e
        },
        { './adapter_factory.js': 2 }
      ],
      2: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 }),
            (r.adapterFactory = function () {
              var e = (
                  0 < arguments.length && void 0 !== arguments[0]
                    ? arguments[0]
                    : {}
                ).window,
                t =
                  1 < arguments.length && void 0 !== arguments[1]
                    ? arguments[1]
                    : {
                        shimChrome: !0,
                        shimFirefox: !0,
                        shimEdge: !0,
                        shimSafari: !0
                      },
                r = o.log,
                n = o.detectBrowser(e),
                i = {
                  browserDetails: n,
                  commonShim: p,
                  extractVersion: o.extractVersion,
                  disableLog: o.disableLog,
                  disableWarnings: o.disableWarnings
                }
              switch (n.browser) {
                case 'chrome':
                  if (!a || !a.shimPeerConnection || !t.shimChrome)
                    return (
                      r('Chrome shim is not included in this adapter release.'),
                      i
                    )
                  r('adapter.js shimming chrome.'),
                    (i.browserShim = a).shimGetUserMedia(e),
                    a.shimMediaStream(e),
                    a.shimPeerConnection(e),
                    a.shimOnTrack(e),
                    a.shimAddTrackRemoveTrack(e),
                    a.shimGetSendersWithDtmf(e),
                    a.shimGetStats(e),
                    a.shimSenderReceiverGetStats(e),
                    a.fixNegotiationNeeded(e),
                    p.shimRTCIceCandidate(e),
                    p.shimConnectionState(e),
                    p.shimMaxMessageSize(e),
                    p.shimSendThrowTypeError(e),
                    p.removeAllowExtmapMixed(e)
                  break
                case 'firefox':
                  if (!c || !c.shimPeerConnection || !t.shimFirefox)
                    return (
                      r(
                        'Firefox shim is not included in this adapter release.'
                      ),
                      i
                    )
                  r('adapter.js shimming firefox.'),
                    (i.browserShim = c).shimGetUserMedia(e),
                    c.shimPeerConnection(e),
                    c.shimOnTrack(e),
                    c.shimRemoveStream(e),
                    c.shimSenderGetStats(e),
                    c.shimReceiverGetStats(e),
                    c.shimRTCDataChannel(e),
                    c.shimAddTransceiver(e),
                    c.shimCreateOffer(e),
                    c.shimCreateAnswer(e),
                    p.shimRTCIceCandidate(e),
                    p.shimConnectionState(e),
                    p.shimMaxMessageSize(e),
                    p.shimSendThrowTypeError(e)
                  break
                case 'edge':
                  if (!s || !s.shimPeerConnection || !t.shimEdge)
                    return (
                      r(
                        'MS edge shim is not included in this adapter release.'
                      ),
                      i
                    )
                  r('adapter.js shimming edge.'),
                    (i.browserShim = s).shimGetUserMedia(e),
                    s.shimGetDisplayMedia(e),
                    s.shimPeerConnection(e),
                    s.shimReplaceTrack(e),
                    p.shimMaxMessageSize(e),
                    p.shimSendThrowTypeError(e)
                  break
                case 'safari':
                  if (!d || !t.shimSafari)
                    return (
                      r('Safari shim is not included in this adapter release.'),
                      i
                    )
                  r('adapter.js shimming safari.'),
                    (i.browserShim = d).shimRTCIceServerUrls(e),
                    d.shimCreateOfferLegacy(e),
                    d.shimCallbacksAPI(e),
                    d.shimLocalStreamsAPI(e),
                    d.shimRemoteStreamsAPI(e),
                    d.shimTrackEventTransceiver(e),
                    d.shimGetUserMedia(e),
                    p.shimRTCIceCandidate(e),
                    p.shimMaxMessageSize(e),
                    p.shimSendThrowTypeError(e),
                    p.removeAllowExtmapMixed(e)
                  break
                default:
                  r('Unsupported browser!')
              }
              return i
            })
          var o = n(e('./utils')),
            a = n(e('./chrome/chrome_shim')),
            s = n(e('./edge/edge_shim')),
            c = n(e('./firefox/firefox_shim')),
            d = n(e('./safari/safari_shim')),
            p = n(e('./common_shim'))
          function n(e) {
            if (e && e.__esModule) return e
            var t = {}
            if (null != e)
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
            return (t.default = e), t
          }
        },
        {
          './chrome/chrome_shim': 3,
          './common_shim': 6,
          './edge/edge_shim': 7,
          './firefox/firefox_shim': 11,
          './safari/safari_shim': 14,
          './utils': 15
        }
      ],
      3: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 }),
            (r.shimGetDisplayMedia = r.shimGetUserMedia = void 0)
          var s =
              'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
                ? function (e) {
                    return typeof e
                  }
                : function (e) {
                    return e &&
                      'function' == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? 'symbol'
                      : typeof e
                  },
            n = e('./getusermedia')
          Object.defineProperty(r, 'shimGetUserMedia', {
            enumerable: !0,
            get: function () {
              return n.shimGetUserMedia
            }
          })
          var i = e('./getdisplaymedia')
          Object.defineProperty(r, 'shimGetDisplayMedia', {
            enumerable: !0,
            get: function () {
              return i.shimGetDisplayMedia
            }
          }),
            (r.shimMediaStream = function (e) {
              e.MediaStream = e.MediaStream || e.webkitMediaStream
            }),
            (r.shimOnTrack = function (o) {
              var e
              'object' !== (void 0 === o ? 'undefined' : s(o)) ||
              !o.RTCPeerConnection ||
              'ontrack' in o.RTCPeerConnection.prototype
                ? c.wrapPeerConnectionEvent(o, 'track', function (e) {
                    return (
                      e.transceiver ||
                        Object.defineProperty(e, 'transceiver', {
                          value: { receiver: e.receiver }
                        }),
                      e
                    )
                  })
                : (Object.defineProperty(
                    o.RTCPeerConnection.prototype,
                    'ontrack',
                    {
                      get: function () {
                        return this._ontrack
                      },
                      set: function (e) {
                        this._ontrack &&
                          this.removeEventListener('track', this._ontrack),
                          this.addEventListener('track', (this._ontrack = e))
                      },
                      enumerable: !0,
                      configurable: !0
                    }
                  ),
                  (e = o.RTCPeerConnection.prototype.setRemoteDescription),
                  (o.RTCPeerConnection.prototype.setRemoteDescription =
                    function () {
                      var i = this
                      return (
                        this._ontrackpoly ||
                          ((this._ontrackpoly = function (n) {
                            n.stream.addEventListener('addtrack', function (t) {
                              var e = o.RTCPeerConnection.prototype.getReceivers
                                  ? i.getReceivers().find(function (e) {
                                      return (
                                        e.track && e.track.id === t.track.id
                                      )
                                    })
                                  : { track: t.track },
                                r = new Event('track')
                              ;(r.track = t.track),
                                (r.receiver = e),
                                (r.transceiver = { receiver: e }),
                                (r.streams = [n.stream]),
                                i.dispatchEvent(r)
                            }),
                              n.stream.getTracks().forEach(function (t) {
                                var e = o.RTCPeerConnection.prototype
                                    .getReceivers
                                    ? i.getReceivers().find(function (e) {
                                        return e.track && e.track.id === t.id
                                      })
                                    : { track: t },
                                  r = new Event('track')
                                ;(r.track = t),
                                  (r.receiver = e),
                                  (r.transceiver = { receiver: e }),
                                  (r.streams = [n.stream]),
                                  i.dispatchEvent(r)
                              })
                          }),
                          this.addEventListener(
                            'addstream',
                            this._ontrackpoly
                          )),
                        e.apply(this, arguments)
                      )
                    }))
            }),
            (r.shimGetSendersWithDtmf = function (e) {
              var n, i, t, r, o, a
              'object' === (void 0 === e ? 'undefined' : s(e)) &&
              e.RTCPeerConnection &&
              !('getSenders' in e.RTCPeerConnection.prototype) &&
              'createDTMFSender' in e.RTCPeerConnection.prototype
                ? ((n = function (e, t) {
                    return {
                      track: t,
                      get dtmf() {
                        return (
                          void 0 === this._dtmf &&
                            ('audio' === t.kind
                              ? (this._dtmf = e.createDTMFSender(t))
                              : (this._dtmf = null)),
                          this._dtmf
                        )
                      },
                      _pc: e
                    }
                  }),
                  e.RTCPeerConnection.prototype.getSenders ||
                    ((e.RTCPeerConnection.prototype.getSenders = function () {
                      return (
                        (this._senders = this._senders || []),
                        this._senders.slice()
                      )
                    }),
                    (i = e.RTCPeerConnection.prototype.addTrack),
                    (e.RTCPeerConnection.prototype.addTrack = function (e, t) {
                      var r = i.apply(this, arguments)
                      return r || ((r = n(this, e)), this._senders.push(r)), r
                    }),
                    (t = e.RTCPeerConnection.prototype.removeTrack),
                    (e.RTCPeerConnection.prototype.removeTrack = function (e) {
                      t.apply(this, arguments)
                      e = this._senders.indexOf(e)
                      ;-1 !== e && this._senders.splice(e, 1)
                    })),
                  (r = e.RTCPeerConnection.prototype.addStream),
                  (e.RTCPeerConnection.prototype.addStream = function (e) {
                    var t = this
                    ;(this._senders = this._senders || []),
                      r.apply(this, [e]),
                      e.getTracks().forEach(function (e) {
                        t._senders.push(n(t, e))
                      })
                  }),
                  (o = e.RTCPeerConnection.prototype.removeStream),
                  (e.RTCPeerConnection.prototype.removeStream = function (e) {
                    var r = this
                    ;(this._senders = this._senders || []),
                      o.apply(this, [e]),
                      e.getTracks().forEach(function (t) {
                        var e = r._senders.find(function (e) {
                          return e.track === t
                        })
                        e && r._senders.splice(r._senders.indexOf(e), 1)
                      })
                  }))
                : 'object' === (void 0 === e ? 'undefined' : s(e)) &&
                  e.RTCPeerConnection &&
                  'getSenders' in e.RTCPeerConnection.prototype &&
                  'createDTMFSender' in e.RTCPeerConnection.prototype &&
                  e.RTCRtpSender &&
                  !('dtmf' in e.RTCRtpSender.prototype) &&
                  ((a = e.RTCPeerConnection.prototype.getSenders),
                  (e.RTCPeerConnection.prototype.getSenders = function () {
                    var t = this,
                      e = a.apply(this, [])
                    return (
                      e.forEach(function (e) {
                        return (e._pc = t)
                      }),
                      e
                    )
                  }),
                  Object.defineProperty(e.RTCRtpSender.prototype, 'dtmf', {
                    get: function () {
                      return (
                        void 0 === this._dtmf &&
                          ('audio' === this.track.kind
                            ? (this._dtmf = this._pc.createDTMFSender(
                                this.track
                              ))
                            : (this._dtmf = null)),
                        this._dtmf
                      )
                    }
                  }))
            }),
            (r.shimGetStats = function (e) {
              var a
              e.RTCPeerConnection &&
                ((a = e.RTCPeerConnection.prototype.getStats),
                (e.RTCPeerConnection.prototype.getStats = function () {
                  var r = this,
                    e = Array.prototype.slice.call(arguments),
                    t = e[0],
                    n = e[1],
                    e = e[2]
                  return 0 < arguments.length && 'function' == typeof t
                    ? a.apply(this, arguments)
                    : 0 !== a.length ||
                      (0 !== arguments.length && 'function' == typeof t)
                    ? 2 <= arguments.length
                      ? a.apply(this, [
                          function (e) {
                            n(o(i(e)))
                          },
                          t
                        ])
                      : new Promise(function (t, e) {
                          a.apply(r, [
                            function (e) {
                              t(o(i(e)))
                            },
                            e
                          ])
                        }).then(n, e)
                    : a.apply(this, [])
                  function i(e) {
                    var n = {}
                    return (
                      e.result().forEach(function (t) {
                        var r = {
                          id: t.id,
                          timestamp: t.timestamp,
                          type:
                            {
                              localcandidate: 'local-candidate',
                              remotecandidate: 'remote-candidate'
                            }[t.type] || t.type
                        }
                        t.names().forEach(function (e) {
                          r[e] = t.stat(e)
                        }),
                          (n[r.id] = r)
                      }),
                      n
                    )
                  }
                  function o(t) {
                    return new Map(
                      Object.keys(t).map(function (e) {
                        return [e, t[e]]
                      })
                    )
                  }
                }))
            }),
            (r.shimSenderReceiverGetStats = function (o) {
              var r, t, n, a
              'object' === (void 0 === o ? 'undefined' : s(o)) &&
                o.RTCPeerConnection &&
                o.RTCRtpSender &&
                o.RTCRtpReceiver &&
                ('getStats' in o.RTCRtpSender.prototype ||
                  ((r = o.RTCPeerConnection.prototype.getSenders) &&
                    (o.RTCPeerConnection.prototype.getSenders = function () {
                      var t = this,
                        e = r.apply(this, [])
                      return (
                        e.forEach(function (e) {
                          return (e._pc = t)
                        }),
                        e
                      )
                    }),
                  (t = o.RTCPeerConnection.prototype.addTrack) &&
                    (o.RTCPeerConnection.prototype.addTrack = function () {
                      var e = t.apply(this, arguments)
                      return (e._pc = this), e
                    }),
                  (o.RTCRtpSender.prototype.getStats = function () {
                    var t = this
                    return this._pc.getStats().then(function (e) {
                      return c.filterStats(e, t.track, !0)
                    })
                  })),
                'getStats' in o.RTCRtpReceiver.prototype ||
                  ((n = o.RTCPeerConnection.prototype.getReceivers) &&
                    (o.RTCPeerConnection.prototype.getReceivers = function () {
                      var t = this,
                        e = n.apply(this, [])
                      return (
                        e.forEach(function (e) {
                          return (e._pc = t)
                        }),
                        e
                      )
                    }),
                  c.wrapPeerConnectionEvent(o, 'track', function (e) {
                    return (e.receiver._pc = e.srcElement), e
                  }),
                  (o.RTCRtpReceiver.prototype.getStats = function () {
                    var t = this
                    return this._pc.getStats().then(function (e) {
                      return c.filterStats(e, t.track, !1)
                    })
                  })),
                'getStats' in o.RTCRtpSender.prototype &&
                  'getStats' in o.RTCRtpReceiver.prototype &&
                  ((a = o.RTCPeerConnection.prototype.getStats),
                  (o.RTCPeerConnection.prototype.getStats = function (e) {
                    if (
                      0 < arguments.length &&
                      e instanceof o.MediaStreamTrack
                    ) {
                      var t = e,
                        r = void 0,
                        n = void 0,
                        i = void 0
                      return (
                        this.getSenders().forEach(function (e) {
                          e.track === t && (r ? (i = !0) : (r = e))
                        }),
                        this.getReceivers().forEach(function (e) {
                          return (
                            e.track === t && (n ? (i = !0) : (n = e)),
                            e.track === t
                          )
                        }),
                        i || (r && n)
                          ? Promise.reject(
                              new DOMException(
                                'There are more than one sender or receiver for the track.',
                                'InvalidAccessError'
                              )
                            )
                          : r
                          ? r.getStats()
                          : n
                          ? n.getStats()
                          : Promise.reject(
                              new DOMException(
                                'There is no sender or receiver for the track.',
                                'InvalidAccessError'
                              )
                            )
                      )
                    }
                    return a.apply(this, arguments)
                  })))
            }),
            (r.shimAddTrackRemoveTrackWithNative = p),
            (r.shimAddTrackRemoveTrack = function (i) {
              if (i.RTCPeerConnection) {
                var e = c.detectBrowser(i)
                if (i.RTCPeerConnection.prototype.addTrack && 65 <= e.version)
                  return p(i)
                var r = i.RTCPeerConnection.prototype.getLocalStreams
                i.RTCPeerConnection.prototype.getLocalStreams = function () {
                  var t = this,
                    e = r.apply(this)
                  return (
                    (this._reverseStreams = this._reverseStreams || {}),
                    e.map(function (e) {
                      return t._reverseStreams[e.id]
                    })
                  )
                }
                var n = i.RTCPeerConnection.prototype.addStream
                i.RTCPeerConnection.prototype.addStream = function (e) {
                  var t,
                    r = this
                  ;(this._streams = this._streams || {}),
                    (this._reverseStreams = this._reverseStreams || {}),
                    e.getTracks().forEach(function (t) {
                      if (
                        r.getSenders().find(function (e) {
                          return e.track === t
                        })
                      )
                        throw new DOMException(
                          'Track already exists.',
                          'InvalidAccessError'
                        )
                    }),
                    this._reverseStreams[e.id] ||
                      ((t = new i.MediaStream(e.getTracks())),
                      (this._streams[e.id] = t),
                      (this._reverseStreams[t.id] = e),
                      (e = t)),
                    n.apply(this, [e])
                }
                var t = i.RTCPeerConnection.prototype.removeStream
                ;(i.RTCPeerConnection.prototype.removeStream = function (e) {
                  ;(this._streams = this._streams || {}),
                    (this._reverseStreams = this._reverseStreams || {}),
                    t.apply(this, [this._streams[e.id] || e]),
                    delete this._reverseStreams[(this._streams[e.id] || e).id],
                    delete this._streams[e.id]
                }),
                  (i.RTCPeerConnection.prototype.addTrack = function (t, e) {
                    var r = this
                    if ('closed' === this.signalingState)
                      throw new DOMException(
                        "The RTCPeerConnection's signalingState is 'closed'.",
                        'InvalidStateError'
                      )
                    var n = [].slice.call(arguments, 1)
                    if (
                      1 !== n.length ||
                      !n[0].getTracks().find(function (e) {
                        return e === t
                      })
                    )
                      throw new DOMException(
                        'The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.',
                        'NotSupportedError'
                      )
                    if (
                      this.getSenders().find(function (e) {
                        return e.track === t
                      })
                    )
                      throw new DOMException(
                        'Track already exists.',
                        'InvalidAccessError'
                      )
                    ;(this._streams = this._streams || {}),
                      (this._reverseStreams = this._reverseStreams || {})
                    n = this._streams[e.id]
                    return (
                      n
                        ? (n.addTrack(t),
                          Promise.resolve().then(function () {
                            r.dispatchEvent(new Event('negotiationneeded'))
                          }))
                        : ((n = new i.MediaStream([t])),
                          (this._streams[e.id] = n),
                          (this._reverseStreams[n.id] = e),
                          this.addStream(n)),
                      this.getSenders().find(function (e) {
                        return e.track === t
                      })
                    )
                  }),
                  ['createOffer', 'createAnswer'].forEach(function (e) {
                    var n = i.RTCPeerConnection.prototype[e],
                      t = d({}, e, function () {
                        var t = this,
                          r = arguments
                        return arguments.length &&
                          'function' == typeof arguments[0]
                          ? n.apply(this, [
                              function (e) {
                                e = s(t, e)
                                r[0].apply(null, [e])
                              },
                              function (e) {
                                r[1] && r[1].apply(null, e)
                              },
                              arguments[2]
                            ])
                          : n.apply(this, arguments).then(function (e) {
                              return s(t, e)
                            })
                      })
                    i.RTCPeerConnection.prototype[e] = t[e]
                  })
                var o = i.RTCPeerConnection.prototype.setLocalDescription
                i.RTCPeerConnection.prototype.setLocalDescription = function (
                  e
                ) {
                  return (
                    arguments.length &&
                      e.type &&
                      ((r = this),
                      (n = (t = e).sdp),
                      Object.keys(r._reverseStreams || []).forEach(function (
                        e
                      ) {
                        var t = r._reverseStreams[e],
                          e = r._streams[t.id]
                        n = n.replace(new RegExp(t.id, 'g'), e.id)
                      }),
                      (e = new RTCSessionDescription({
                        type: t.type,
                        sdp: n
                      }))),
                    o.apply(this, arguments)
                  )
                  var r, t, n
                }
                var a = Object.getOwnPropertyDescriptor(
                  i.RTCPeerConnection.prototype,
                  'localDescription'
                )
                Object.defineProperty(
                  i.RTCPeerConnection.prototype,
                  'localDescription',
                  {
                    get: function () {
                      var e = a.get.apply(this)
                      return '' === e.type ? e : s(this, e)
                    }
                  }
                ),
                  (i.RTCPeerConnection.prototype.removeTrack = function (t) {
                    var r = this
                    if ('closed' === this.signalingState)
                      throw new DOMException(
                        "The RTCPeerConnection's signalingState is 'closed'.",
                        'InvalidStateError'
                      )
                    if (!t._pc)
                      throw new DOMException(
                        'Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.',
                        'TypeError'
                      )
                    if (t._pc !== this)
                      throw new DOMException(
                        'Sender was not created by this connection.',
                        'InvalidAccessError'
                      )
                    this._streams = this._streams || {}
                    var n = void 0
                    Object.keys(this._streams).forEach(function (e) {
                      r._streams[e].getTracks().find(function (e) {
                        return t.track === e
                      }) && (n = r._streams[e])
                    }),
                      n &&
                        (1 === n.getTracks().length
                          ? this.removeStream(this._reverseStreams[n.id])
                          : n.removeTrack(t.track),
                        this.dispatchEvent(new Event('negotiationneeded')))
                  })
              }
              function s(r, e) {
                var n = e.sdp
                return (
                  Object.keys(r._reverseStreams || []).forEach(function (e) {
                    var t = r._reverseStreams[e],
                      e = r._streams[t.id]
                    n = n.replace(new RegExp(e.id, 'g'), t.id)
                  }),
                  new RTCSessionDescription({ type: e.type, sdp: n })
                )
              }
            }),
            (r.shimPeerConnection = function (n) {
              var r,
                i = c.detectBrowser(n)
              !n.RTCPeerConnection &&
                n.webkitRTCPeerConnection &&
                (n.RTCPeerConnection = n.webkitRTCPeerConnection),
                n.RTCPeerConnection &&
                  (i.version < 53 &&
                    [
                      'setLocalDescription',
                      'setRemoteDescription',
                      'addIceCandidate'
                    ].forEach(function (e) {
                      var t = n.RTCPeerConnection.prototype[e],
                        r = d({}, e, function () {
                          return (
                            (arguments[0] = new (
                              'addIceCandidate' === e
                                ? n.RTCIceCandidate
                                : n.RTCSessionDescription
                            )(arguments[0])),
                            t.apply(this, arguments)
                          )
                        })
                      n.RTCPeerConnection.prototype[e] = r[e]
                    }),
                  (r = n.RTCPeerConnection.prototype.addIceCandidate),
                  (n.RTCPeerConnection.prototype.addIceCandidate = function (
                    e,
                    t
                  ) {
                    return e
                      ? i.version < 78 && e && '' === e.candidate
                        ? Promise.resolve()
                        : r.apply(this, arguments)
                      : (t && t.apply(null), Promise.resolve())
                  }))
            }),
            (r.fixNegotiationNeeded = function (e) {
              c.wrapPeerConnectionEvent(e, 'negotiationneeded', function (e) {
                if ('stable' === e.target.signalingState) return e
              })
            })
          var c = (function (e) {
            if (e && e.__esModule) return e
            var t = {}
            if (null != e)
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
            return (t.default = e), t
          })(e('../utils.js'))
          function d(e, t, r) {
            return (
              t in e
                ? Object.defineProperty(e, t, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                  })
                : (e[t] = r),
              e
            )
          }
          function p(e) {
            e.RTCPeerConnection.prototype.getLocalStreams = function () {
              var t = this
              return (
                (this._shimmedLocalStreams = this._shimmedLocalStreams || {}),
                Object.keys(this._shimmedLocalStreams).map(function (e) {
                  return t._shimmedLocalStreams[e][0]
                })
              )
            }
            var n = e.RTCPeerConnection.prototype.addTrack
            e.RTCPeerConnection.prototype.addTrack = function (e, t) {
              if (!t) return n.apply(this, arguments)
              this._shimmedLocalStreams = this._shimmedLocalStreams || {}
              var r = n.apply(this, arguments)
              return (
                this._shimmedLocalStreams[t.id]
                  ? -1 === this._shimmedLocalStreams[t.id].indexOf(r) &&
                    this._shimmedLocalStreams[t.id].push(r)
                  : (this._shimmedLocalStreams[t.id] = [t, r]),
                r
              )
            }
            var i = e.RTCPeerConnection.prototype.addStream
            e.RTCPeerConnection.prototype.addStream = function (e) {
              var r = this
              ;(this._shimmedLocalStreams = this._shimmedLocalStreams || {}),
                e.getTracks().forEach(function (t) {
                  if (
                    r.getSenders().find(function (e) {
                      return e.track === t
                    })
                  )
                    throw new DOMException(
                      'Track already exists.',
                      'InvalidAccessError'
                    )
                })
              var t = this.getSenders()
              i.apply(this, arguments)
              var n = this.getSenders().filter(function (e) {
                return -1 === t.indexOf(e)
              })
              this._shimmedLocalStreams[e.id] = [e].concat(n)
            }
            var t = e.RTCPeerConnection.prototype.removeStream
            e.RTCPeerConnection.prototype.removeStream = function (e) {
              return (
                (this._shimmedLocalStreams = this._shimmedLocalStreams || {}),
                delete this._shimmedLocalStreams[e.id],
                t.apply(this, arguments)
              )
            }
            var o = e.RTCPeerConnection.prototype.removeTrack
            e.RTCPeerConnection.prototype.removeTrack = function (r) {
              var n = this
              return (
                (this._shimmedLocalStreams = this._shimmedLocalStreams || {}),
                r &&
                  Object.keys(this._shimmedLocalStreams).forEach(function (e) {
                    var t = n._shimmedLocalStreams[e].indexOf(r)
                    ;-1 !== t && n._shimmedLocalStreams[e].splice(t, 1),
                      1 === n._shimmedLocalStreams[e].length &&
                        delete n._shimmedLocalStreams[e]
                  }),
                o.apply(this, arguments)
              )
            }
          }
        },
        { '../utils.js': 15, './getdisplaymedia': 4, './getusermedia': 5 }
      ],
      4: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 }),
            (r.shimGetDisplayMedia = function (o, e) {
              ;(o.navigator.mediaDevices &&
                'getDisplayMedia' in o.navigator.mediaDevices) ||
                (o.navigator.mediaDevices &&
                  ('function' == typeof e
                    ? (o.navigator.mediaDevices.getDisplayMedia = function (i) {
                        return e(i).then(function (e) {
                          var t = i.video && i.video.width,
                            r = i.video && i.video.height,
                            n = i.video && i.video.frameRate
                          return (
                            (i.video = {
                              mandatory: {
                                chromeMediaSource: 'desktop',
                                chromeMediaSourceId: e,
                                maxFrameRate: n || 3
                              }
                            }),
                            t && (i.video.mandatory.maxWidth = t),
                            r && (i.video.mandatory.maxHeight = r),
                            o.navigator.mediaDevices.getUserMedia(i)
                          )
                        })
                      })
                    : console.error(
                        'shimGetDisplayMedia: getSourceId argument is not a function'
                      )))
            })
        },
        {}
      ],
      5: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 })
          var c =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e
                }
              : function (e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e
                }
          r.shimGetUserMedia = function (e) {
            var t,
              r,
              a = e && e.navigator
            function s(i) {
              if (
                'object' !== (void 0 === i ? 'undefined' : c(i)) ||
                i.mandatory ||
                i.optional
              )
                return i
              var o = {}
              return (
                Object.keys(i).forEach(function (t) {
                  var r, n, e
                  'require' !== t &&
                    'advanced' !== t &&
                    'mediaSource' !== t &&
                    (void 0 !==
                      (r = 'object' === c(i[t]) ? i[t] : { ideal: i[t] })
                        .exact &&
                      'number' == typeof r.exact &&
                      (r.min = r.max = r.exact),
                    (n = function (e, t) {
                      return e
                        ? e + t.charAt(0).toUpperCase() + t.slice(1)
                        : 'deviceId' === t
                        ? 'sourceId'
                        : t
                    }),
                    void 0 !== r.ideal &&
                      ((o.optional = o.optional || []),
                      (e = {}),
                      'number' == typeof r.ideal
                        ? ((e[n('min', t)] = r.ideal),
                          o.optional.push(e),
                          ((e = {})[n('max', t)] = r.ideal))
                        : (e[n('', t)] = r.ideal),
                      o.optional.push(e)),
                    void 0 !== r.exact && 'number' != typeof r.exact
                      ? ((o.mandatory = o.mandatory || {}),
                        (o.mandatory[n('', t)] = r.exact))
                      : ['min', 'max'].forEach(function (e) {
                          void 0 !== r[e] &&
                            ((o.mandatory = o.mandatory || {}),
                            (o.mandatory[n(e, t)] = r[e]))
                        }))
                }),
                i.advanced &&
                  (o.optional = (o.optional || []).concat(i.advanced)),
                o
              )
            }
            function n(r, n) {
              if (61 <= t.version) return n(r)
              if (
                ((r = JSON.parse(JSON.stringify(r))) &&
                  'object' === c(r.audio) &&
                  ((e = function (e, t, r) {
                    t in e && !(r in e) && ((e[r] = e[t]), delete e[t])
                  })(
                    (r = JSON.parse(JSON.stringify(r))).audio,
                    'autoGainControl',
                    'googAutoGainControl'
                  ),
                  e(r.audio, 'noiseSuppression', 'googNoiseSuppression'),
                  (r.audio = s(r.audio))),
                r && 'object' === c(r.video))
              ) {
                var i =
                    (i = r.video.facingMode) &&
                    ('object' === (void 0 === i ? 'undefined' : c(i))
                      ? i
                      : { ideal: i }),
                  e = t.version < 66
                if (
                  i &&
                  ('user' === i.exact ||
                    'environment' === i.exact ||
                    'user' === i.ideal ||
                    'environment' === i.ideal) &&
                  (!a.mediaDevices.getSupportedConstraints ||
                    !a.mediaDevices.getSupportedConstraints().facingMode ||
                    e)
                ) {
                  delete r.video.facingMode
                  var o = void 0
                  if (
                    ('environment' === i.exact || 'environment' === i.ideal
                      ? (o = ['back', 'rear'])
                      : ('user' !== i.exact && 'user' !== i.ideal) ||
                        (o = ['front']),
                    o)
                  )
                    return a.mediaDevices.enumerateDevices().then(function (e) {
                      var t = (e = e.filter(function (e) {
                        return 'videoinput' === e.kind
                      })).find(function (t) {
                        return o.some(function (e) {
                          return t.label.toLowerCase().includes(e)
                        })
                      })
                      return (
                        !t &&
                          e.length &&
                          o.includes('back') &&
                          (t = e[e.length - 1]),
                        t &&
                          (r.video.deviceId = i.exact
                            ? { exact: t.deviceId }
                            : { ideal: t.deviceId }),
                        (r.video = s(r.video)),
                        d('chrome: ' + JSON.stringify(r)),
                        n(r)
                      )
                    })
                }
                r.video = s(r.video)
              }
              return d('chrome: ' + JSON.stringify(r)), n(r)
            }
            function i(e) {
              return 64 <= t.version
                ? e
                : {
                    name:
                      {
                        PermissionDeniedError: 'NotAllowedError',
                        PermissionDismissedError: 'NotAllowedError',
                        InvalidStateError: 'NotAllowedError',
                        DevicesNotFoundError: 'NotFoundError',
                        ConstraintNotSatisfiedError: 'OverconstrainedError',
                        TrackStartError: 'NotReadableError',
                        MediaDeviceFailedDueToShutdown: 'NotAllowedError',
                        MediaDeviceKillSwitchOn: 'NotAllowedError',
                        TabCaptureError: 'AbortError',
                        ScreenCaptureError: 'AbortError',
                        DeviceCaptureError: 'AbortError'
                      }[e.name] || e.name,
                    message: e.message,
                    constraint: e.constraint || e.constraintName,
                    toString: function () {
                      return this.name + (this.message && ': ') + this.message
                    }
                  }
            }
            a.mediaDevices &&
              ((t = o.detectBrowser(e)),
              (a.getUserMedia = function (e, t, r) {
                n(e, function (e) {
                  a.webkitGetUserMedia(e, t, function (e) {
                    r && r(i(e))
                  })
                })
              }.bind(a)),
              a.mediaDevices.getUserMedia &&
                ((r = a.mediaDevices.getUserMedia.bind(a.mediaDevices)),
                (a.mediaDevices.getUserMedia = function (e) {
                  return n(e, function (t) {
                    return r(t).then(
                      function (e) {
                        if (
                          (t.audio && !e.getAudioTracks().length) ||
                          (t.video && !e.getVideoTracks().length)
                        )
                          throw (
                            (e.getTracks().forEach(function (e) {
                              e.stop()
                            }),
                            new DOMException('', 'NotFoundError'))
                          )
                        return e
                      },
                      function (e) {
                        return Promise.reject(i(e))
                      }
                    )
                  })
                })))
          }
          var o = (function (e) {
              if (e && e.__esModule) return e
              var t = {}
              if (null != e)
                for (var r in e)
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
              return (t.default = e), t
            })(e('../utils.js')),
            d = o.log
        },
        { '../utils.js': 15 }
      ],
      6: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 })
          var o =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e
                }
              : function (e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e
                }
          ;(r.shimRTCIceCandidate = function (t) {
            var i
            !t.RTCIceCandidate ||
              (t.RTCIceCandidate &&
                'foundation' in t.RTCIceCandidate.prototype) ||
              ((i = t.RTCIceCandidate),
              (t.RTCIceCandidate = function (e) {
                if (
                  ('object' === (void 0 === e ? 'undefined' : o(e)) &&
                    e.candidate &&
                    0 === e.candidate.indexOf('a=') &&
                    ((e = JSON.parse(JSON.stringify(e))).candidate =
                      e.candidate.substr(2)),
                  e.candidate && e.candidate.length)
                ) {
                  var t = new i(e),
                    r = a.default.parseCandidate(e.candidate),
                    n = Object.assign(t, r)
                  return (
                    (n.toJSON = function () {
                      return {
                        candidate: n.candidate,
                        sdpMid: n.sdpMid,
                        sdpMLineIndex: n.sdpMLineIndex,
                        usernameFragment: n.usernameFragment
                      }
                    }),
                    n
                  )
                }
                return new i(e)
              }),
              (t.RTCIceCandidate.prototype = i.prototype),
              n.wrapPeerConnectionEvent(t, 'icecandidate', function (e) {
                return (
                  e.candidate &&
                    Object.defineProperty(e, 'candidate', {
                      value: new t.RTCIceCandidate(e.candidate),
                      writable: 'false'
                    }),
                  e
                )
              }))
          }),
            (r.shimMaxMessageSize = function (e) {
              var i, o
              e.RTCPeerConnection &&
                ((i = n.detectBrowser(e)),
                'sctp' in e.RTCPeerConnection.prototype ||
                  Object.defineProperty(e.RTCPeerConnection.prototype, 'sctp', {
                    get: function () {
                      return void 0 === this._sctp ? null : this._sctp
                    }
                  }),
                (o = e.RTCPeerConnection.prototype.setRemoteDescription),
                (e.RTCPeerConnection.prototype.setRemoteDescription = function (
                  n
                ) {
                  var e, t, r
                  return (
                    (this._sctp = null),
                    'chrome' === i.browser &&
                      76 <= i.version &&
                      'plan-b' === this.getConfiguration().sdpSemantics &&
                      Object.defineProperty(this, 'sctp', {
                        get: function () {
                          return void 0 === this._sctp ? null : this._sctp
                        },
                        enumerable: !0,
                        configurable: !0
                      }),
                    (function (e) {
                      if (e && e.sdp) {
                        e = a.default.splitSections(e.sdp)
                        return (
                          e.shift(),
                          e.some(function (e) {
                            e = a.default.parseMLine(e)
                            return (
                              e &&
                              'application' === e.kind &&
                              -1 !== e.protocol.indexOf('SCTP')
                            )
                          })
                        )
                      }
                    })(n) &&
                      ((t = (function () {
                        var e = n.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/)
                        if (null === e || e.length < 2) return -1
                        e = parseInt(e[1], 10)
                        return e != e ? -1 : e
                      })()),
                      (r = 65536),
                      'firefox' === i.browser &&
                        (r =
                          i.version < 57
                            ? -1 === t
                              ? 16384
                              : 2147483637
                            : i.version < 60
                            ? 57 === i.version
                              ? 65535
                              : 65536
                            : 2147483637),
                      (r = r),
                      (t = (function (e) {
                        var t = 65536
                        'firefox' === i.browser &&
                          57 === i.version &&
                          (t = 65535)
                        var r = a.default.matchPrefix(
                          n.sdp,
                          'a=max-message-size:'
                        )
                        return (
                          0 < r.length
                            ? (t = parseInt(r[0].substr(19), 10))
                            : 'firefox' === i.browser &&
                              -1 !== e &&
                              (t = 2147483637),
                          t
                        )
                      })(t)),
                      (e = void 0),
                      (e =
                        0 === r && 0 === t
                          ? Number.POSITIVE_INFINITY
                          : 0 === r || 0 === t
                          ? Math.max(r, t)
                          : Math.min(r, t)),
                      (t = {}),
                      Object.defineProperty(t, 'maxMessageSize', {
                        get: function () {
                          return e
                        }
                      }),
                      (this._sctp = t)),
                    o.apply(this, arguments)
                  )
                }))
            }),
            (r.shimSendThrowTypeError = function (e) {
              var t
              function r(t, r) {
                var n = t.send
                t.send = function (e) {
                  e = e.length || e.size || e.byteLength
                  if (
                    'open' === t.readyState &&
                    r.sctp &&
                    e > r.sctp.maxMessageSize
                  )
                    throw new TypeError(
                      'Message too large (can send a maximum of ' +
                        r.sctp.maxMessageSize +
                        ' bytes)'
                    )
                  return n.apply(t, arguments)
                }
              }
              e.RTCPeerConnection &&
                'createDataChannel' in e.RTCPeerConnection.prototype &&
                ((t = e.RTCPeerConnection.prototype.createDataChannel),
                (e.RTCPeerConnection.prototype.createDataChannel = function () {
                  var e = t.apply(this, arguments)
                  return r(e, this), e
                }),
                n.wrapPeerConnectionEvent(e, 'datachannel', function (e) {
                  return r(e.channel, e.target), e
                }))
            }),
            (r.shimConnectionState = function (e) {
              var r
              !e.RTCPeerConnection ||
                'connectionState' in e.RTCPeerConnection.prototype ||
                ((r = e.RTCPeerConnection.prototype),
                Object.defineProperty(r, 'connectionState', {
                  get: function () {
                    return (
                      { completed: 'connected', checking: 'connecting' }[
                        this.iceConnectionState
                      ] || this.iceConnectionState
                    )
                  },
                  enumerable: !0,
                  configurable: !0
                }),
                Object.defineProperty(r, 'onconnectionstatechange', {
                  get: function () {
                    return this._onconnectionstatechange || null
                  },
                  set: function (e) {
                    this._onconnectionstatechange &&
                      (this.removeEventListener(
                        'connectionstatechange',
                        this._onconnectionstatechange
                      ),
                      delete this._onconnectionstatechange),
                      e &&
                        this.addEventListener(
                          'connectionstatechange',
                          (this._onconnectionstatechange = e)
                        )
                  },
                  enumerable: !0,
                  configurable: !0
                }),
                ['setLocalDescription', 'setRemoteDescription'].forEach(
                  function (e) {
                    var t = r[e]
                    r[e] = function () {
                      return (
                        this._connectionstatechangepoly ||
                          ((this._connectionstatechangepoly = function (e) {
                            var t,
                              r = e.target
                            return (
                              r._lastConnectionState !== r.connectionState &&
                                ((r._lastConnectionState = r.connectionState),
                                (t = new Event('connectionstatechange', e)),
                                r.dispatchEvent(t)),
                              e
                            )
                          }),
                          this.addEventListener(
                            'iceconnectionstatechange',
                            this._connectionstatechangepoly
                          )),
                        t.apply(this, arguments)
                      )
                    }
                  }
                ))
            }),
            (r.removeAllowExtmapMixed = function (e) {
              var t, r
              e.RTCPeerConnection &&
                (('chrome' === (t = n.detectBrowser(e)).browser &&
                  71 <= t.version) ||
                  ((r = e.RTCPeerConnection.prototype.setRemoteDescription),
                  (e.RTCPeerConnection.prototype.setRemoteDescription =
                    function (e) {
                      return (
                        e &&
                          e.sdp &&
                          -1 !== e.sdp.indexOf('\na=extmap-allow-mixed'),
                        r.apply(this, arguments)
                      )
                    })))
            })
          var r = e('sdp'),
            a = r && r.__esModule ? r : { default: r },
            n = (function (e) {
              if (e && e.__esModule) return e
              var t = {}
              if (null != e)
                for (var r in e)
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
              return (t.default = e), t
            })(e('./utils'))
        },
        { './utils': 15, sdp: 17 }
      ],
      7: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 }),
            (r.shimGetDisplayMedia = r.shimGetUserMedia = void 0)
          var n = e('./getusermedia')
          Object.defineProperty(r, 'shimGetUserMedia', {
            enumerable: !0,
            get: function () {
              return n.shimGetUserMedia
            }
          })
          var i = e('./getdisplaymedia')
          Object.defineProperty(r, 'shimGetDisplayMedia', {
            enumerable: !0,
            get: function () {
              return i.shimGetDisplayMedia
            }
          }),
            (r.shimPeerConnection = function (e) {
              var r,
                t = o.detectBrowser(e)
              e.RTCIceGatherer &&
                (e.RTCIceCandidate ||
                  (e.RTCIceCandidate = function (e) {
                    return e
                  }),
                e.RTCSessionDescription ||
                  (e.RTCSessionDescription = function (e) {
                    return e
                  }),
                t.version < 15025) &&
                ((r = Object.getOwnPropertyDescriptor(
                  e.MediaStreamTrack.prototype,
                  'enabled'
                )),
                Object.defineProperty(e.MediaStreamTrack.prototype, 'enabled', {
                  set: function (e) {
                    r.set.call(this, e)
                    var t = new Event('enabled')
                    ;(t.enabled = e), this.dispatchEvent(t)
                  }
                })),
                !e.RTCRtpSender ||
                  'dtmf' in e.RTCRtpSender.prototype ||
                  Object.defineProperty(e.RTCRtpSender.prototype, 'dtmf', {
                    get: function () {
                      return (
                        void 0 === this._dtmf &&
                          ('audio' === this.track.kind
                            ? (this._dtmf = new e.RTCDtmfSender(this))
                            : 'video' === this.track.kind &&
                              (this._dtmf = null)),
                        this._dtmf
                      )
                    }
                  }),
                e.RTCDtmfSender &&
                  !e.RTCDTMFSender &&
                  (e.RTCDTMFSender = e.RTCDtmfSender)
              var n = (0, s.default)(e, t.version)
              ;(e.RTCPeerConnection = function (e) {
                return (
                  e &&
                    e.iceServers &&
                    ((e.iceServers = (0, a.filterIceServers)(
                      e.iceServers,
                      t.version
                    )),
                    o.log('ICE servers after filtering:', e.iceServers)),
                  new n(e)
                )
              }),
                (e.RTCPeerConnection.prototype = n.prototype)
            }),
            (r.shimReplaceTrack = function (e) {
              !e.RTCRtpSender ||
                'replaceTrack' in e.RTCRtpSender.prototype ||
                (e.RTCRtpSender.prototype.replaceTrack =
                  e.RTCRtpSender.prototype.setTrack)
            })
          var o = (function (e) {
              if (e && e.__esModule) return e
              var t = {}
              if (null != e)
                for (var r in e)
                  Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
              return (t.default = e), t
            })(e('../utils')),
            a = e('./filtericeservers'),
            e = e('rtcpeerconnection-shim'),
            s = e && e.__esModule ? e : { default: e }
        },
        {
          '../utils': 15,
          './filtericeservers': 8,
          './getdisplaymedia': 9,
          './getusermedia': 10,
          'rtcpeerconnection-shim': 16
        }
      ],
      8: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 }),
            (r.filterIceServers = function (e, t) {
              var n = !1
              return (e = JSON.parse(JSON.stringify(e))).filter(function (e) {
                if (e && (e.urls || e.url)) {
                  var t = e.urls || e.url
                  e.url &&
                    !e.urls &&
                    i.deprecated('RTCIceServer.url', 'RTCIceServer.urls')
                  var r = 'string' == typeof t
                  return (
                    r && (t = [t]),
                    (t = t.filter(function (e) {
                      if (0 === e.indexOf('stun:')) return !1
                      e =
                        e.startsWith('turn') &&
                        !e.startsWith('turn:[') &&
                        e.includes('transport=udp')
                      return e && !n && (n = !0)
                    })),
                    delete e.url,
                    (e.urls = r ? t[0] : t),
                    !!t.length
                  )
                }
              })
            })
          var i = (function (e) {
            if (e && e.__esModule) return e
            var t = {}
            if (null != e)
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
            return (t.default = e), t
          })(e('../utils'))
        },
        { '../utils': 15 }
      ],
      9: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 }),
            (r.shimGetDisplayMedia = function (e) {
              'getDisplayMedia' in e.navigator &&
                e.navigator.mediaDevices &&
                ((e.navigator.mediaDevices &&
                  'getDisplayMedia' in e.navigator.mediaDevices) ||
                  (e.navigator.mediaDevices.getDisplayMedia =
                    e.navigator.getDisplayMedia.bind(e.navigator)))
            })
        },
        {}
      ],
      10: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 }),
            (r.shimGetUserMedia = function (e) {
              var e = e && e.navigator,
                t = e.mediaDevices.getUserMedia.bind(e.mediaDevices)
              e.mediaDevices.getUserMedia = function (e) {
                return t(e).catch(function (e) {
                  return Promise.reject({
                    name:
                      { PermissionDeniedError: 'NotAllowedError' }[e.name] ||
                      e.name,
                    message: e.message,
                    constraint: e.constraint,
                    toString: function () {
                      return this.name
                    }
                  })
                })
              }
            })
        },
        {}
      ],
      11: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 }),
            (r.shimGetDisplayMedia = r.shimGetUserMedia = void 0)
          var n =
              'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
                ? function (e) {
                    return typeof e
                  }
                : function (e) {
                    return e &&
                      'function' == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? 'symbol'
                      : typeof e
                  },
            i = e('./getusermedia')
          Object.defineProperty(r, 'shimGetUserMedia', {
            enumerable: !0,
            get: function () {
              return i.shimGetUserMedia
            }
          })
          var o = e('./getdisplaymedia')
          Object.defineProperty(r, 'shimGetDisplayMedia', {
            enumerable: !0,
            get: function () {
              return o.shimGetDisplayMedia
            }
          }),
            (r.shimOnTrack = function (e) {
              'object' === (void 0 === e ? 'undefined' : n(e)) &&
                e.RTCTrackEvent &&
                'receiver' in e.RTCTrackEvent.prototype &&
                !('transceiver' in e.RTCTrackEvent.prototype) &&
                Object.defineProperty(
                  e.RTCTrackEvent.prototype,
                  'transceiver',
                  {
                    get: function () {
                      return { receiver: this.receiver }
                    }
                  }
                )
            }),
            (r.shimPeerConnection = function (o) {
              var r,
                i,
                a,
                s = c.detectBrowser(o)
              'object' === (void 0 === o ? 'undefined' : n(o)) &&
                (o.RTCPeerConnection || o.mozRTCPeerConnection) &&
                (!o.RTCPeerConnection &&
                  o.mozRTCPeerConnection &&
                  (o.RTCPeerConnection = o.mozRTCPeerConnection),
                s.version < 53 &&
                  [
                    'setLocalDescription',
                    'setRemoteDescription',
                    'addIceCandidate'
                  ].forEach(function (e) {
                    var t,
                      r,
                      n,
                      i = o.RTCPeerConnection.prototype[e],
                      t =
                        ((n = function () {
                          return (
                            (arguments[0] = new (
                              'addIceCandidate' === e
                                ? o.RTCIceCandidate
                                : o.RTCSessionDescription
                            )(arguments[0])),
                            i.apply(this, arguments)
                          )
                        }),
                        (r = e) in (t = {})
                          ? Object.defineProperty(t, r, {
                              value: n,
                              enumerable: !0,
                              configurable: !0,
                              writable: !0
                            })
                          : (t[r] = n),
                        t)
                    o.RTCPeerConnection.prototype[e] = t[e]
                  }),
                s.version < 68 &&
                  ((r = o.RTCPeerConnection.prototype.addIceCandidate),
                  (o.RTCPeerConnection.prototype.addIceCandidate = function (
                    e,
                    t
                  ) {
                    return e
                      ? e && '' === e.candidate
                        ? Promise.resolve()
                        : r.apply(this, arguments)
                      : (t && t.apply(null), Promise.resolve())
                  })),
                (i = {
                  inboundrtp: 'inbound-rtp',
                  outboundrtp: 'outbound-rtp',
                  candidatepair: 'candidate-pair',
                  localcandidate: 'local-candidate',
                  remotecandidate: 'remote-candidate'
                }),
                (a = o.RTCPeerConnection.prototype.getStats),
                (o.RTCPeerConnection.prototype.getStats = function () {
                  var e = Array.prototype.slice.call(arguments),
                    t = e[0],
                    n = e[1],
                    e = e[2]
                  return a
                    .apply(this, [t || null])
                    .then(function (r) {
                      if (s.version < 53 && !n)
                        try {
                          r.forEach(function (e) {
                            e.type = i[e.type] || e.type
                          })
                        } catch (e) {
                          if ('TypeError' !== e.name) throw e
                          r.forEach(function (e, t) {
                            r.set(
                              t,
                              Object.assign({}, e, {
                                type: i[e.type] || e.type
                              })
                            )
                          })
                        }
                      return r
                    })
                    .then(n, e)
                }))
            }),
            (r.shimSenderGetStats = function (e) {
              var r, t
              'object' === (void 0 === e ? 'undefined' : n(e)) &&
                e.RTCPeerConnection &&
                e.RTCRtpSender &&
                ((e.RTCRtpSender && 'getStats' in e.RTCRtpSender.prototype) ||
                  ((r = e.RTCPeerConnection.prototype.getSenders) &&
                    (e.RTCPeerConnection.prototype.getSenders = function () {
                      var t = this,
                        e = r.apply(this, [])
                      return (
                        e.forEach(function (e) {
                          return (e._pc = t)
                        }),
                        e
                      )
                    }),
                  (t = e.RTCPeerConnection.prototype.addTrack) &&
                    (e.RTCPeerConnection.prototype.addTrack = function () {
                      var e = t.apply(this, arguments)
                      return (e._pc = this), e
                    }),
                  (e.RTCRtpSender.prototype.getStats = function () {
                    return this.track
                      ? this._pc.getStats(this.track)
                      : Promise.resolve(new Map())
                  })))
            }),
            (r.shimReceiverGetStats = function (e) {
              var r
              'object' === (void 0 === e ? 'undefined' : n(e)) &&
                e.RTCPeerConnection &&
                e.RTCRtpSender &&
                ((e.RTCRtpSender && 'getStats' in e.RTCRtpReceiver.prototype) ||
                  ((r = e.RTCPeerConnection.prototype.getReceivers) &&
                    (e.RTCPeerConnection.prototype.getReceivers = function () {
                      var t = this,
                        e = r.apply(this, [])
                      return (
                        e.forEach(function (e) {
                          return (e._pc = t)
                        }),
                        e
                      )
                    }),
                  c.wrapPeerConnectionEvent(e, 'track', function (e) {
                    return (e.receiver._pc = e.srcElement), e
                  }),
                  (e.RTCRtpReceiver.prototype.getStats = function () {
                    return this._pc.getStats(this.track)
                  })))
            }),
            (r.shimRemoveStream = function (e) {
              !e.RTCPeerConnection ||
                'removeStream' in e.RTCPeerConnection.prototype ||
                (e.RTCPeerConnection.prototype.removeStream = function (t) {
                  var r = this
                  c.deprecated('removeStream', 'removeTrack'),
                    this.getSenders().forEach(function (e) {
                      e.track &&
                        t.getTracks().includes(e.track) &&
                        r.removeTrack(e)
                    })
                })
            }),
            (r.shimRTCDataChannel = function (e) {
              e.DataChannel &&
                !e.RTCDataChannel &&
                (e.RTCDataChannel = e.DataChannel)
            }),
            (r.shimAddTransceiver = function (e) {
              var o
              'object' !== (void 0 === e ? 'undefined' : n(e)) ||
                !e.RTCPeerConnection ||
                ((o = e.RTCPeerConnection.prototype.addTransceiver) &&
                  (e.RTCPeerConnection.prototype.addTransceiver = function (
                    e,
                    t
                  ) {
                    this.setParametersPromises = []
                    var r = t,
                      n = r && 'sendEncodings' in r
                    n &&
                      r.sendEncodings.forEach(function (e) {
                        if ('rid' in e && !/^[a-z0-9]{0,16}$/i.test(e.rid))
                          throw new TypeError('Invalid RID value provided.')
                        if (
                          'scaleResolutionDownBy' in e &&
                          !(1 <= parseFloat(e.scaleResolutionDownBy))
                        )
                          throw new RangeError(
                            'scale_resolution_down_by must be >= 1.0'
                          )
                        if (
                          'maxFramerate' in e &&
                          !(0 <= parseFloat(e.maxFramerate))
                        )
                          throw new RangeError('max_framerate must be >= 0.0')
                      })
                    var i = o.apply(this, arguments)
                    return (
                      n &&
                        ('encodings' in (n = (t = i.sender).getParameters()) ||
                          ((n.encodings = r.sendEncodings),
                          this.setParametersPromises.push(
                            t.setParameters(n).catch(function () {})
                          ))),
                      i
                    )
                  }))
            }),
            (r.shimCreateOffer = function (e) {
              var r
              'object' === (void 0 === e ? 'undefined' : n(e)) &&
                e.RTCPeerConnection &&
                ((r = e.RTCPeerConnection.prototype.createOffer),
                (e.RTCPeerConnection.prototype.createOffer = function () {
                  var e = this,
                    t = arguments
                  return this.setParametersPromises &&
                    this.setParametersPromises.length
                    ? Promise.all(this.setParametersPromises)
                        .then(function () {
                          return r.apply(e, t)
                        })
                        .finally(function () {
                          e.setParametersPromises = []
                        })
                    : r.apply(this, arguments)
                }))
            }),
            (r.shimCreateAnswer = function (e) {
              var r
              'object' === (void 0 === e ? 'undefined' : n(e)) &&
                e.RTCPeerConnection &&
                ((r = e.RTCPeerConnection.prototype.createAnswer),
                (e.RTCPeerConnection.prototype.createAnswer = function () {
                  var e = this,
                    t = arguments
                  return this.setParametersPromises &&
                    this.setParametersPromises.length
                    ? Promise.all(this.setParametersPromises)
                        .then(function () {
                          return r.apply(e, t)
                        })
                        .finally(function () {
                          e.setParametersPromises = []
                        })
                    : r.apply(this, arguments)
                }))
            })
          var c = (function (e) {
            if (e && e.__esModule) return e
            var t = {}
            if (null != e)
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
            return (t.default = e), t
          })(e('../utils'))
        },
        { '../utils': 15, './getdisplaymedia': 12, './getusermedia': 13 }
      ],
      12: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 }),
            (r.shimGetDisplayMedia = function (t, r) {
              ;(t.navigator.mediaDevices &&
                'getDisplayMedia' in t.navigator.mediaDevices) ||
                (t.navigator.mediaDevices &&
                  (t.navigator.mediaDevices.getDisplayMedia = function (e) {
                    if (e && e.video)
                      return (
                        !0 === e.video
                          ? (e.video = { mediaSource: r })
                          : (e.video.mediaSource = r),
                        t.navigator.mediaDevices.getUserMedia(e)
                      )
                    e = new DOMException(
                      'getDisplayMedia without video constraints is undefined'
                    )
                    return (
                      (e.name = 'NotFoundError'),
                      (e.code = 8),
                      Promise.reject(e)
                    )
                  }))
            })
        },
        {}
      ],
      13: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 })
          var s =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e
                }
              : function (e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e
                }
          r.shimGetUserMedia = function (e) {
            var t,
              r,
              n,
              i,
              o = c.detectBrowser(e),
              a = e && e.navigator,
              e = e && e.MediaStreamTrack
            ;(a.getUserMedia = function (e, t, r) {
              c.deprecated(
                'navigator.getUserMedia',
                'navigator.mediaDevices.getUserMedia'
              ),
                a.mediaDevices.getUserMedia(e).then(t, r)
            }),
              (55 < o.version &&
                'autoGainControl' in
                  a.mediaDevices.getSupportedConstraints()) ||
                ((t = function (e, t, r) {
                  t in e && !(r in e) && ((e[r] = e[t]), delete e[t])
                }),
                (r = a.mediaDevices.getUserMedia.bind(a.mediaDevices)),
                (a.mediaDevices.getUserMedia = function (e) {
                  return (
                    'object' === (void 0 === e ? 'undefined' : s(e)) &&
                      'object' === s(e.audio) &&
                      ((e = JSON.parse(JSON.stringify(e))),
                      t(e.audio, 'autoGainControl', 'mozAutoGainControl'),
                      t(e.audio, 'noiseSuppression', 'mozNoiseSuppression')),
                    r(e)
                  )
                }),
                e &&
                  e.prototype.getSettings &&
                  ((n = e.prototype.getSettings),
                  (e.prototype.getSettings = function () {
                    var e = n.apply(this, arguments)
                    return (
                      t(e, 'mozAutoGainControl', 'autoGainControl'),
                      t(e, 'mozNoiseSuppression', 'noiseSuppression'),
                      e
                    )
                  })),
                e &&
                  e.prototype.applyConstraints &&
                  ((i = e.prototype.applyConstraints),
                  (e.prototype.applyConstraints = function (e) {
                    return (
                      'audio' === this.kind &&
                        'object' === (void 0 === e ? 'undefined' : s(e)) &&
                        ((e = JSON.parse(JSON.stringify(e))),
                        t(e, 'autoGainControl', 'mozAutoGainControl'),
                        t(e, 'noiseSuppression', 'mozNoiseSuppression')),
                      i.apply(this, [e])
                    )
                  })))
          }
          var c = (function (e) {
            if (e && e.__esModule) return e
            var t = {}
            if (null != e)
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
            return (t.default = e), t
          })(e('../utils'))
        },
        { '../utils': 15 }
      ],
      14: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 })
          var c =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e
                }
              : function (e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e
                }
          ;(r.shimLocalStreamsAPI = function (e) {
            var n
            'object' === (void 0 === e ? 'undefined' : c(e)) &&
              e.RTCPeerConnection &&
              ('getLocalStreams' in e.RTCPeerConnection.prototype ||
                (e.RTCPeerConnection.prototype.getLocalStreams = function () {
                  return (
                    this._localStreams || (this._localStreams = []),
                    this._localStreams
                  )
                }),
              'addStream' in e.RTCPeerConnection.prototype ||
                ((n = e.RTCPeerConnection.prototype.addTrack),
                (e.RTCPeerConnection.prototype.addStream = function (t) {
                  var r = this
                  this._localStreams || (this._localStreams = []),
                    this._localStreams.includes(t) ||
                      this._localStreams.push(t),
                    t.getAudioTracks().forEach(function (e) {
                      return n.call(r, e, t)
                    }),
                    t.getVideoTracks().forEach(function (e) {
                      return n.call(r, e, t)
                    })
                }),
                (e.RTCPeerConnection.prototype.addTrack = function (e, t) {
                  return (
                    t &&
                      (this._localStreams
                        ? this._localStreams.includes(t) ||
                          this._localStreams.push(t)
                        : (this._localStreams = [t])),
                    n.apply(this, arguments)
                  )
                })),
              'removeStream' in e.RTCPeerConnection.prototype ||
                (e.RTCPeerConnection.prototype.removeStream = function (e) {
                  var t = this
                  this._localStreams || (this._localStreams = [])
                  var r,
                    n = this._localStreams.indexOf(e)
                  ;-1 !== n &&
                    (this._localStreams.splice(n, 1),
                    (r = e.getTracks()),
                    this.getSenders().forEach(function (e) {
                      r.includes(e.track) && t.removeTrack(e)
                    }))
                }))
          }),
            (r.shimRemoteStreamsAPI = function (e) {
              var t
              'object' === (void 0 === e ? 'undefined' : c(e)) &&
                e.RTCPeerConnection &&
                ('getRemoteStreams' in e.RTCPeerConnection.prototype ||
                  (e.RTCPeerConnection.prototype.getRemoteStreams =
                    function () {
                      return this._remoteStreams || []
                    }),
                'onaddstream' in e.RTCPeerConnection.prototype ||
                  (Object.defineProperty(
                    e.RTCPeerConnection.prototype,
                    'onaddstream',
                    {
                      get: function () {
                        return this._onaddstream
                      },
                      set: function (e) {
                        var r = this
                        this._onaddstream &&
                          (this.removeEventListener(
                            'addstream',
                            this._onaddstream
                          ),
                          this.removeEventListener(
                            'track',
                            this._onaddstreampoly
                          )),
                          this.addEventListener(
                            'addstream',
                            (this._onaddstream = e)
                          ),
                          this.addEventListener(
                            'track',
                            (this._onaddstreampoly = function (e) {
                              e.streams.forEach(function (e) {
                                var t
                                r._remoteStreams || (r._remoteStreams = []),
                                  r._remoteStreams.includes(e) ||
                                    (r._remoteStreams.push(e),
                                    ((t = new Event('addstream')).stream = e),
                                    r.dispatchEvent(t))
                              })
                            })
                          )
                      }
                    }
                  ),
                  (t = e.RTCPeerConnection.prototype.setRemoteDescription),
                  (e.RTCPeerConnection.prototype.setRemoteDescription =
                    function () {
                      var r = this
                      return (
                        this._onaddstreampoly ||
                          this.addEventListener(
                            'track',
                            (this._onaddstreampoly = function (e) {
                              e.streams.forEach(function (e) {
                                var t
                                r._remoteStreams || (r._remoteStreams = []),
                                  0 <= r._remoteStreams.indexOf(e) ||
                                    (r._remoteStreams.push(e),
                                    ((t = new Event('addstream')).stream = e),
                                    r.dispatchEvent(t))
                              })
                            })
                          ),
                        t.apply(r, arguments)
                      )
                    })))
            }),
            (r.shimCallbacksAPI = function (e) {
              var t, n, i, o, a, s
              'object' === (void 0 === e ? 'undefined' : c(e)) &&
                e.RTCPeerConnection &&
                ((t = e.RTCPeerConnection.prototype),
                (n = t.createOffer),
                (i = t.createAnswer),
                (o = t.setLocalDescription),
                (a = t.setRemoteDescription),
                (s = t.addIceCandidate),
                (t.createOffer = function (e, t, r) {
                  ;(r = 2 <= arguments.length ? r : e), (r = n.apply(this, [r]))
                  return t ? (r.then(e, t), Promise.resolve()) : r
                }),
                (t.createAnswer = function (e, t, r) {
                  ;(r = 2 <= arguments.length ? r : e), (r = i.apply(this, [r]))
                  return t ? (r.then(e, t), Promise.resolve()) : r
                }),
                (e = function (e, t, r) {
                  e = o.apply(this, [e])
                  return r ? (e.then(t, r), Promise.resolve()) : e
                }),
                (t.setLocalDescription = e),
                (e = function (e, t, r) {
                  e = a.apply(this, [e])
                  return r ? (e.then(t, r), Promise.resolve()) : e
                }),
                (t.setRemoteDescription = e),
                (e = function (e, t, r) {
                  e = s.apply(this, [e])
                  return r ? (e.then(t, r), Promise.resolve()) : e
                }),
                (t.addIceCandidate = e))
            }),
            (r.shimGetUserMedia = function (e) {
              var t,
                n = e && e.navigator
              n.mediaDevices &&
                n.mediaDevices.getUserMedia &&
                ((e = n.mediaDevices),
                (t = e.getUserMedia.bind(e)),
                (n.mediaDevices.getUserMedia = function (e) {
                  return t(i(e))
                })),
                !n.getUserMedia &&
                  n.mediaDevices &&
                  n.mediaDevices.getUserMedia &&
                  (n.getUserMedia = function (e, t, r) {
                    n.mediaDevices.getUserMedia(e).then(t, r)
                  }.bind(n))
            }),
            (r.shimConstraints = i),
            (r.shimRTCIceServerUrls = function (e) {
              var o = e.RTCPeerConnection
              ;(e.RTCPeerConnection = function (e, t) {
                if (e && e.iceServers) {
                  for (var r = [], n = 0; n < e.iceServers.length; n++) {
                    var i = e.iceServers[n]
                    !i.hasOwnProperty('urls') && i.hasOwnProperty('url')
                      ? (a.deprecated('RTCIceServer.url', 'RTCIceServer.urls'),
                        ((i = JSON.parse(JSON.stringify(i))).urls = i.url),
                        delete i.url,
                        r.push(i))
                      : r.push(e.iceServers[n])
                  }
                  e.iceServers = r
                }
                return new o(e, t)
              }),
                (e.RTCPeerConnection.prototype = o.prototype),
                'generateCertificate' in e.RTCPeerConnection &&
                  Object.defineProperty(
                    e.RTCPeerConnection,
                    'generateCertificate',
                    {
                      get: function () {
                        return o.generateCertificate
                      }
                    }
                  )
            }),
            (r.shimTrackEventTransceiver = function (e) {
              'object' === (void 0 === e ? 'undefined' : c(e)) &&
                e.RTCTrackEvent &&
                'receiver' in e.RTCTrackEvent.prototype &&
                !('transceiver' in e.RTCTrackEvent.prototype) &&
                Object.defineProperty(
                  e.RTCTrackEvent.prototype,
                  'transceiver',
                  {
                    get: function () {
                      return { receiver: this.receiver }
                    }
                  }
                )
            }),
            (r.shimCreateOfferLegacy = function (e) {
              var r = e.RTCPeerConnection.prototype.createOffer
              e.RTCPeerConnection.prototype.createOffer = function (e) {
                var t
                return (
                  e &&
                    (void 0 !== e.offerToReceiveAudio &&
                      (e.offerToReceiveAudio = !!e.offerToReceiveAudio),
                    (t = this.getTransceivers().find(function (e) {
                      return 'audio' === e.receiver.track.kind
                    })),
                    !1 === e.offerToReceiveAudio && t
                      ? 'sendrecv' === t.direction
                        ? t.setDirection
                          ? t.setDirection('sendonly')
                          : (t.direction = 'sendonly')
                        : 'recvonly' === t.direction &&
                          (t.setDirection
                            ? t.setDirection('inactive')
                            : (t.direction = 'inactive'))
                      : !0 !== e.offerToReceiveAudio ||
                        t ||
                        this.addTransceiver('audio'),
                    void 0 !== e.offerToReceiveVideo &&
                      (e.offerToReceiveVideo = !!e.offerToReceiveVideo),
                    (t = this.getTransceivers().find(function (e) {
                      return 'video' === e.receiver.track.kind
                    })),
                    !1 === e.offerToReceiveVideo && t
                      ? 'sendrecv' === t.direction
                        ? t.setDirection
                          ? t.setDirection('sendonly')
                          : (t.direction = 'sendonly')
                        : 'recvonly' === t.direction &&
                          (t.setDirection
                            ? t.setDirection('inactive')
                            : (t.direction = 'inactive'))
                      : !0 !== e.offerToReceiveVideo ||
                        t ||
                        this.addTransceiver('video')),
                  r.apply(this, arguments)
                )
              }
            })
          var a = (function (e) {
            if (e && e.__esModule) return e
            var t = {}
            if (null != e)
              for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r])
            return (t.default = e), t
          })(e('../utils'))
          function i(e) {
            return e && void 0 !== e.video
              ? Object.assign({}, e, { video: a.compactObject(e.video) })
              : e
          }
        },
        { '../utils': 15 }
      ],
      15: [
        function (e, t, r) {
          'use strict'
          Object.defineProperty(r, '__esModule', { value: !0 })
          var n =
            'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
              ? function (e) {
                  return typeof e
                }
              : function (e) {
                  return e &&
                    'function' == typeof Symbol &&
                    e.constructor === Symbol &&
                    e !== Symbol.prototype
                    ? 'symbol'
                    : typeof e
                }
          ;(r.extractVersion = a),
            (r.wrapPeerConnectionEvent = function (e, n, i) {
              var o, a
              e.RTCPeerConnection &&
                ((e = e.RTCPeerConnection.prototype),
                (o = e.addEventListener),
                (e.addEventListener = function (e, t) {
                  return e !== n
                    ? o.apply(this, arguments)
                    : ((this._eventMap = this._eventMap || {}),
                      (this._eventMap[t] = r),
                      o.apply(this, [e, r]))
                  function r(e) {
                    e = i(e)
                    e && t(e)
                  }
                }),
                (a = e.removeEventListener),
                (e.removeEventListener = function (e, t) {
                  if (e !== n || !this._eventMap || !this._eventMap[t])
                    return a.apply(this, arguments)
                  var r = this._eventMap[t]
                  return delete this._eventMap[t], a.apply(this, [e, r])
                }),
                Object.defineProperty(e, 'on' + n, {
                  get: function () {
                    return this['_on' + n]
                  },
                  set: function (e) {
                    this['_on' + n] &&
                      (this.removeEventListener(n, this['_on' + n]),
                      delete this['_on' + n]),
                      e && this.addEventListener(n, (this['_on' + n] = e))
                  },
                  enumerable: !0,
                  configurable: !0
                }))
            }),
            (r.disableLog = function (e) {
              return 'boolean' == typeof e
                ? (i = e)
                  ? 'adapter.js logging disabled'
                  : 'adapter.js logging enabled'
                : new Error(
                    'Argument type: ' +
                      (void 0 === e ? 'undefined' : n(e)) +
                      '. Please use a boolean.'
                  )
            }),
            (r.disableWarnings = function (e) {
              return 'boolean' == typeof e
                ? ((o = !e),
                  'adapter.js deprecation warnings ' +
                    (e ? 'disabled' : 'enabled'))
                : new Error(
                    'Argument type: ' +
                      (void 0 === e ? 'undefined' : n(e)) +
                      '. Please use a boolean.'
                  )
            }),
            (r.log = function () {
              'object' ===
                ('undefined' == typeof window ? 'undefined' : n(window)) &&
                (i ||
                  ('undefined' != typeof console &&
                    'function' == typeof console.log &&
                    console.log.apply(console, arguments)))
            }),
            (r.deprecated = function (e, t) {
              o &&
                console.warn(
                  e + ' is deprecated, please use ' + t + ' instead.'
                )
            }),
            (r.detectBrowser = function (e) {
              var t = e.navigator,
                r = { browser: null, version: null }
              if (void 0 === e || !e.navigator)
                return (r.browser = 'Not a browser.'), r
              if (t.mozGetUserMedia)
                (r.browser = 'firefox'),
                  (r.version = a(t.userAgent, /Firefox\/(\d+)\./, 1))
              else if (
                t.webkitGetUserMedia ||
                (!1 === e.isSecureContext &&
                  e.webkitRTCPeerConnection &&
                  !e.RTCIceGatherer)
              )
                (r.browser = 'chrome'),
                  (r.version = a(t.userAgent, /Chrom(e|ium)\/(\d+)\./, 2))
              else if (
                t.mediaDevices &&
                t.userAgent.match(/Edge\/(\d+).(\d+)$/)
              )
                (r.browser = 'edge'),
                  (r.version = a(t.userAgent, /Edge\/(\d+).(\d+)$/, 2))
              else {
                if (
                  !e.RTCPeerConnection ||
                  !t.userAgent.match(/AppleWebKit\/(\d+)\./)
                )
                  return (r.browser = 'Not a supported browser.'), r
                ;(r.browser = 'safari'),
                  (r.version = a(t.userAgent, /AppleWebKit\/(\d+)\./, 1)),
                  (r.supportsUnifiedPlan =
                    e.RTCRtpTransceiver &&
                    'currentDirection' in e.RTCRtpTransceiver.prototype)
              }
              return r
            }),
            (r.compactObject = function i(o) {
              return s(o)
                ? Object.keys(o).reduce(function (e, t) {
                    var r = s(o[t]),
                      n = r ? i(o[t]) : o[t],
                      r = r && !Object.keys(n).length
                    return void 0 === n || r
                      ? e
                      : Object.assign(
                          e,
                          ((e = n),
                          (n = t) in (t = {})
                            ? Object.defineProperty(t, n, {
                                value: e,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                              })
                            : (t[n] = e),
                          t)
                        )
                  }, {})
                : o
            }),
            (r.walkStats = c),
            (r.filterStats = function (r, t, e) {
              var n = e ? 'outbound-rtp' : 'inbound-rtp',
                i = new Map()
              if (null === t) return i
              var o = []
              return (
                r.forEach(function (e) {
                  'track' === e.type && e.trackIdentifier === t.id && o.push(e)
                }),
                o.forEach(function (t) {
                  r.forEach(function (e) {
                    e.type === n && e.trackId === t.id && c(r, e, i)
                  })
                }),
                i
              )
            })
          var i = !0,
            o = !0
          function a(e, t, r) {
            t = e.match(t)
            return t && t.length >= r && parseInt(t[r], 10)
          }
          function s(e) {
            return '[object Object]' === Object.prototype.toString.call(e)
          }
          function c(t, r, n) {
            r &&
              !n.has(r.id) &&
              (n.set(r.id, r),
              Object.keys(r).forEach(function (e) {
                e.endsWith('Id')
                  ? c(t, t.get(r[e]), n)
                  : e.endsWith('Ids') &&
                    r[e].forEach(function (e) {
                      c(t, t.get(e), n)
                    })
              }))
          }
        },
        {}
      ],
      16: [
        function (e, t, r) {
          'use strict'
          var D = e('sdp')
          function a(e, t, r, n, i) {
            t = D.writeRtpDescription(e.kind, t)
            return (
              (t += D.writeIceParameters(e.iceGatherer.getLocalParameters())),
              (t += D.writeDtlsParameters(
                e.dtlsTransport.getLocalParameters(),
                'offer' === r ? 'actpass' : i || 'active'
              )),
              (t += 'a=mid:' + e.mid + '\r\n'),
              e.rtpSender && e.rtpReceiver
                ? (t += 'a=sendrecv\r\n')
                : e.rtpSender
                ? (t += 'a=sendonly\r\n')
                : e.rtpReceiver
                ? (t += 'a=recvonly\r\n')
                : (t += 'a=inactive\r\n'),
              e.rtpSender &&
                ((i = e.rtpSender._initialTrackId || e.rtpSender.track.id),
                (e.rtpSender._initialTrackId = i),
                (t +=
                  'a=' + (i = 'msid:' + (n ? n.id : '-') + ' ' + i + '\r\n')),
                (t += 'a=ssrc:' + e.sendEncodingParameters[0].ssrc + ' ' + i),
                e.sendEncodingParameters[0].rtx &&
                  ((t +=
                    'a=ssrc:' + e.sendEncodingParameters[0].rtx.ssrc + ' ' + i),
                  (t +=
                    'a=ssrc-group:FID ' +
                    e.sendEncodingParameters[0].ssrc +
                    ' ' +
                    e.sendEncodingParameters[0].rtx.ssrc +
                    '\r\n'))),
              (t +=
                'a=ssrc:' +
                e.sendEncodingParameters[0].ssrc +
                ' cname:' +
                D.localCName +
                '\r\n'),
              e.rtpSender &&
                e.sendEncodingParameters[0].rtx &&
                (t +=
                  'a=ssrc:' +
                  e.sendEncodingParameters[0].rtx.ssrc +
                  ' cname:' +
                  D.localCName +
                  '\r\n'),
              t
            )
          }
          function O(c, d) {
            function p(e, t) {
              e = parseInt(e, 10)
              for (var r = 0; r < t.length; r++)
                if (t[r].payloadType === e || t[r].preferredPayloadType === e)
                  return t[r]
            }
            var u = { codecs: [], headerExtensions: [], fecMechanisms: [] }
            return (
              c.codecs.forEach(function (r) {
                for (var e, t, n, i, o, a = 0; a < d.codecs.length; a++) {
                  var s = d.codecs[a]
                  if (
                    r.name.toLowerCase() === s.name.toLowerCase() &&
                    r.clockRate === s.clockRate &&
                    ('rtx' !== r.name.toLowerCase() ||
                      !r.parameters ||
                      !s.parameters.apt ||
                      ((e = s),
                      (t = c.codecs),
                      (n = d.codecs),
                      (o = i = void 0),
                      (i = p(r.parameters.apt, t)),
                      (o = p(e.parameters.apt, n)),
                      i && o && i.name.toLowerCase() === o.name.toLowerCase()))
                  ) {
                    ;((s = JSON.parse(JSON.stringify(s))).numChannels =
                      Math.min(r.numChannels, s.numChannels)),
                      u.codecs.push(s),
                      (s.rtcpFeedback = s.rtcpFeedback.filter(function (e) {
                        for (var t = 0; t < r.rtcpFeedback.length; t++)
                          if (
                            r.rtcpFeedback[t].type === e.type &&
                            r.rtcpFeedback[t].parameter === e.parameter
                          )
                            return !0
                        return !1
                      }))
                    break
                  }
                }
              }),
              c.headerExtensions.forEach(function (e) {
                for (var t = 0; t < d.headerExtensions.length; t++) {
                  var r = d.headerExtensions[t]
                  if (e.uri === r.uri) {
                    u.headerExtensions.push(r)
                    break
                  }
                }
              }),
              u
            )
          }
          function o(e, t, r) {
            return (
              -1 !==
              {
                offer: {
                  setLocalDescription: ['stable', 'have-local-offer'],
                  setRemoteDescription: ['stable', 'have-remote-offer']
                },
                answer: {
                  setLocalDescription: [
                    'have-remote-offer',
                    'have-local-pranswer'
                  ],
                  setRemoteDescription: [
                    'have-local-offer',
                    'have-remote-pranswer'
                  ]
                }
              }[t][e].indexOf(r)
            )
          }
          function I(e, t) {
            var r = e.getRemoteCandidates().find(function (e) {
              return (
                t.foundation === e.foundation &&
                t.ip === e.ip &&
                t.port === e.port &&
                t.priority === e.priority &&
                t.protocol === e.protocol &&
                t.type === e.type
              )
            })
            return r || e.addRemoteCandidate(t), !r
          }
          function l(e, t) {
            t = new Error(t)
            return (
              (t.name = e),
              (t.code = {
                NotSupportedError: 9,
                InvalidStateError: 11,
                InvalidAccessError: 15,
                TypeError: void 0,
                OperationError: void 0
              }[e]),
              t
            )
          }
          t.exports = function (k, x) {
            function M(e, t) {
              t.addTrack(e),
                t.dispatchEvent(
                  new k.MediaStreamTrackEvent('addtrack', { track: e })
                )
            }
            function i(e, t, r, n) {
              var i = new Event('track')
              ;(i.track = t),
                (i.receiver = r),
                (i.transceiver = { receiver: r }),
                (i.streams = n),
                k.setTimeout(function () {
                  e._dispatchEvent('track', i)
                })
            }
            function n(e) {
              var t,
                n,
                i,
                r = this,
                o = document.createDocumentFragment()
              if (
                ([
                  'addEventListener',
                  'removeEventListener',
                  'dispatchEvent'
                ].forEach(function (e) {
                  r[e] = o[e].bind(o)
                }),
                (this.canTrickleIceCandidates = null),
                (this.needNegotiation = !1),
                (this.localStreams = []),
                (this.remoteStreams = []),
                (this._localDescription = null),
                (this._remoteDescription = null),
                (this.signalingState = 'stable'),
                (this.iceConnectionState = 'new'),
                (this.connectionState = 'new'),
                (this.iceGatheringState = 'new'),
                (e = JSON.parse(JSON.stringify(e || {}))),
                (this.usingBundle = 'max-bundle' === e.bundlePolicy),
                'negotiate' === e.rtcpMuxPolicy)
              )
                throw l(
                  'NotSupportedError',
                  "rtcpMuxPolicy 'negotiate' is not supported"
                )
              switch (
                (e.rtcpMuxPolicy || (e.rtcpMuxPolicy = 'require'),
                e.iceTransportPolicy)
              ) {
                case 'all':
                case 'relay':
                  break
                default:
                  e.iceTransportPolicy = 'all'
              }
              switch (e.bundlePolicy) {
                case 'balanced':
                case 'max-compat':
                case 'max-bundle':
                  break
                default:
                  e.bundlePolicy = 'balanced'
              }
              if (
                ((e.iceServers =
                  ((t = e.iceServers || []),
                  (n = x),
                  (i = !1),
                  (t = JSON.parse(JSON.stringify(t))).filter(function (e) {
                    if (e && (e.urls || e.url)) {
                      var t = e.urls || e.url
                      e.url &&
                        !e.urls &&
                        console.warn(
                          'RTCIceServer.url is deprecated! Use urls instead.'
                        )
                      var r = 'string' == typeof t
                      return (
                        r && (t = [t]),
                        (t = t.filter(function (e) {
                          return 0 !== e.indexOf('turn:') ||
                            -1 === e.indexOf('transport=udp') ||
                            -1 !== e.indexOf('turn:[') ||
                            i
                            ? 0 === e.indexOf('stun:') &&
                                14393 <= n &&
                                -1 === e.indexOf('?transport=udp')
                            : (i = !0)
                        })),
                        delete e.url,
                        (e.urls = r ? t[0] : t),
                        !!t.length
                      )
                    }
                  }))),
                (this._iceGatherers = []),
                e.iceCandidatePoolSize)
              )
                for (var a = e.iceCandidatePoolSize; 0 < a; a--)
                  this._iceGatherers.push(
                    new k.RTCIceGatherer({
                      iceServers: e.iceServers,
                      gatherPolicy: e.iceTransportPolicy
                    })
                  )
              else e.iceCandidatePoolSize = 0
              ;(this._config = e),
                (this.transceivers = []),
                (this._sdpSessionId = D.generateSessionId()),
                (this._sdpSessionVersion = 0),
                (this._dtlsRole = void 0),
                (this._isClosed = !1)
            }
            return (
              Object.defineProperty(n.prototype, 'localDescription', {
                configurable: !0,
                get: function () {
                  return this._localDescription
                }
              }),
              Object.defineProperty(n.prototype, 'remoteDescription', {
                configurable: !0,
                get: function () {
                  return this._remoteDescription
                }
              }),
              (n.prototype.onicecandidate = null),
              (n.prototype.onaddstream = null),
              (n.prototype.ontrack = null),
              (n.prototype.onremovestream = null),
              (n.prototype.onsignalingstatechange = null),
              (n.prototype.oniceconnectionstatechange = null),
              (n.prototype.onconnectionstatechange = null),
              (n.prototype.onicegatheringstatechange = null),
              (n.prototype.onnegotiationneeded = null),
              (n.prototype.ondatachannel = null),
              (n.prototype._dispatchEvent = function (e, t) {
                this._isClosed ||
                  (this.dispatchEvent(t),
                  'function' == typeof this['on' + e] && this['on' + e](t))
              }),
              (n.prototype._emitGatheringStateChange = function () {
                var e = new Event('icegatheringstatechange')
                this._dispatchEvent('icegatheringstatechange', e)
              }),
              (n.prototype.getConfiguration = function () {
                return this._config
              }),
              (n.prototype.getLocalStreams = function () {
                return this.localStreams
              }),
              (n.prototype.getRemoteStreams = function () {
                return this.remoteStreams
              }),
              (n.prototype._createTransceiver = function (e, t) {
                var r = 0 < this.transceivers.length,
                  e = {
                    track: null,
                    iceGatherer: null,
                    iceTransport: null,
                    dtlsTransport: null,
                    localCapabilities: null,
                    remoteCapabilities: null,
                    rtpSender: null,
                    rtpReceiver: null,
                    kind: e,
                    mid: null,
                    sendEncodingParameters: null,
                    recvEncodingParameters: null,
                    stream: null,
                    associatedRemoteMediaStreams: [],
                    wantReceive: !0
                  }
                return (
                  this.usingBundle && r
                    ? ((e.iceTransport = this.transceivers[0].iceTransport),
                      (e.dtlsTransport = this.transceivers[0].dtlsTransport))
                    : ((r = this._createIceAndDtlsTransports()),
                      (e.iceTransport = r.iceTransport),
                      (e.dtlsTransport = r.dtlsTransport)),
                  t || this.transceivers.push(e),
                  e
                )
              }),
              (n.prototype.addTrack = function (t, e) {
                if (this._isClosed)
                  throw l(
                    'InvalidStateError',
                    'Attempted to call addTrack on a closed peerconnection.'
                  )
                var r
                if (
                  this.transceivers.find(function (e) {
                    return e.track === t
                  })
                )
                  throw l('InvalidAccessError', 'Track already exists.')
                for (var n = 0; n < this.transceivers.length; n++)
                  this.transceivers[n].track ||
                    this.transceivers[n].kind !== t.kind ||
                    (r = this.transceivers[n])
                return (
                  (r = r || this._createTransceiver(t.kind)),
                  this._maybeFireNegotiationNeeded(),
                  -1 === this.localStreams.indexOf(e) &&
                    this.localStreams.push(e),
                  (r.track = t),
                  (r.stream = e),
                  (r.rtpSender = new k.RTCRtpSender(t, r.dtlsTransport)),
                  r.rtpSender
                )
              }),
              (n.prototype.addStream = function (t) {
                var n,
                  r = this
                15025 <= x
                  ? t.getTracks().forEach(function (e) {
                      r.addTrack(e, t)
                    })
                  : ((n = t.clone()),
                    t.getTracks().forEach(function (e, t) {
                      var r = n.getTracks()[t]
                      e.addEventListener('enabled', function (e) {
                        r.enabled = e.enabled
                      })
                    }),
                    n.getTracks().forEach(function (e) {
                      r.addTrack(e, n)
                    }))
              }),
              (n.prototype.removeTrack = function (t) {
                if (this._isClosed)
                  throw l(
                    'InvalidStateError',
                    'Attempted to call removeTrack on a closed peerconnection.'
                  )
                if (!(t instanceof k.RTCRtpSender))
                  throw new TypeError(
                    'Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.'
                  )
                var e = this.transceivers.find(function (e) {
                  return e.rtpSender === t
                })
                if (!e)
                  throw l(
                    'InvalidAccessError',
                    'Sender was not created by this connection.'
                  )
                var r = e.stream
                e.rtpSender.stop(),
                  (e.rtpSender = null),
                  (e.track = null),
                  (e.stream = null),
                  -1 ===
                    this.transceivers
                      .map(function (e) {
                        return e.stream
                      })
                      .indexOf(r) &&
                    -1 < this.localStreams.indexOf(r) &&
                    this.localStreams.splice(this.localStreams.indexOf(r), 1),
                  this._maybeFireNegotiationNeeded()
              }),
              (n.prototype.removeStream = function (e) {
                var r = this
                e.getTracks().forEach(function (t) {
                  var e = r.getSenders().find(function (e) {
                    return e.track === t
                  })
                  e && r.removeTrack(e)
                })
              }),
              (n.prototype.getSenders = function () {
                return this.transceivers
                  .filter(function (e) {
                    return !!e.rtpSender
                  })
                  .map(function (e) {
                    return e.rtpSender
                  })
              }),
              (n.prototype.getReceivers = function () {
                return this.transceivers
                  .filter(function (e) {
                    return !!e.rtpReceiver
                  })
                  .map(function (e) {
                    return e.rtpReceiver
                  })
              }),
              (n.prototype._createIceGatherer = function (r, e) {
                var n = this
                if (e && 0 < r) return this.transceivers[0].iceGatherer
                if (this._iceGatherers.length) return this._iceGatherers.shift()
                var i = new k.RTCIceGatherer({
                  iceServers: this._config.iceServers,
                  gatherPolicy: this._config.iceTransportPolicy
                })
                return (
                  Object.defineProperty(i, 'state', {
                    value: 'new',
                    writable: !0
                  }),
                  (this.transceivers[r].bufferedCandidateEvents = []),
                  (this.transceivers[r].bufferCandidates = function (e) {
                    var t =
                      !e.candidate || 0 === Object.keys(e.candidate).length
                    ;(i.state = t ? 'completed' : 'gathering'),
                      null !== n.transceivers[r].bufferedCandidateEvents &&
                        n.transceivers[r].bufferedCandidateEvents.push(e)
                  }),
                  i.addEventListener(
                    'localcandidate',
                    this.transceivers[r].bufferCandidates
                  ),
                  i
                )
              }),
              (n.prototype._gather = function (i, o) {
                var e,
                  a = this,
                  s = this.transceivers[o].iceGatherer
                s.onlocalcandidate ||
                  ((e = this.transceivers[o].bufferedCandidateEvents),
                  (this.transceivers[o].bufferedCandidateEvents = null),
                  s.removeEventListener(
                    'localcandidate',
                    this.transceivers[o].bufferCandidates
                  ),
                  (s.onlocalcandidate = function (e) {
                    var t, r, n
                    ;(a.usingBundle && 0 < o) ||
                      (((t = new Event('icecandidate')).candidate = {
                        sdpMid: i,
                        sdpMLineIndex: o
                      }),
                      (e = !(r = e.candidate) || 0 === Object.keys(r).length)
                        ? ('new' !== s.state && 'gathering' !== s.state) ||
                          (s.state = 'completed')
                        : ('new' === s.state && (s.state = 'gathering'),
                          (r.component = 1),
                          (r.ufrag = s.getLocalParameters().usernameFragment),
                          (n = D.writeCandidate(r)),
                          (t.candidate = Object.assign(
                            t.candidate,
                            D.parseCandidate(n)
                          )),
                          (t.candidate.candidate = n),
                          (t.candidate.toJSON = function () {
                            return {
                              candidate: t.candidate.candidate,
                              sdpMid: t.candidate.sdpMid,
                              sdpMLineIndex: t.candidate.sdpMLineIndex,
                              usernameFragment: t.candidate.usernameFragment
                            }
                          })),
                      ((n = D.getMediaSections(a._localDescription.sdp))[
                        t.candidate.sdpMLineIndex
                      ] += e
                        ? 'a=end-of-candidates\r\n'
                        : 'a=' + t.candidate.candidate + '\r\n'),
                      (a._localDescription.sdp =
                        D.getDescription(a._localDescription.sdp) + n.join('')),
                      (n = a.transceivers.every(function (e) {
                        return (
                          e.iceGatherer && 'completed' === e.iceGatherer.state
                        )
                      })),
                      'gathering' !== a.iceGatheringState &&
                        ((a.iceGatheringState = 'gathering'),
                        a._emitGatheringStateChange()),
                      e || a._dispatchEvent('icecandidate', t),
                      n &&
                        (a._dispatchEvent(
                          'icecandidate',
                          new Event('icecandidate')
                        ),
                        (a.iceGatheringState = 'complete'),
                        a._emitGatheringStateChange()))
                  }),
                  k.setTimeout(function () {
                    e.forEach(function (e) {
                      s.onlocalcandidate(e)
                    })
                  }, 0))
              }),
              (n.prototype._createIceAndDtlsTransports = function () {
                var e = this,
                  t = new k.RTCIceTransport(null)
                t.onicestatechange = function () {
                  e._updateIceConnectionState(), e._updateConnectionState()
                }
                var r = new k.RTCDtlsTransport(t)
                return (
                  (r.ondtlsstatechange = function () {
                    e._updateConnectionState()
                  }),
                  (r.onerror = function () {
                    Object.defineProperty(r, 'state', {
                      value: 'failed',
                      writable: !0
                    }),
                      e._updateConnectionState()
                  }),
                  { iceTransport: t, dtlsTransport: r }
                )
              }),
              (n.prototype._disposeIceAndDtlsTransports = function (e) {
                var t = this.transceivers[e].iceGatherer
                t &&
                  (delete t.onlocalcandidate,
                  delete this.transceivers[e].iceGatherer)
                t = this.transceivers[e].iceTransport
                t &&
                  (delete t.onicestatechange,
                  delete this.transceivers[e].iceTransport)
                t = this.transceivers[e].dtlsTransport
                t &&
                  (delete t.ondtlsstatechange,
                  delete t.onerror,
                  delete this.transceivers[e].dtlsTransport)
              }),
              (n.prototype._transceive = function (e, t, r) {
                var n = O(e.localCapabilities, e.remoteCapabilities)
                t &&
                  e.rtpSender &&
                  ((n.encodings = e.sendEncodingParameters),
                  (n.rtcp = {
                    cname: D.localCName,
                    compound: e.rtcpParameters.compound
                  }),
                  e.recvEncodingParameters.length &&
                    (n.rtcp.ssrc = e.recvEncodingParameters[0].ssrc),
                  e.rtpSender.send(n)),
                  r &&
                    e.rtpReceiver &&
                    0 < n.codecs.length &&
                    ('video' === e.kind &&
                      e.recvEncodingParameters &&
                      x < 15019 &&
                      e.recvEncodingParameters.forEach(function (e) {
                        delete e.rtx
                      }),
                    e.recvEncodingParameters.length
                      ? (n.encodings = e.recvEncodingParameters)
                      : (n.encodings = [{}]),
                    (n.rtcp = { compound: e.rtcpParameters.compound }),
                    e.rtcpParameters.cname &&
                      (n.rtcp.cname = e.rtcpParameters.cname),
                    e.sendEncodingParameters.length &&
                      (n.rtcp.ssrc = e.sendEncodingParameters[0].ssrc),
                    e.rtpReceiver.receive(n))
              }),
              (n.prototype.setLocalDescription = function (e) {
                var t,
                  d,
                  p,
                  u = this
                return -1 === ['offer', 'answer'].indexOf(e.type)
                  ? Promise.reject(
                      l('TypeError', 'Unsupported type "' + e.type + '"')
                    )
                  : !o('setLocalDescription', e.type, u.signalingState) ||
                    u._isClosed
                  ? Promise.reject(
                      l(
                        'InvalidStateError',
                        'Can not set local ' +
                          e.type +
                          ' in state ' +
                          u.signalingState
                      )
                    )
                  : ('offer' === e.type
                      ? ((t = D.splitSections(e.sdp)),
                        (d = t.shift()),
                        t.forEach(function (e, t) {
                          e = D.parseRtpParameters(e)
                          u.transceivers[t].localCapabilities = e
                        }),
                        u.transceivers.forEach(function (e, t) {
                          u._gather(e.mid, t)
                        }))
                      : 'answer' === e.type &&
                        ((t = D.splitSections(u._remoteDescription.sdp)),
                        (d = t.shift()),
                        (p = 0 < D.matchPrefix(d, 'a=ice-lite').length),
                        t.forEach(function (e, t) {
                          var r,
                            n = u.transceivers[t],
                            i = n.iceGatherer,
                            o = n.iceTransport,
                            a = n.dtlsTransport,
                            s = n.localCapabilities,
                            c = n.remoteCapabilities
                          ;(D.isRejected(e) &&
                            0 === D.matchPrefix(e, 'a=bundle-only').length) ||
                            n.rejected ||
                            ((r = D.getIceParameters(e, d)),
                            (e = D.getDtlsParameters(e, d)),
                            p && (e.role = 'server'),
                            (u.usingBundle && 0 !== t) ||
                              (u._gather(n.mid, t),
                              'new' === o.state &&
                                o.start(i, r, p ? 'controlling' : 'controlled'),
                              'new' === a.state && a.start(e)),
                            (c = O(s, c)),
                            u._transceive(n, 0 < c.codecs.length, !1))
                        })),
                    (u._localDescription = { type: e.type, sdp: e.sdp }),
                    'offer' === e.type
                      ? u._updateSignalingState('have-local-offer')
                      : u._updateSignalingState('stable'),
                    Promise.resolve())
              }),
              (n.prototype.setRemoteDescription = function (T) {
                var P = this
                if (-1 === ['offer', 'answer'].indexOf(T.type))
                  return Promise.reject(
                    l('TypeError', 'Unsupported type "' + T.type + '"')
                  )
                if (
                  !o('setRemoteDescription', T.type, P.signalingState) ||
                  P._isClosed
                )
                  return Promise.reject(
                    l(
                      'InvalidStateError',
                      'Can not set remote ' +
                        T.type +
                        ' in state ' +
                        P.signalingState
                    )
                  )
                var R = {}
                P.remoteStreams.forEach(function (e) {
                  R[e.id] = e
                })
                var b = [],
                  e = D.splitSections(T.sdp),
                  E = e.shift(),
                  _ = 0 < D.matchPrefix(E, 'a=ice-lite').length,
                  w = 0 < D.matchPrefix(E, 'a=group:BUNDLE ').length
                P.usingBundle = w
                var t = D.matchPrefix(E, 'a=ice-options:')[0]
                return (
                  (P.canTrickleIceCandidates =
                    !!t && 0 <= t.substr(14).split(' ').indexOf('trickle')),
                  e.forEach(function (e, t) {
                    var r,
                      n,
                      i,
                      o,
                      a,
                      s,
                      c,
                      d,
                      p,
                      u,
                      l,
                      f,
                      m = D.splitLines(e),
                      h = D.getKind(e),
                      v =
                        D.isRejected(e) &&
                        0 === D.matchPrefix(e, 'a=bundle-only').length,
                      y = m[0].substr(2).split(' ')[2],
                      g = D.getDirection(e, E),
                      C = D.parseMsid(e),
                      S = D.getMid(e) || D.generateIdentifier()
                    v ||
                    ('application' === h &&
                      ('DTLS/SCTP' === y || 'UDP/DTLS/SCTP' === y))
                      ? (P.transceivers[t] = {
                          mid: S,
                          kind: h,
                          protocol: y,
                          rejected: !0
                        })
                      : (!v &&
                          P.transceivers[t] &&
                          P.transceivers[t].rejected &&
                          (P.transceivers[t] = P._createTransceiver(h, !0)),
                        (p = D.parseRtpParameters(e)),
                        v ||
                          ((c = D.getIceParameters(e, E)),
                          ((d = D.getDtlsParameters(e, E)).role = 'client')),
                        (o = D.parseRtpEncodingParameters(e)),
                        (u = D.parseRtcpParameters(e)),
                        (l =
                          0 <
                          D.matchPrefix(e, 'a=end-of-candidates', E).length),
                        (m = D.matchPrefix(e, 'a=candidate:')
                          .map(function (e) {
                            return D.parseCandidate(e)
                          })
                          .filter(function (e) {
                            return 1 === e.component
                          })),
                        ('offer' === T.type || 'answer' === T.type) &&
                          !v &&
                          w &&
                          0 < t &&
                          P.transceivers[t] &&
                          (P._disposeIceAndDtlsTransports(t),
                          (P.transceivers[t].iceGatherer =
                            P.transceivers[0].iceGatherer),
                          (P.transceivers[t].iceTransport =
                            P.transceivers[0].iceTransport),
                          (P.transceivers[t].dtlsTransport =
                            P.transceivers[0].dtlsTransport),
                          P.transceivers[t].rtpSender &&
                            P.transceivers[t].rtpSender.setTransport(
                              P.transceivers[0].dtlsTransport
                            ),
                          P.transceivers[t].rtpReceiver &&
                            P.transceivers[t].rtpReceiver.setTransport(
                              P.transceivers[0].dtlsTransport
                            )),
                        'offer' !== T.type || v
                          ? 'answer' !== T.type ||
                            v ||
                            ((y = (r = P.transceivers[t]).iceGatherer),
                            (e = r.iceTransport),
                            (v = r.dtlsTransport),
                            (n = r.rtpReceiver),
                            (i = r.sendEncodingParameters),
                            (a = r.localCapabilities),
                            (P.transceivers[t].recvEncodingParameters = o),
                            (P.transceivers[t].remoteCapabilities = p),
                            (P.transceivers[t].rtcpParameters = u),
                            m.length &&
                              'new' === e.state &&
                              ((!_ && !l) || (w && 0 !== t)
                                ? m.forEach(function (e) {
                                    I(r.iceTransport, e)
                                  })
                                : e.setRemoteCandidates(m)),
                            (w && 0 !== t) ||
                              ('new' === e.state &&
                                e.start(y, c, 'controlling'),
                              'new' === v.state && v.start(d)),
                            !O(
                              r.localCapabilities,
                              r.remoteCapabilities
                            ).codecs.filter(function (e) {
                              return 'rtx' === e.name.toLowerCase()
                            }).length &&
                              r.sendEncodingParameters[0].rtx &&
                              delete r.sendEncodingParameters[0].rtx,
                            P._transceive(
                              r,
                              'sendrecv' === g || 'recvonly' === g,
                              'sendrecv' === g || 'sendonly' === g
                            ),
                            !n || ('sendrecv' !== g && 'sendonly' !== g)
                              ? delete r.rtpReceiver
                              : ((s = n.track),
                                C
                                  ? (R[C.stream] ||
                                      (R[C.stream] = new k.MediaStream()),
                                    M(s, R[C.stream]),
                                    b.push([s, n, R[C.stream]]))
                                  : (R.default ||
                                      (R.default = new k.MediaStream()),
                                    M(s, R.default),
                                    b.push([s, n, R.default]))))
                          : (((r =
                              P.transceivers[t] ||
                              P._createTransceiver(h)).mid = S),
                            r.iceGatherer ||
                              (r.iceGatherer = P._createIceGatherer(t, w)),
                            m.length &&
                              'new' === r.iceTransport.state &&
                              (!l || (w && 0 !== t)
                                ? m.forEach(function (e) {
                                    I(r.iceTransport, e)
                                  })
                                : r.iceTransport.setRemoteCandidates(m)),
                            (a = k.RTCRtpReceiver.getCapabilities(h)),
                            x < 15019 &&
                              (a.codecs = a.codecs.filter(function (e) {
                                return 'rtx' !== e.name
                              })),
                            (i = r.sendEncodingParameters || [
                              { ssrc: 1001 * (2 * t + 2) }
                            ]),
                            (m = !1),
                            'sendrecv' === g || 'sendonly' === g
                              ? ((m = !r.rtpReceiver),
                                (n =
                                  r.rtpReceiver ||
                                  new k.RTCRtpReceiver(r.dtlsTransport, h)),
                                m &&
                                  ((s = n.track),
                                  (C && '-' === C.stream) ||
                                    (f = C
                                      ? (R[C.stream] ||
                                          ((R[C.stream] = new k.MediaStream()),
                                          Object.defineProperty(
                                            R[C.stream],
                                            'id',
                                            {
                                              get: function () {
                                                return C.stream
                                              }
                                            }
                                          )),
                                        Object.defineProperty(s, 'id', {
                                          get: function () {
                                            return C.track
                                          }
                                        }),
                                        R[C.stream])
                                      : (R.default ||
                                          (R.default = new k.MediaStream()),
                                        R.default)),
                                  f &&
                                    (M(s, f),
                                    r.associatedRemoteMediaStreams.push(f)),
                                  b.push([s, n, f])))
                              : r.rtpReceiver &&
                                r.rtpReceiver.track &&
                                (r.associatedRemoteMediaStreams.forEach(
                                  function (e) {
                                    var t = e.getTracks().find(function (e) {
                                      return e.id === r.rtpReceiver.track.id
                                    })
                                    t &&
                                      ((t = t),
                                      (e = e).removeTrack(t),
                                      e.dispatchEvent(
                                        new k.MediaStreamTrackEvent(
                                          'removetrack',
                                          { track: t }
                                        )
                                      ))
                                  }
                                ),
                                (r.associatedRemoteMediaStreams = [])),
                            (r.localCapabilities = a),
                            (r.remoteCapabilities = p),
                            (r.rtpReceiver = n),
                            (r.rtcpParameters = u),
                            (r.sendEncodingParameters = i),
                            (r.recvEncodingParameters = o),
                            P._transceive(P.transceivers[t], !1, m)))
                  }),
                  void 0 === P._dtlsRole &&
                    (P._dtlsRole = 'offer' === T.type ? 'active' : 'passive'),
                  (P._remoteDescription = { type: T.type, sdp: T.sdp }),
                  'offer' === T.type
                    ? P._updateSignalingState('have-remote-offer')
                    : P._updateSignalingState('stable'),
                  Object.keys(R).forEach(function (e) {
                    var t,
                      n = R[e]
                    n.getTracks().length &&
                      (-1 === P.remoteStreams.indexOf(n) &&
                        (P.remoteStreams.push(n),
                        ((t = new Event('addstream')).stream = n),
                        k.setTimeout(function () {
                          P._dispatchEvent('addstream', t)
                        })),
                      b.forEach(function (e) {
                        var t = e[0],
                          r = e[1]
                        n.id === e[2].id && i(P, t, r, [n])
                      }))
                  }),
                  b.forEach(function (e) {
                    e[2] || i(P, e[0], e[1], [])
                  }),
                  k.setTimeout(function () {
                    P &&
                      P.transceivers &&
                      P.transceivers.forEach(function (e) {
                        e.iceTransport &&
                          'new' === e.iceTransport.state &&
                          0 < e.iceTransport.getRemoteCandidates().length &&
                          (console.warn(
                            'Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification'
                          ),
                          e.iceTransport.addRemoteCandidate({}))
                      })
                  }, 4e3),
                  Promise.resolve()
                )
              }),
              (n.prototype.close = function () {
                this.transceivers.forEach(function (e) {
                  e.iceTransport && e.iceTransport.stop(),
                    e.dtlsTransport && e.dtlsTransport.stop(),
                    e.rtpSender && e.rtpSender.stop(),
                    e.rtpReceiver && e.rtpReceiver.stop()
                }),
                  (this._isClosed = !0),
                  this._updateSignalingState('closed')
              }),
              (n.prototype._updateSignalingState = function (e) {
                this.signalingState = e
                e = new Event('signalingstatechange')
                this._dispatchEvent('signalingstatechange', e)
              }),
              (n.prototype._maybeFireNegotiationNeeded = function () {
                var t = this
                'stable' === this.signalingState &&
                  !0 !== this.needNegotiation &&
                  ((this.needNegotiation = !0),
                  k.setTimeout(function () {
                    var e
                    t.needNegotiation &&
                      ((t.needNegotiation = !1),
                      (e = new Event('negotiationneeded')),
                      t._dispatchEvent('negotiationneeded', e))
                  }, 0))
              }),
              (n.prototype._updateIceConnectionState = function () {
                var e,
                  t = {
                    new: 0,
                    closed: 0,
                    checking: 0,
                    connected: 0,
                    completed: 0,
                    disconnected: 0,
                    failed: 0
                  }
                this.transceivers.forEach(function (e) {
                  e.iceTransport && !e.rejected && t[e.iceTransport.state]++
                }),
                  (e = 'new'),
                  0 < t.failed
                    ? (e = 'failed')
                    : 0 < t.checking
                    ? (e = 'checking')
                    : 0 < t.disconnected
                    ? (e = 'disconnected')
                    : 0 < t.new
                    ? (e = 'new')
                    : 0 < t.connected
                    ? (e = 'connected')
                    : 0 < t.completed && (e = 'completed'),
                  e !== this.iceConnectionState &&
                    ((this.iceConnectionState = e),
                    (e = new Event('iceconnectionstatechange')),
                    this._dispatchEvent('iceconnectionstatechange', e))
              }),
              (n.prototype._updateConnectionState = function () {
                var e,
                  t = {
                    new: 0,
                    closed: 0,
                    connecting: 0,
                    connected: 0,
                    completed: 0,
                    disconnected: 0,
                    failed: 0
                  }
                this.transceivers.forEach(function (e) {
                  e.iceTransport &&
                    e.dtlsTransport &&
                    !e.rejected &&
                    (t[e.iceTransport.state]++, t[e.dtlsTransport.state]++)
                }),
                  (t.connected += t.completed),
                  (e = 'new'),
                  0 < t.failed
                    ? (e = 'failed')
                    : 0 < t.connecting
                    ? (e = 'connecting')
                    : 0 < t.disconnected
                    ? (e = 'disconnected')
                    : 0 < t.new
                    ? (e = 'new')
                    : 0 < t.connected && (e = 'connected'),
                  e !== this.connectionState &&
                    ((this.connectionState = e),
                    (e = new Event('connectionstatechange')),
                    this._dispatchEvent('connectionstatechange', e))
              }),
              (n.prototype.createOffer = function () {
                var o = this
                if (o._isClosed)
                  return Promise.reject(
                    l(
                      'InvalidStateError',
                      'Can not call createOffer after close'
                    )
                  )
                var t = o.transceivers.filter(function (e) {
                    return 'audio' === e.kind
                  }).length,
                  r = o.transceivers.filter(function (e) {
                    return 'video' === e.kind
                  }).length,
                  e = arguments[0]
                if (e) {
                  if (e.mandatory || e.optional)
                    throw new TypeError(
                      'Legacy mandatory/optional constraints not supported.'
                    )
                  void 0 !== e.offerToReceiveAudio &&
                    (t =
                      !0 === e.offerToReceiveAudio
                        ? 1
                        : !1 === e.offerToReceiveAudio
                        ? 0
                        : e.offerToReceiveAudio),
                    void 0 !== e.offerToReceiveVideo &&
                      (r =
                        !0 === e.offerToReceiveVideo
                          ? 1
                          : !1 === e.offerToReceiveVideo
                          ? 0
                          : e.offerToReceiveVideo)
                }
                for (
                  o.transceivers.forEach(function (e) {
                    'audio' === e.kind
                      ? --t < 0 && (e.wantReceive = !1)
                      : 'video' === e.kind && --r < 0 && (e.wantReceive = !1)
                  });
                  0 < t || 0 < r;

                )
                  0 < t && (o._createTransceiver('audio'), t--),
                    0 < r && (o._createTransceiver('video'), r--)
                var n = D.writeSessionBoilerplate(
                  o._sdpSessionId,
                  o._sdpSessionVersion++
                )
                o.transceivers.forEach(function (e, t) {
                  var r = e.track,
                    n = e.kind,
                    i = e.mid || D.generateIdentifier()
                  ;(e.mid = i),
                    e.iceGatherer ||
                      (e.iceGatherer = o._createIceGatherer(t, o.usingBundle))
                  i = k.RTCRtpSender.getCapabilities(n)
                  x < 15019 &&
                    (i.codecs = i.codecs.filter(function (e) {
                      return 'rtx' !== e.name
                    })),
                    i.codecs.forEach(function (t) {
                      'H264' === t.name &&
                        void 0 === t.parameters['level-asymmetry-allowed'] &&
                        (t.parameters['level-asymmetry-allowed'] = '1'),
                        e.remoteCapabilities &&
                          e.remoteCapabilities.codecs &&
                          e.remoteCapabilities.codecs.forEach(function (e) {
                            t.name.toLowerCase() === e.name.toLowerCase() &&
                              t.clockRate === e.clockRate &&
                              (t.preferredPayloadType = e.payloadType)
                          })
                    }),
                    i.headerExtensions.forEach(function (t) {
                      ;(
                        (e.remoteCapabilities &&
                          e.remoteCapabilities.headerExtensions) ||
                        []
                      ).forEach(function (e) {
                        t.uri === e.uri && (t.id = e.id)
                      })
                    })
                  t = e.sendEncodingParameters || [{ ssrc: 1001 * (2 * t + 1) }]
                  r &&
                    15019 <= x &&
                    'video' === n &&
                    !t[0].rtx &&
                    (t[0].rtx = { ssrc: t[0].ssrc + 1 }),
                    e.wantReceive &&
                      (e.rtpReceiver = new k.RTCRtpReceiver(
                        e.dtlsTransport,
                        n
                      )),
                    (e.localCapabilities = i),
                    (e.sendEncodingParameters = t)
                }),
                  'max-compat' !== o._config.bundlePolicy &&
                    (n +=
                      'a=group:BUNDLE ' +
                      o.transceivers
                        .map(function (e) {
                          return e.mid
                        })
                        .join(' ') +
                      '\r\n'),
                  (n += 'a=ice-options:trickle\r\n'),
                  o.transceivers.forEach(function (e, t) {
                    ;(n += a(
                      e,
                      e.localCapabilities,
                      'offer',
                      e.stream,
                      o._dtlsRole
                    )),
                      (n += 'a=rtcp-rsize\r\n'),
                      !e.iceGatherer ||
                        'new' === o.iceGatheringState ||
                        (0 !== t && o.usingBundle) ||
                        (e.iceGatherer
                          .getLocalCandidates()
                          .forEach(function (e) {
                            ;(e.component = 1),
                              (n += 'a=' + D.writeCandidate(e) + '\r\n')
                          }),
                        'completed' === e.iceGatherer.state &&
                          (n += 'a=end-of-candidates\r\n'))
                  })
                e = new k.RTCSessionDescription({ type: 'offer', sdp: n })
                return Promise.resolve(e)
              }),
              (n.prototype.createAnswer = function () {
                var n = this
                if (n._isClosed)
                  return Promise.reject(
                    l(
                      'InvalidStateError',
                      'Can not call createAnswer after close'
                    )
                  )
                if (
                  'have-remote-offer' !== n.signalingState &&
                  'have-local-pranswer' !== n.signalingState
                )
                  return Promise.reject(
                    l(
                      'InvalidStateError',
                      'Can not call createAnswer in signalingState ' +
                        n.signalingState
                    )
                  )
                var i = D.writeSessionBoilerplate(
                  n._sdpSessionId,
                  n._sdpSessionVersion++
                )
                n.usingBundle &&
                  (i +=
                    'a=group:BUNDLE ' +
                    n.transceivers
                      .map(function (e) {
                        return e.mid
                      })
                      .join(' ') +
                    '\r\n'),
                  (i += 'a=ice-options:trickle\r\n')
                var o = D.getMediaSections(n._remoteDescription.sdp).length
                n.transceivers.forEach(function (e, t) {
                  if (!(o < t + 1)) {
                    if (e.rejected)
                      return (
                        'application' === e.kind
                          ? 'DTLS/SCTP' === e.protocol
                            ? (i += 'm=application 0 DTLS/SCTP 5000\r\n')
                            : (i +=
                                'm=application 0 ' +
                                e.protocol +
                                ' webrtc-datachannel\r\n')
                          : 'audio' === e.kind
                          ? (i +=
                              'm=audio 0 UDP/TLS/RTP/SAVPF 0\r\na=rtpmap:0 PCMU/8000\r\n')
                          : 'video' === e.kind &&
                            (i +=
                              'm=video 0 UDP/TLS/RTP/SAVPF 120\r\na=rtpmap:120 VP8/90000\r\n'),
                        void (i +=
                          'c=IN IP4 0.0.0.0\r\na=inactive\r\na=mid:' +
                          e.mid +
                          '\r\n')
                      )
                    e.stream &&
                      ('audio' === e.kind
                        ? (r = e.stream.getAudioTracks()[0])
                        : 'video' === e.kind &&
                          (r = e.stream.getVideoTracks()[0]),
                      r &&
                        15019 <= x &&
                        'video' === e.kind &&
                        !e.sendEncodingParameters[0].rtx &&
                        (e.sendEncodingParameters[0].rtx = {
                          ssrc: e.sendEncodingParameters[0].ssrc + 1
                        }))
                    var r = O(e.localCapabilities, e.remoteCapabilities)
                    !r.codecs.filter(function (e) {
                      return 'rtx' === e.name.toLowerCase()
                    }).length &&
                      e.sendEncodingParameters[0].rtx &&
                      delete e.sendEncodingParameters[0].rtx,
                      (i += a(e, r, 'answer', e.stream, n._dtlsRole)),
                      e.rtcpParameters &&
                        e.rtcpParameters.reducedSize &&
                        (i += 'a=rtcp-rsize\r\n')
                  }
                })
                var e = new k.RTCSessionDescription({ type: 'answer', sdp: i })
                return Promise.resolve(e)
              }),
              (n.prototype.addIceCandidate = function (s) {
                var c,
                  d = this
                return s && void 0 === s.sdpMLineIndex && !s.sdpMid
                  ? Promise.reject(
                      new TypeError('sdpMLineIndex or sdpMid required')
                    )
                  : new Promise(function (e, t) {
                      if (!d._remoteDescription)
                        return t(
                          l(
                            'InvalidStateError',
                            'Can not add ICE candidate without a remote description'
                          )
                        )
                      if (s && '' !== s.candidate) {
                        var r = s.sdpMLineIndex
                        if (s.sdpMid)
                          for (var n = 0; n < d.transceivers.length; n++)
                            if (d.transceivers[n].mid === s.sdpMid) {
                              r = n
                              break
                            }
                        var i = d.transceivers[r]
                        if (!i)
                          return t(
                            l('OperationError', 'Can not add ICE candidate')
                          )
                        if (i.rejected) return e()
                        var o =
                          0 < Object.keys(s.candidate).length
                            ? D.parseCandidate(s.candidate)
                            : {}
                        if (
                          'tcp' === o.protocol &&
                          (0 === o.port || 9 === o.port)
                        )
                          return e()
                        if (o.component && 1 !== o.component) return e()
                        if (
                          (0 === r ||
                            (0 < r &&
                              i.iceTransport !==
                                d.transceivers[0].iceTransport)) &&
                          !I(i.iceTransport, o)
                        )
                          return t(
                            l('OperationError', 'Can not add ICE candidate')
                          )
                        t = s.candidate.trim()
                        0 === t.indexOf('a=') && (t = t.substr(2)),
                          ((c = D.getMediaSections(d._remoteDescription.sdp))[
                            r
                          ] +=
                            'a=' + (o.type ? t : 'end-of-candidates') + '\r\n'),
                          (d._remoteDescription.sdp =
                            D.getDescription(d._remoteDescription.sdp) +
                            c.join(''))
                      } else for (var a = 0; a < d.transceivers.length && (d.transceivers[a].rejected || (d.transceivers[a].iceTransport.addRemoteCandidate({}), ((c = D.getMediaSections(d._remoteDescription.sdp))[a] += 'a=end-of-candidates\r\n'), (d._remoteDescription.sdp = D.getDescription(d._remoteDescription.sdp) + c.join('')), !d.usingBundle)); a++);
                      e()
                    })
              }),
              (n.prototype.getStats = function (t) {
                if (t && t instanceof k.MediaStreamTrack) {
                  var r = null
                  if (
                    (this.transceivers.forEach(function (e) {
                      e.rtpSender && e.rtpSender.track === t
                        ? (r = e.rtpSender)
                        : e.rtpReceiver &&
                          e.rtpReceiver.track === t &&
                          (r = e.rtpReceiver)
                    }),
                    !r)
                  )
                    throw l('InvalidAccessError', 'Invalid selector.')
                  return r.getStats()
                }
                var n = []
                return (
                  this.transceivers.forEach(function (t) {
                    ;[
                      'rtpSender',
                      'rtpReceiver',
                      'iceGatherer',
                      'iceTransport',
                      'dtlsTransport'
                    ].forEach(function (e) {
                      t[e] && n.push(t[e].getStats())
                    })
                  }),
                  Promise.all(n).then(function (e) {
                    var t = new Map()
                    return (
                      e.forEach(function (e) {
                        e.forEach(function (e) {
                          t.set(e.id, e)
                        })
                      }),
                      t
                    )
                  })
                )
              }),
              [
                'RTCRtpSender',
                'RTCRtpReceiver',
                'RTCIceGatherer',
                'RTCIceTransport',
                'RTCDtlsTransport'
              ].forEach(function (e) {
                var t,
                  e = k[e]
                e &&
                  e.prototype &&
                  e.prototype.getStats &&
                  ((t = e.prototype.getStats),
                  (e.prototype.getStats = function () {
                    return t.apply(this).then(function (r) {
                      var n = new Map()
                      return (
                        Object.keys(r).forEach(function (e) {
                          var t
                          ;(r[e].type =
                            {
                              inboundrtp: 'inbound-rtp',
                              outboundrtp: 'outbound-rtp',
                              candidatepair: 'candidate-pair',
                              localcandidate: 'local-candidate',
                              remotecandidate: 'remote-candidate'
                            }[(t = r[e]).type] || t.type),
                            n.set(e, r[e])
                        }),
                        n
                      )
                    })
                  }))
              }),
              ['createOffer', 'createAnswer'].forEach(function (e) {
                var r = n.prototype[e]
                n.prototype[e] = function () {
                  var t = arguments
                  return 'function' == typeof t[0] || 'function' == typeof t[1]
                    ? r.apply(this, [arguments[2]]).then(
                        function (e) {
                          'function' == typeof t[0] && t[0].apply(null, [e])
                        },
                        function (e) {
                          'function' == typeof t[1] && t[1].apply(null, [e])
                        }
                      )
                    : r.apply(this, arguments)
                }
              }),
              [
                'setLocalDescription',
                'setRemoteDescription',
                'addIceCandidate'
              ].forEach(function (e) {
                var r = n.prototype[e]
                n.prototype[e] = function () {
                  var t = arguments
                  return 'function' == typeof t[1] || 'function' == typeof t[2]
                    ? r.apply(this, arguments).then(
                        function () {
                          'function' == typeof t[1] && t[1].apply(null)
                        },
                        function (e) {
                          'function' == typeof t[2] && t[2].apply(null, [e])
                        }
                      )
                    : r.apply(this, arguments)
                }
              }),
              ['getStats'].forEach(function (e) {
                var t = n.prototype[e]
                n.prototype[e] = function () {
                  var e = arguments
                  return 'function' == typeof e[1]
                    ? t.apply(this, arguments).then(function () {
                        'function' == typeof e[1] && e[1].apply(null)
                      })
                    : t.apply(this, arguments)
                }
              }),
              n
            )
          }
        },
        { sdp: 17 }
      ],
      17: [
        function (e, t, r) {
          'use strict'
          var d = {
            generateIdentifier: function () {
              return Math.random().toString(36).substr(2, 10)
            }
          }
          ;(d.localCName = d.generateIdentifier()),
            (d.splitLines = function (e) {
              return e
                .trim()
                .split('\n')
                .map(function (e) {
                  return e.trim()
                })
            }),
            (d.splitSections = function (e) {
              return e.split('\nm=').map(function (e, t) {
                return (0 < t ? 'm=' + e : e).trim() + '\r\n'
              })
            }),
            (d.getDescription = function (e) {
              e = d.splitSections(e)
              return e && e[0]
            }),
            (d.getMediaSections = function (e) {
              e = d.splitSections(e)
              return e.shift(), e
            }),
            (d.matchPrefix = function (e, t) {
              return d.splitLines(e).filter(function (e) {
                return 0 === e.indexOf(t)
              })
            }),
            (d.parseCandidate = function (e) {
              for (
                var t,
                  r = {
                    foundation: (t = (
                      0 === e.indexOf('a=candidate:')
                        ? e.substring(12)
                        : e.substring(10)
                    ).split(' '))[0],
                    component: parseInt(t[1], 10),
                    protocol: t[2].toLowerCase(),
                    priority: parseInt(t[3], 10),
                    ip: t[4],
                    address: t[4],
                    port: parseInt(t[5], 10),
                    type: t[7]
                  },
                  n = 8;
                n < t.length;
                n += 2
              )
                switch (t[n]) {
                  case 'raddr':
                    r.relatedAddress = t[n + 1]
                    break
                  case 'rport':
                    r.relatedPort = parseInt(t[n + 1], 10)
                    break
                  case 'tcptype':
                    r.tcpType = t[n + 1]
                    break
                  case 'ufrag':
                    ;(r.ufrag = t[n + 1]), (r.usernameFragment = t[n + 1])
                    break
                  default:
                    r[t[n]] = t[n + 1]
                }
              return r
            }),
            (d.writeCandidate = function (e) {
              var t = []
              t.push(e.foundation),
                t.push(e.component),
                t.push(e.protocol.toUpperCase()),
                t.push(e.priority),
                t.push(e.address || e.ip),
                t.push(e.port)
              var r = e.type
              return (
                t.push('typ'),
                t.push(r),
                'host' !== r &&
                  e.relatedAddress &&
                  e.relatedPort &&
                  (t.push('raddr'),
                  t.push(e.relatedAddress),
                  t.push('rport'),
                  t.push(e.relatedPort)),
                e.tcpType &&
                  'tcp' === e.protocol.toLowerCase() &&
                  (t.push('tcptype'), t.push(e.tcpType)),
                (e.usernameFragment || e.ufrag) &&
                  (t.push('ufrag'), t.push(e.usernameFragment || e.ufrag)),
                'candidate:' + t.join(' ')
              )
            }),
            (d.parseIceOptions = function (e) {
              return e.substr(14).split(' ')
            }),
            (d.parseRtpMap = function (e) {
              var t = e.substr(9).split(' '),
                e = { payloadType: parseInt(t.shift(), 10) },
                t = t[0].split('/')
              return (
                (e.name = t[0]),
                (e.clockRate = parseInt(t[1], 10)),
                (e.channels = 3 === t.length ? parseInt(t[2], 10) : 1),
                (e.numChannels = e.channels),
                e
              )
            }),
            (d.writeRtpMap = function (e) {
              var t = e.payloadType
              void 0 !== e.preferredPayloadType && (t = e.preferredPayloadType)
              var r = e.channels || e.numChannels || 1
              return (
                'a=rtpmap:' +
                t +
                ' ' +
                e.name +
                '/' +
                e.clockRate +
                (1 !== r ? '/' + r : '') +
                '\r\n'
              )
            }),
            (d.parseExtmap = function (e) {
              e = e.substr(9).split(' ')
              return {
                id: parseInt(e[0], 10),
                direction:
                  0 < e[0].indexOf('/') ? e[0].split('/')[1] : 'sendrecv',
                uri: e[1]
              }
            }),
            (d.writeExtmap = function (e) {
              return (
                'a=extmap:' +
                (e.id || e.preferredId) +
                (e.direction && 'sendrecv' !== e.direction
                  ? '/' + e.direction
                  : '') +
                ' ' +
                e.uri +
                '\r\n'
              )
            }),
            (d.parseFmtp = function (e) {
              for (
                var t,
                  r = {},
                  n = e.substr(e.indexOf(' ') + 1).split(';'),
                  i = 0;
                i < n.length;
                i++
              )
                r[(t = n[i].trim().split('='))[0].trim()] = t[1]
              return r
            }),
            (d.writeFmtp = function (t) {
              var r,
                e = '',
                n = t.payloadType
              return (
                void 0 !== t.preferredPayloadType &&
                  (n = t.preferredPayloadType),
                t.parameters &&
                  Object.keys(t.parameters).length &&
                  ((r = []),
                  Object.keys(t.parameters).forEach(function (e) {
                    t.parameters[e]
                      ? r.push(e + '=' + t.parameters[e])
                      : r.push(e)
                  }),
                  (e += 'a=fmtp:' + n + ' ' + r.join(';') + '\r\n')),
                e
              )
            }),
            (d.parseRtcpFb = function (e) {
              e = e.substr(e.indexOf(' ') + 1).split(' ')
              return { type: e.shift(), parameter: e.join(' ') }
            }),
            (d.writeRtcpFb = function (e) {
              var t = '',
                r = e.payloadType
              return (
                void 0 !== e.preferredPayloadType &&
                  (r = e.preferredPayloadType),
                e.rtcpFeedback &&
                  e.rtcpFeedback.length &&
                  e.rtcpFeedback.forEach(function (e) {
                    t +=
                      'a=rtcp-fb:' +
                      r +
                      ' ' +
                      e.type +
                      (e.parameter && e.parameter.length
                        ? ' ' + e.parameter
                        : '') +
                      '\r\n'
                  }),
                t
              )
            }),
            (d.parseSsrcMedia = function (e) {
              var t = e.indexOf(' '),
                r = { ssrc: parseInt(e.substr(7, t - 7), 10) },
                n = e.indexOf(':', t)
              return (
                -1 < n
                  ? ((r.attribute = e.substr(t + 1, n - t - 1)),
                    (r.value = e.substr(n + 1)))
                  : (r.attribute = e.substr(t + 1)),
                r
              )
            }),
            (d.parseSsrcGroup = function (e) {
              e = e.substr(13).split(' ')
              return {
                semantics: e.shift(),
                ssrcs: e.map(function (e) {
                  return parseInt(e, 10)
                })
              }
            }),
            (d.getMid = function (e) {
              e = d.matchPrefix(e, 'a=mid:')[0]
              if (e) return e.substr(6)
            }),
            (d.parseFingerprint = function (e) {
              e = e.substr(14).split(' ')
              return { algorithm: e[0].toLowerCase(), value: e[1] }
            }),
            (d.getDtlsParameters = function (e, t) {
              return {
                role: 'auto',
                fingerprints: d
                  .matchPrefix(e + t, 'a=fingerprint:')
                  .map(d.parseFingerprint)
              }
            }),
            (d.writeDtlsParameters = function (e, t) {
              var r = 'a=setup:' + t + '\r\n'
              return (
                e.fingerprints.forEach(function (e) {
                  r += 'a=fingerprint:' + e.algorithm + ' ' + e.value + '\r\n'
                }),
                r
              )
            }),
            (d.getIceParameters = function (e, t) {
              e = d.splitLines(e)
              return {
                usernameFragment: (e = e.concat(d.splitLines(t)))
                  .filter(function (e) {
                    return 0 === e.indexOf('a=ice-ufrag:')
                  })[0]
                  .substr(12),
                password: e
                  .filter(function (e) {
                    return 0 === e.indexOf('a=ice-pwd:')
                  })[0]
                  .substr(10)
              }
            }),
            (d.writeIceParameters = function (e) {
              return (
                'a=ice-ufrag:' +
                e.usernameFragment +
                '\r\na=ice-pwd:' +
                e.password +
                '\r\n'
              )
            }),
            (d.parseRtpParameters = function (e) {
              for (
                var t = {
                    codecs: [],
                    headerExtensions: [],
                    fecMechanisms: [],
                    rtcp: []
                  },
                  r = d.splitLines(e)[0].split(' '),
                  n = 3;
                n < r.length;
                n++
              ) {
                var i = r[n],
                  o = d.matchPrefix(e, 'a=rtpmap:' + i + ' ')[0]
                if (o) {
                  var a = d.parseRtpMap(o),
                    o = d.matchPrefix(e, 'a=fmtp:' + i + ' ')
                  switch (
                    ((a.parameters = o.length ? d.parseFmtp(o[0]) : {}),
                    (a.rtcpFeedback = d
                      .matchPrefix(e, 'a=rtcp-fb:' + i + ' ')
                      .map(d.parseRtcpFb)),
                    t.codecs.push(a),
                    a.name.toUpperCase())
                  ) {
                    case 'RED':
                    case 'ULPFEC':
                      t.fecMechanisms.push(a.name.toUpperCase())
                  }
                }
              }
              return (
                d.matchPrefix(e, 'a=extmap:').forEach(function (e) {
                  t.headerExtensions.push(d.parseExtmap(e))
                }),
                t
              )
            }),
            (d.writeRtpDescription = function (e, t) {
              var r = ''
              ;(r += 'm=' + e + ' '),
                (r += 0 < t.codecs.length ? '9' : '0'),
                (r += ' UDP/TLS/RTP/SAVPF '),
                (r +=
                  t.codecs
                    .map(function (e) {
                      return void 0 !== e.preferredPayloadType
                        ? e.preferredPayloadType
                        : e.payloadType
                    })
                    .join(' ') + '\r\n'),
                (r += 'c=IN IP4 0.0.0.0\r\n'),
                (r += 'a=rtcp:9 IN IP4 0.0.0.0\r\n'),
                t.codecs.forEach(function (e) {
                  ;(r += d.writeRtpMap(e)),
                    (r += d.writeFmtp(e)),
                    (r += d.writeRtcpFb(e))
                })
              var n = 0
              return (
                t.codecs.forEach(function (e) {
                  e.maxptime > n && (n = e.maxptime)
                }),
                0 < n && (r += 'a=maxptime:' + n + '\r\n'),
                (r += 'a=rtcp-mux\r\n'),
                t.headerExtensions &&
                  t.headerExtensions.forEach(function (e) {
                    r += d.writeExtmap(e)
                  }),
                r
              )
            }),
            (d.parseRtpEncodingParameters = function (e) {
              var t,
                r = [],
                n = d.parseRtpParameters(e),
                i = -1 !== n.fecMechanisms.indexOf('RED'),
                o = -1 !== n.fecMechanisms.indexOf('ULPFEC'),
                a = d
                  .matchPrefix(e, 'a=ssrc:')
                  .map(function (e) {
                    return d.parseSsrcMedia(e)
                  })
                  .filter(function (e) {
                    return 'cname' === e.attribute
                  }),
                s = 0 < a.length && a[0].ssrc,
                a = d.matchPrefix(e, 'a=ssrc-group:FID').map(function (e) {
                  return e
                    .substr(17)
                    .split(' ')
                    .map(function (e) {
                      return parseInt(e, 10)
                    })
                })
              0 < a.length && 1 < a[0].length && a[0][0] === s && (t = a[0][1]),
                n.codecs.forEach(function (e) {
                  'RTX' === e.name.toUpperCase() &&
                    e.parameters.apt &&
                    ((e = {
                      ssrc: s,
                      codecPayloadType: parseInt(e.parameters.apt, 10)
                    }),
                    s && t && (e.rtx = { ssrc: t }),
                    r.push(e),
                    i &&
                      (((e = JSON.parse(JSON.stringify(e))).fec = {
                        ssrc: s,
                        mechanism: o ? 'red+ulpfec' : 'red'
                      }),
                      r.push(e)))
                }),
                0 === r.length && s && r.push({ ssrc: s })
              var c = d.matchPrefix(e, 'b=')
              return (
                c.length &&
                  ((c =
                    0 === c[0].indexOf('b=TIAS:')
                      ? parseInt(c[0].substr(7), 10)
                      : 0 === c[0].indexOf('b=AS:')
                      ? 1e3 * parseInt(c[0].substr(5), 10) * 0.95 - 16e3
                      : void 0),
                  r.forEach(function (e) {
                    e.maxBitrate = c
                  })),
                r
              )
            }),
            (d.parseRtcpParameters = function (e) {
              var t = {},
                r = d
                  .matchPrefix(e, 'a=ssrc:')
                  .map(function (e) {
                    return d.parseSsrcMedia(e)
                  })
                  .filter(function (e) {
                    return 'cname' === e.attribute
                  })[0]
              r && ((t.cname = r.value), (t.ssrc = r.ssrc))
              r = d.matchPrefix(e, 'a=rtcp-rsize')
              ;(t.reducedSize = 0 < r.length), (t.compound = 0 === r.length)
              e = d.matchPrefix(e, 'a=rtcp-mux')
              return (t.mux = 0 < e.length), t
            }),
            (d.parseMsid = function (e) {
              var t,
                r = d.matchPrefix(e, 'a=msid:')
              if (1 === r.length)
                return {
                  stream: (t = r[0].substr(7).split(' '))[0],
                  track: t[1]
                }
              e = d
                .matchPrefix(e, 'a=ssrc:')
                .map(function (e) {
                  return d.parseSsrcMedia(e)
                })
                .filter(function (e) {
                  return 'msid' === e.attribute
                })
              return 0 < e.length
                ? { stream: (t = e[0].value.split(' '))[0], track: t[1] }
                : void 0
            }),
            (d.parseSctpDescription = function (e) {
              var t,
                r = d.parseMLine(e),
                n = d.matchPrefix(e, 'a=max-message-size:')
              0 < n.length && (t = parseInt(n[0].substr(19), 10)),
                isNaN(t) && (t = 65536)
              n = d.matchPrefix(e, 'a=sctp-port:')
              if (0 < n.length)
                return {
                  port: parseInt(n[0].substr(12), 10),
                  protocol: r.fmt,
                  maxMessageSize: t
                }
              if (0 < d.matchPrefix(e, 'a=sctpmap:').length) {
                e = d.matchPrefix(e, 'a=sctpmap:')[0].substr(10).split(' ')
                return {
                  port: parseInt(e[0], 10),
                  protocol: e[1],
                  maxMessageSize: t
                }
              }
            }),
            (d.writeSctpDescription = function (e, t) {
              var r = [],
                r =
                  'DTLS/SCTP' !== e.protocol
                    ? [
                        'm=' +
                          e.kind +
                          ' 9 ' +
                          e.protocol +
                          ' ' +
                          t.protocol +
                          '\r\n',
                        'c=IN IP4 0.0.0.0\r\n',
                        'a=sctp-port:' + t.port + '\r\n'
                      ]
                    : [
                        'm=' +
                          e.kind +
                          ' 9 ' +
                          e.protocol +
                          ' ' +
                          t.port +
                          '\r\n',
                        'c=IN IP4 0.0.0.0\r\n',
                        'a=sctpmap:' + t.port + ' ' + t.protocol + ' 65535\r\n'
                      ]
              return (
                void 0 !== t.maxMessageSize &&
                  r.push('a=max-message-size:' + t.maxMessageSize + '\r\n'),
                r.join('')
              )
            }),
            (d.generateSessionId = function () {
              return Math.random().toString().substr(2, 21)
            }),
            (d.writeSessionBoilerplate = function (e, t, r) {
              t = void 0 !== t ? t : 2
              return (
                'v=0\r\no=' +
                (r || 'thisisadapterortc') +
                ' ' +
                (e || d.generateSessionId()) +
                ' ' +
                t +
                ' IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n'
              )
            }),
            (d.writeMediaSection = function (e, t, r, n) {
              t = d.writeRtpDescription(e.kind, t)
              return (
                (t += d.writeIceParameters(e.iceGatherer.getLocalParameters())),
                (t += d.writeDtlsParameters(
                  e.dtlsTransport.getLocalParameters(),
                  'offer' === r ? 'actpass' : 'active'
                )),
                (t += 'a=mid:' + e.mid + '\r\n'),
                e.direction
                  ? (t += 'a=' + e.direction + '\r\n')
                  : e.rtpSender && e.rtpReceiver
                  ? (t += 'a=sendrecv\r\n')
                  : e.rtpSender
                  ? (t += 'a=sendonly\r\n')
                  : e.rtpReceiver
                  ? (t += 'a=recvonly\r\n')
                  : (t += 'a=inactive\r\n'),
                e.rtpSender &&
                  ((t +=
                    'a=' +
                    (n = 'msid:' + n.id + ' ' + e.rtpSender.track.id + '\r\n')),
                  (t += 'a=ssrc:' + e.sendEncodingParameters[0].ssrc + ' ' + n),
                  e.sendEncodingParameters[0].rtx &&
                    ((t +=
                      'a=ssrc:' +
                      e.sendEncodingParameters[0].rtx.ssrc +
                      ' ' +
                      n),
                    (t +=
                      'a=ssrc-group:FID ' +
                      e.sendEncodingParameters[0].ssrc +
                      ' ' +
                      e.sendEncodingParameters[0].rtx.ssrc +
                      '\r\n'))),
                (t +=
                  'a=ssrc:' +
                  e.sendEncodingParameters[0].ssrc +
                  ' cname:' +
                  d.localCName +
                  '\r\n'),
                e.rtpSender &&
                  e.sendEncodingParameters[0].rtx &&
                  (t +=
                    'a=ssrc:' +
                    e.sendEncodingParameters[0].rtx.ssrc +
                    ' cname:' +
                    d.localCName +
                    '\r\n'),
                t
              )
            }),
            (d.getDirection = function (e, t) {
              for (var r = d.splitLines(e), n = 0; n < r.length; n++)
                switch (r[n]) {
                  case 'a=sendrecv':
                  case 'a=sendonly':
                  case 'a=recvonly':
                  case 'a=inactive':
                    return r[n].substr(2)
                }
              return t ? d.getDirection(t) : 'sendrecv'
            }),
            (d.getKind = function (e) {
              return d.splitLines(e)[0].split(' ')[0].substr(2)
            }),
            (d.isRejected = function (e) {
              return '0' === e.split(' ', 2)[1]
            }),
            (d.parseMLine = function (e) {
              e = d.splitLines(e)[0].substr(2).split(' ')
              return {
                kind: e[0],
                port: parseInt(e[1], 10),
                protocol: e[2],
                fmt: e.slice(3).join(' ')
              }
            }),
            (d.parseOLine = function (e) {
              e = d.matchPrefix(e, 'o=')[0].substr(2).split(' ')
              return {
                username: e[0],
                sessionId: e[1],
                sessionVersion: parseInt(e[2], 10),
                netType: e[3],
                addressType: e[4],
                address: e[5]
              }
            }),
            (d.isValidSDP = function (e) {
              if ('string' != typeof e || 0 === e.length) return !1
              for (var t = d.splitLines(e), r = 0; r < t.length; r++)
                if (t[r].length < 2 || '=' !== t[r].charAt(1)) return !1
              return !0
            }),
            'object' == typeof t && (t.exports = d)
        },
        {}
      ]
    },
    {},
    [1]
  )(1)
})
!(function (t, e) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = e())
    : 'function' == typeof define && define.amd
    ? define([], e)
    : 'object' == typeof exports
    ? (exports.io = e())
    : (t.io = e())
})(this, function () {
  return (
    (o = {}),
    (n.m = r =
      [
        function (t, e, n) {
          function r(t, e) {
            'object' == typeof t && ((e = t), (t = void 0)), (e = e || {})
            var n = i(t),
              r = n.source,
              o = n.id,
              t = n.path,
              t = c[o] && t in c[o].nsps,
              o =
                e.forceNew ||
                e['force new connection'] ||
                !1 === e.multiplex ||
                t
                  ? (a('ignoring socket cache for %s', r), s(r, e))
                  : (c[o] || (a('new io instance for %s', r), (c[o] = s(r, e))),
                    c[o])
            return (
              n.query && !e.query && (e.query = n.query), o.socket(n.path, e)
            )
          }
          var i = n(1),
            o = n(7),
            s = n(15),
            a = n(3)('socket.io-client')
          t.exports = e = r
          var c = (e.managers = {})
          ;(e.protocol = o.protocol),
            (e.connect = r),
            (e.Manager = n(15)),
            (e.Socket = n(39))
        },
        function (t, e, n) {
          var r = n(2),
            o = n(3)('socket.io-client:url')
          t.exports = function (t, e) {
            var n = t
            return (
              (e = e || ('undefined' != typeof location && location)),
              null == t && (t = e.protocol + '//' + e.host),
              'string' == typeof t &&
                ('/' === t.charAt(0) &&
                  (t = '/' === t.charAt(1) ? e.protocol + t : e.host + t),
                /^(https?|wss?):\/\//.test(t) ||
                  (o('protocol-less url %s', t),
                  (t = void 0 !== e ? e.protocol + '//' + t : 'https://' + t)),
                o('parse %s', t),
                (n = r(t))),
              n.port ||
                (/^(http|ws)$/.test(n.protocol)
                  ? (n.port = '80')
                  : /^(http|ws)s$/.test(n.protocol) && (n.port = '443')),
              (n.path = n.path || '/'),
              (t = -1 !== n.host.indexOf(':') ? '[' + n.host + ']' : n.host),
              (n.id = n.protocol + '://' + t + ':' + n.port),
              (n.href =
                n.protocol +
                '://' +
                t +
                (e && e.port === n.port ? '' : ':' + n.port)),
              n
            )
          }
        },
        function (t, e) {
          var a =
              /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
            c = [
              'source',
              'protocol',
              'authority',
              'userInfo',
              'user',
              'password',
              'host',
              'port',
              'relative',
              'path',
              'directory',
              'file',
              'query',
              'anchor'
            ]
          t.exports = function (t) {
            var e = t,
              n = t.indexOf('['),
              r = t.indexOf(']')
            ;-1 != n &&
              -1 != r &&
              (t =
                t.substring(0, n) +
                t.substring(n, r).replace(/:/g, ';') +
                t.substring(r, t.length))
            for (var o = a.exec(t || ''), i = {}, s = 14; s--; )
              i[c[s]] = o[s] || ''
            return (
              -1 != n &&
                -1 != r &&
                ((i.source = e),
                (i.host = i.host
                  .substring(1, i.host.length - 1)
                  .replace(/;/g, ':')),
                (i.authority = i.authority
                  .replace('[', '')
                  .replace(']', '')
                  .replace(/;/g, ':')),
                (i.ipv6uri = !0)),
              i
            )
          }
        },
        function (o, r, t) {
          ;(function (e) {
            'use strict'
            var n =
              'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
                ? function (t) {
                    return typeof t
                  }
                : function (t) {
                    return t &&
                      'function' == typeof Symbol &&
                      t.constructor === Symbol &&
                      t !== Symbol.prototype
                      ? 'symbol'
                      : typeof t
                  }
            ;(r.log = function () {
              var t
              return (
                'object' ===
                  ('undefined' == typeof console ? 'undefined' : n(console)) &&
                console.log &&
                (t = console).log.apply(t, arguments)
              )
            }),
              (r.formatArgs = function (t) {
                var e, n, r
                ;(t[0] =
                  (this.useColors ? '%c' : '') +
                  this.namespace +
                  (this.useColors ? ' %c' : ' ') +
                  t[0] +
                  (this.useColors ? '%c ' : ' ') +
                  '+' +
                  o.exports.humanize(this.diff)),
                  this.useColors &&
                    ((e = 'color: ' + this.color),
                    t.splice(1, 0, e, 'color: inherit'),
                    t[(r = n = 0)].replace(/%[a-zA-Z%]/g, function (t) {
                      '%%' !== t && (n++, '%c' === t && (r = n))
                    }),
                    t.splice(r, 0, e))
              }),
              (r.save = function (t) {
                try {
                  t
                    ? r.storage.setItem('debug', t)
                    : r.storage.removeItem('debug')
                } catch (t) {}
              }),
              (r.load = function () {
                var t = void 0
                try {
                  t = r.storage.getItem('debug')
                } catch (t) {}
                return !t && void 0 !== e && 'env' in e && (t = e.env.DEBUG), t
              }),
              (r.useColors = function () {
                return (
                  !(
                    'undefined' == typeof window ||
                    !window.process ||
                    ('renderer' !== window.process.type &&
                      !window.process.__nwjs)
                  ) ||
                  (('undefined' == typeof navigator ||
                    !navigator.userAgent ||
                    !navigator.userAgent
                      .toLowerCase()
                      .match(/(edge|trident)\/(\d+)/)) &&
                    (('undefined' != typeof document &&
                      document.documentElement &&
                      document.documentElement.style &&
                      document.documentElement.style.WebkitAppearance) ||
                      ('undefined' != typeof window &&
                        window.console &&
                        (window.console.firebug ||
                          (window.console.exception &&
                            window.console.table))) ||
                      ('undefined' != typeof navigator &&
                        navigator.userAgent &&
                        navigator.userAgent
                          .toLowerCase()
                          .match(/firefox\/(\d+)/) &&
                        31 <= parseInt(RegExp.$1, 10)) ||
                      ('undefined' != typeof navigator &&
                        navigator.userAgent &&
                        navigator.userAgent
                          .toLowerCase()
                          .match(/applewebkit\/(\d+)/))))
                )
              }),
              (r.storage = (function () {
                try {
                  return localStorage
                } catch (t) {}
              })()),
              (r.colors = [
                '#0000CC',
                '#0000FF',
                '#0033CC',
                '#0033FF',
                '#0066CC',
                '#0066FF',
                '#0099CC',
                '#0099FF',
                '#00CC00',
                '#00CC33',
                '#00CC66',
                '#00CC99',
                '#00CCCC',
                '#00CCFF',
                '#3300CC',
                '#3300FF',
                '#3333CC',
                '#3333FF',
                '#3366CC',
                '#3366FF',
                '#3399CC',
                '#3399FF',
                '#33CC00',
                '#33CC33',
                '#33CC66',
                '#33CC99',
                '#33CCCC',
                '#33CCFF',
                '#6600CC',
                '#6600FF',
                '#6633CC',
                '#6633FF',
                '#66CC00',
                '#66CC33',
                '#9900CC',
                '#9900FF',
                '#9933CC',
                '#9933FF',
                '#99CC00',
                '#99CC33',
                '#CC0000',
                '#CC0033',
                '#CC0066',
                '#CC0099',
                '#CC00CC',
                '#CC00FF',
                '#CC3300',
                '#CC3333',
                '#CC3366',
                '#CC3399',
                '#CC33CC',
                '#CC33FF',
                '#CC6600',
                '#CC6633',
                '#CC9900',
                '#CC9933',
                '#CCCC00',
                '#CCCC33',
                '#FF0000',
                '#FF0033',
                '#FF0066',
                '#FF0099',
                '#FF00CC',
                '#FF00FF',
                '#FF3300',
                '#FF3333',
                '#FF3366',
                '#FF3399',
                '#FF33CC',
                '#FF33FF',
                '#FF6600',
                '#FF6633',
                '#FF9900',
                '#FF9933',
                '#FFCC00',
                '#FFCC33'
              ]),
              (o.exports = t(5)(r)),
              (o.exports.formatters.j = function (t) {
                try {
                  return JSON.stringify(t)
                } catch (t) {
                  return '[UnexpectedJSONParseError]: ' + t.message
                }
              })
          }.call(r, t(4)))
        },
        function (t, e) {
          function n() {
            throw new Error('setTimeout has not been defined')
          }
          function r() {
            throw new Error('clearTimeout has not been defined')
          }
          function o(e) {
            if (p === setTimeout) return setTimeout(e, 0)
            if ((p === n || !p) && setTimeout)
              return (p = setTimeout), setTimeout(e, 0)
            try {
              return p(e, 0)
            } catch (t) {
              try {
                return p.call(null, e, 0)
              } catch (t) {
                return p.call(this, e, 0)
              }
            }
          }
          function i() {
            l &&
              h &&
              ((l = !1),
              h.length ? (f = h.concat(f)) : (d = -1),
              f.length && s())
          }
          function s() {
            if (!l) {
              var t = o(i)
              l = !0
              for (var e = f.length; e; ) {
                for (h = f, f = []; ++d < e; ) h && h[d].run()
                ;(d = -1), (e = f.length)
              }
              ;(h = null),
                (l = !1),
                (function (e) {
                  if (u === clearTimeout) return clearTimeout(e)
                  if ((u === r || !u) && clearTimeout)
                    return (u = clearTimeout), clearTimeout(e)
                  try {
                    u(e)
                  } catch (t) {
                    try {
                      return u.call(null, e)
                    } catch (t) {
                      return u.call(this, e)
                    }
                  }
                })(t)
            }
          }
          function a(t, e) {
            ;(this.fun = t), (this.array = e)
          }
          function c() {}
          var p,
            u,
            t = (t.exports = {})
          !(function () {
            try {
              p = 'function' == typeof setTimeout ? setTimeout : n
            } catch (t) {
              p = n
            }
            try {
              u = 'function' == typeof clearTimeout ? clearTimeout : r
            } catch (t) {
              u = r
            }
          })()
          var h,
            f = [],
            l = !1,
            d = -1
          ;(t.nextTick = function (t) {
            var e = new Array(arguments.length - 1)
            if (1 < arguments.length)
              for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n]
            f.push(new a(t, e)), 1 !== f.length || l || o(s)
          }),
            (a.prototype.run = function () {
              this.fun.apply(null, this.array)
            }),
            (t.title = 'browser'),
            (t.browser = !0),
            (t.env = {}),
            (t.argv = []),
            (t.version = ''),
            (t.versions = {}),
            (t.on = c),
            (t.addListener = c),
            (t.once = c),
            (t.off = c),
            (t.removeListener = c),
            (t.removeAllListeners = c),
            (t.emit = c),
            (t.prependListener = c),
            (t.prependOnceListener = c),
            (t.listeners = function (t) {
              return []
            }),
            (t.binding = function (t) {
              throw new Error('process.binding is not supported')
            }),
            (t.cwd = function () {
              return '/'
            }),
            (t.chdir = function (t) {
              throw new Error('process.chdir is not supported')
            }),
            (t.umask = function () {
              return 0
            })
        },
        function (t, e, s) {
          'use strict'
          function a(t) {
            if (Array.isArray(t)) {
              for (var e = 0, n = Array(t.length); e < t.length; e++)
                n[e] = t[e]
              return n
            }
            return Array.from(t)
          }
          t.exports = function (e) {
            function n(t) {
              for (var e = 0, n = 0; n < t.length; n++)
                (e = (e << 5) - e + t.charCodeAt(n)), (e |= 0)
              return p.colors[Math.abs(e) % p.colors.length]
            }
            function p(t) {
              function a() {
                for (
                  var r, t, e, o, n = arguments.length, i = Array(n), s = 0;
                  s < n;
                  s++
                )
                  i[s] = arguments[s]
                a.enabled &&
                  ((r = a),
                  (e = (t = Number(new Date())) - (c || t)),
                  (r.diff = e),
                  (r.prev = c),
                  (r.curr = t),
                  (c = t),
                  (i[0] = p.coerce(i[0])),
                  'string' != typeof i[0] && i.unshift('%O'),
                  (i[(o = 0)] = i[0].replace(/%([a-zA-Z%])/g, function (t, e) {
                    if ('%%' === t) return t
                    o++
                    var n = p.formatters[e]
                    return (
                      'function' == typeof n &&
                        ((e = i[o]), (t = n.call(r, e)), i.splice(o, 1), o--),
                      t
                    )
                  })),
                  p.formatArgs.call(r, i),
                  (r.log || p.log).apply(r, i))
              }
              var c = void 0
              return (
                (a.namespace = t),
                (a.enabled = p.enabled(t)),
                (a.useColors = p.useColors()),
                (a.color = n(t)),
                (a.destroy = r),
                (a.extend = o),
                'function' == typeof p.init && p.init(a),
                p.instances.push(a),
                a
              )
            }
            function r() {
              var t = p.instances.indexOf(this)
              return -1 !== t && (p.instances.splice(t, 1), !0)
            }
            function o(t, e) {
              t = p(this.namespace + (void 0 === e ? ':' : e) + t)
              return (t.log = this.log), t
            }
            function i(t) {
              return t
                .toString()
                .substring(2, t.toString().length - 2)
                .replace(/\.\*\?$/, '*')
            }
            return (
              (((p.debug = p).default = p).coerce = function (t) {
                return t instanceof Error ? t.stack || t.message : t
              }),
              (p.disable = function () {
                var t = []
                  .concat(
                    a(p.names.map(i)),
                    a(
                      p.skips.map(i).map(function (t) {
                        return '-' + t
                      })
                    )
                  )
                  .join(',')
                return p.enable(''), t
              }),
              (p.enable = function (t) {
                p.save(t), (p.names = []), (p.skips = [])
                for (
                  var e = void 0,
                    n = ('string' == typeof t ? t : '').split(/[\s,]+/),
                    r = n.length,
                    e = 0;
                  e < r;
                  e++
                )
                  n[e] &&
                    ('-' === (t = n[e].replace(/\*/g, '.*?'))[0]
                      ? p.skips.push(new RegExp('^' + t.substr(1) + '$'))
                      : p.names.push(new RegExp('^' + t + '$')))
                for (e = 0; e < p.instances.length; e++) {
                  var o = p.instances[e]
                  o.enabled = p.enabled(o.namespace)
                }
              }),
              (p.enabled = function (t) {
                if ('*' === t[t.length - 1]) return !0
                for (
                  var e = void 0, n = void 0, e = 0, n = p.skips.length;
                  e < n;
                  e++
                )
                  if (p.skips[e].test(t)) return !1
                for (e = 0, n = p.names.length; e < n; e++)
                  if (p.names[e].test(t)) return !0
                return !1
              }),
              (p.humanize = s(6)),
              Object.keys(e).forEach(function (t) {
                p[t] = e[t]
              }),
              (p.instances = []),
              (p.names = []),
              (p.skips = []),
              (p.formatters = {}),
              (p.selectColor = n),
              p.enable(p.load()),
              p
            )
          }
        },
        function (t, e) {
          function i(t, e, n, r) {
            e = 1.5 * n <= e
            return Math.round(t / n) + ' ' + r + (e ? 's' : '')
          }
          var s = 36e5,
            a = 864e5
          t.exports = function (t, e) {
            e = e || {}
            var n,
              r,
              o = typeof t
            if ('string' == o && 0 < t.length)
              return (function (t) {
                if (!(100 < (t = String(t)).length)) {
                  t =
                    /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
                      t
                    )
                  if (t) {
                    var e = parseFloat(t[1])
                    switch ((t[2] || 'ms').toLowerCase()) {
                      case 'years':
                      case 'year':
                      case 'yrs':
                      case 'yr':
                      case 'y':
                        return 315576e5 * e
                      case 'weeks':
                      case 'week':
                      case 'w':
                        return 6048e5 * e
                      case 'days':
                      case 'day':
                      case 'd':
                        return e * a
                      case 'hours':
                      case 'hour':
                      case 'hrs':
                      case 'hr':
                      case 'h':
                        return e * s
                      case 'minutes':
                      case 'minute':
                      case 'mins':
                      case 'min':
                      case 'm':
                        return 6e4 * e
                      case 'seconds':
                      case 'second':
                      case 'secs':
                      case 'sec':
                      case 's':
                        return 1e3 * e
                      case 'milliseconds':
                      case 'millisecond':
                      case 'msecs':
                      case 'msec':
                      case 'ms':
                        return e
                      default:
                        return
                    }
                  }
                }
              })(t)
            if ('number' == o && isFinite(t))
              return e.long
                ? ((n = t),
                  (r = Math.abs(n)),
                  a <= r
                    ? i(n, r, a, 'day')
                    : s <= r
                    ? i(n, r, s, 'hour')
                    : 6e4 <= r
                    ? i(n, r, 6e4, 'minute')
                    : 1e3 <= r
                    ? i(n, r, 1e3, 'second')
                    : n + ' ms')
                : ((r = t),
                  (n = Math.abs(r)),
                  a <= n
                    ? Math.round(r / a) + 'd'
                    : s <= n
                    ? Math.round(r / s) + 'h'
                    : 6e4 <= n
                    ? Math.round(r / 6e4) + 'm'
                    : 1e3 <= n
                    ? Math.round(r / 1e3) + 's'
                    : r + 'ms')
            throw new Error(
              'val is not a non-empty string or a valid number. val=' +
                JSON.stringify(t)
            )
          }
        },
        function (t, s, e) {
          function n() {}
          function r(t) {
            var e = '' + t.type
            if (
              ((s.BINARY_EVENT !== t.type && s.BINARY_ACK !== t.type) ||
                (e += t.attachments + '-'),
              t.nsp && '/' !== t.nsp && (e += t.nsp + ','),
              null != t.id && (e += t.id),
              null != t.data)
            ) {
              var n = (function (t) {
                try {
                  return JSON.stringify(t)
                } catch (t) {
                  return !1
                }
              })(t.data)
              if (!1 === n) return y
              e += n
            }
            return u('encoded %j as %s', t, e), e
          }
          function o(t, n) {
            f.removeBlobs(t, function (t) {
              var e = f.deconstructPacket(t),
                t = r(e.packet)
              ;(e = e.buffers).unshift(t), n(e)
            })
          }
          function i() {
            this.reconstructor = null
          }
          function a(t) {
            var e = 0,
              n = { type: Number(t.charAt(0)) }
            if (null == s.types[n.type])
              return p('unknown packet type ' + n.type)
            if (s.BINARY_EVENT === n.type || s.BINARY_ACK === n.type) {
              for (
                var r = '';
                '-' !== t.charAt(++e) && ((r += t.charAt(e)), e != t.length);

              );
              if (r != Number(r) || '-' !== t.charAt(e))
                throw new Error('Illegal attachments')
              n.attachments = Number(r)
            }
            if ('/' === t.charAt(e + 1))
              for (n.nsp = ''; ++e; ) {
                if (',' === (o = t.charAt(e))) break
                if (((n.nsp += o), e === t.length)) break
              }
            else n.nsp = '/'
            var o,
              i = t.charAt(e + 1)
            if ('' !== i && Number(i) == i) {
              for (n.id = ''; ++e; ) {
                if (null == (o = t.charAt(e)) || Number(o) != o) {
                  --e
                  break
                }
                if (((n.id += t.charAt(e)), e === t.length)) break
              }
              n.id = Number(n.id)
            }
            if (t.charAt(++e)) {
              i = (function (t) {
                try {
                  return JSON.parse(t)
                } catch (t) {
                  return !1
                }
              })(t.substr(e))
              if (!(!1 !== i && (n.type === s.ERROR || l(i))))
                return p('invalid payload')
              n.data = i
            }
            return u('decoded %s as %j', t, n), n
          }
          function c(t) {
            ;(this.reconPack = t), (this.buffers = [])
          }
          function p(t) {
            return { type: s.ERROR, data: 'parser error: ' + t }
          }
          var u = e(8)('socket.io-parser'),
            h = e(11),
            f = e(12),
            l = e(13),
            d = e(14)
          ;(s.protocol = 4),
            (s.types = [
              'CONNECT',
              'DISCONNECT',
              'EVENT',
              'ACK',
              'ERROR',
              'BINARY_EVENT',
              'BINARY_ACK'
            ]),
            (s.CONNECT = 0),
            (s.DISCONNECT = 1),
            (s.EVENT = 2),
            (s.ACK = 3),
            (s.ERROR = 4),
            (s.BINARY_EVENT = 5),
            (s.BINARY_ACK = 6),
            (s.Encoder = n),
            (s.Decoder = i)
          var y = s.ERROR + '"encode error"'
          ;(n.prototype.encode = function (t, e) {
            u('encoding packet %j', t),
              s.BINARY_EVENT === t.type || s.BINARY_ACK === t.type
                ? o(t, e)
                : e([r(t)])
          }),
            h(i.prototype),
            (i.prototype.add = function (t) {
              var e
              if ('string' == typeof t)
                (e = a(t)),
                  s.BINARY_EVENT === e.type || s.BINARY_ACK === e.type
                    ? ((this.reconstructor = new c(e)),
                      0 === this.reconstructor.reconPack.attachments &&
                        this.emit('decoded', e))
                    : this.emit('decoded', e)
              else {
                if (!d(t) && !t.base64) throw new Error('Unknown type: ' + t)
                if (!this.reconstructor)
                  throw new Error(
                    'got binary data when not reconstructing a packet'
                  )
                ;(e = this.reconstructor.takeBinaryData(t)) &&
                  ((this.reconstructor = null), this.emit('decoded', e))
              }
            }),
            (i.prototype.destroy = function () {
              this.reconstructor && this.reconstructor.finishedReconstruction()
            }),
            (c.prototype.takeBinaryData = function (t) {
              if (
                (this.buffers.push(t),
                this.buffers.length !== this.reconPack.attachments)
              )
                return null
              t = f.reconstructPacket(this.reconPack, this.buffers)
              return this.finishedReconstruction(), t
            }),
            (c.prototype.finishedReconstruction = function () {
              ;(this.reconPack = null), (this.buffers = [])
            })
        },
        function (r, o, i) {
          ;(function (e) {
            'use strict'
            function t() {
              var t
              try {
                t = o.storage.debug
              } catch (t) {}
              return !t && void 0 !== e && 'env' in e && (t = e.env.DEBUG), t
            }
            var n =
              'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
                ? function (t) {
                    return typeof t
                  }
                : function (t) {
                    return t &&
                      'function' == typeof Symbol &&
                      t.constructor === Symbol &&
                      t !== Symbol.prototype
                      ? 'symbol'
                      : typeof t
                  }
            ;((o = r.exports = i(9)).log = function () {
              return (
                'object' ===
                  ('undefined' == typeof console ? 'undefined' : n(console)) &&
                console.log &&
                Function.prototype.apply.call(console.log, console, arguments)
              )
            }),
              (o.formatArgs = function (t) {
                var e,
                  n,
                  r = this.useColors
                ;(t[0] =
                  (r ? '%c' : '') +
                  this.namespace +
                  (r ? ' %c' : ' ') +
                  t[0] +
                  (r ? '%c ' : ' ') +
                  '+' +
                  o.humanize(this.diff)),
                  r &&
                    ((r = 'color: ' + this.color),
                    t.splice(1, 0, r, 'color: inherit'),
                    t[(n = e = 0)].replace(/%[a-zA-Z%]/g, function (t) {
                      '%%' !== t && (e++, '%c' === t && (n = e))
                    }),
                    t.splice(n, 0, r))
              }),
              (o.save = function (t) {
                try {
                  null == t
                    ? o.storage.removeItem('debug')
                    : (o.storage.debug = t)
                } catch (t) {}
              }),
              (o.load = t),
              (o.useColors = function () {
                return (
                  !(
                    'undefined' == typeof window ||
                    !window.process ||
                    'renderer' !== window.process.type
                  ) ||
                  (('undefined' == typeof navigator ||
                    !navigator.userAgent ||
                    !navigator.userAgent
                      .toLowerCase()
                      .match(/(edge|trident)\/(\d+)/)) &&
                    (('undefined' != typeof document &&
                      document.documentElement &&
                      document.documentElement.style &&
                      document.documentElement.style.WebkitAppearance) ||
                      ('undefined' != typeof window &&
                        window.console &&
                        (window.console.firebug ||
                          (window.console.exception &&
                            window.console.table))) ||
                      ('undefined' != typeof navigator &&
                        navigator.userAgent &&
                        navigator.userAgent
                          .toLowerCase()
                          .match(/firefox\/(\d+)/) &&
                        31 <= parseInt(RegExp.$1, 10)) ||
                      ('undefined' != typeof navigator &&
                        navigator.userAgent &&
                        navigator.userAgent
                          .toLowerCase()
                          .match(/applewebkit\/(\d+)/))))
                )
              }),
              (o.storage =
                'undefined' != typeof chrome && void 0 !== chrome.storage
                  ? chrome.storage.local
                  : (function () {
                      try {
                        return window.localStorage
                      } catch (t) {}
                    })()),
              (o.colors = [
                '#0000CC',
                '#0000FF',
                '#0033CC',
                '#0033FF',
                '#0066CC',
                '#0066FF',
                '#0099CC',
                '#0099FF',
                '#00CC00',
                '#00CC33',
                '#00CC66',
                '#00CC99',
                '#00CCCC',
                '#00CCFF',
                '#3300CC',
                '#3300FF',
                '#3333CC',
                '#3333FF',
                '#3366CC',
                '#3366FF',
                '#3399CC',
                '#3399FF',
                '#33CC00',
                '#33CC33',
                '#33CC66',
                '#33CC99',
                '#33CCCC',
                '#33CCFF',
                '#6600CC',
                '#6600FF',
                '#6633CC',
                '#6633FF',
                '#66CC00',
                '#66CC33',
                '#9900CC',
                '#9900FF',
                '#9933CC',
                '#9933FF',
                '#99CC00',
                '#99CC33',
                '#CC0000',
                '#CC0033',
                '#CC0066',
                '#CC0099',
                '#CC00CC',
                '#CC00FF',
                '#CC3300',
                '#CC3333',
                '#CC3366',
                '#CC3399',
                '#CC33CC',
                '#CC33FF',
                '#CC6600',
                '#CC6633',
                '#CC9900',
                '#CC9933',
                '#CCCC00',
                '#CCCC33',
                '#FF0000',
                '#FF0033',
                '#FF0066',
                '#FF0099',
                '#FF00CC',
                '#FF00FF',
                '#FF3300',
                '#FF3333',
                '#FF3366',
                '#FF3399',
                '#FF33CC',
                '#FF33FF',
                '#FF6600',
                '#FF6633',
                '#FF9900',
                '#FF9933',
                '#FFCC00',
                '#FFCC33'
              ]),
              (o.formatters.j = function (t) {
                try {
                  return JSON.stringify(t)
                } catch (t) {
                  return '[UnexpectedJSONParseError]: ' + t.message
                }
              }),
              o.enable(t())
          }.call(o, i(4)))
        },
        function (t, c, e) {
          'use strict'
          function n(t) {
            function s() {
              if (s.enabled) {
                var r = s,
                  t = +new Date(),
                  e = t - (a || t)
                ;(r.diff = e), (r.prev = a), (r.curr = t), (a = t)
                for (
                  var o = new Array(arguments.length), n = 0;
                  n < o.length;
                  n++
                )
                  o[n] = arguments[n]
                ;(o[0] = c.coerce(o[0])),
                  'string' != typeof o[0] && o.unshift('%O')
                var i = 0
                ;(o[0] = o[0].replace(/%([a-zA-Z%])/g, function (t, e) {
                  if ('%%' === t) return t
                  i++
                  var n = c.formatters[e]
                  return (
                    'function' == typeof n &&
                      ((e = o[i]), (t = n.call(r, e)), o.splice(i, 1), i--),
                    t
                  )
                })),
                  c.formatArgs.call(r, o),
                  (s.log || c.log || console.log.bind(console)).apply(r, o)
              }
            }
            var a
            return (
              (s.namespace = t),
              (s.enabled = c.enabled(t)),
              (s.useColors = c.useColors()),
              (s.color = (function (t) {
                var e,
                  n = 0
                for (e in t) (n = (n << 5) - n + t.charCodeAt(e)), (n |= 0)
                return c.colors[Math.abs(n) % c.colors.length]
              })(t)),
              (s.destroy = r),
              'function' == typeof c.init && c.init(s),
              c.instances.push(s),
              s
            )
          }
          function r() {
            var t = c.instances.indexOf(this)
            return -1 !== t && (c.instances.splice(t, 1), !0)
          }
          ;((c = t.exports = n.debug = n.default = n).coerce = function (t) {
            return t instanceof Error ? t.stack || t.message : t
          }),
            (c.disable = function () {
              c.enable('')
            }),
            (c.enable = function (t) {
              c.save(t), (c.names = []), (c.skips = [])
              for (
                var e = ('string' == typeof t ? t : '').split(/[\s,]+/),
                  n = e.length,
                  r = 0;
                r < n;
                r++
              )
                e[r] &&
                  ('-' === (t = e[r].replace(/\*/g, '.*?'))[0]
                    ? c.skips.push(new RegExp('^' + t.substr(1) + '$'))
                    : c.names.push(new RegExp('^' + t + '$')))
              for (r = 0; r < c.instances.length; r++) {
                var o = c.instances[r]
                o.enabled = c.enabled(o.namespace)
              }
            }),
            (c.enabled = function (t) {
              if ('*' === t[t.length - 1]) return !0
              for (var e = 0, n = c.skips.length; e < n; e++)
                if (c.skips[e].test(t)) return !1
              for (e = 0, n = c.names.length; e < n; e++)
                if (c.names[e].test(t)) return !0
              return !1
            }),
            (c.humanize = e(10)),
            (c.instances = []),
            (c.names = []),
            (c.skips = []),
            (c.formatters = {})
        },
        function (t, e) {
          function o(t, e, n) {
            if (!(t < e))
              return t < 1.5 * e
                ? Math.floor(t / e) + ' ' + n
                : Math.ceil(t / e) + ' ' + n + 's'
          }
          var i = 36e5,
            s = 864e5
          t.exports = function (t, e) {
            e = e || {}
            var n,
              r = typeof t
            if ('string' == r && 0 < t.length)
              return (function (t) {
                if (!(100 < (t = String(t)).length)) {
                  t =
                    /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
                      t
                    )
                  if (t) {
                    var e = parseFloat(t[1])
                    switch ((t[2] || 'ms').toLowerCase()) {
                      case 'years':
                      case 'year':
                      case 'yrs':
                      case 'yr':
                      case 'y':
                        return 315576e5 * e
                      case 'days':
                      case 'day':
                      case 'd':
                        return e * s
                      case 'hours':
                      case 'hour':
                      case 'hrs':
                      case 'hr':
                      case 'h':
                        return e * i
                      case 'minutes':
                      case 'minute':
                      case 'mins':
                      case 'min':
                      case 'm':
                        return 6e4 * e
                      case 'seconds':
                      case 'second':
                      case 'secs':
                      case 'sec':
                      case 's':
                        return 1e3 * e
                      case 'milliseconds':
                      case 'millisecond':
                      case 'msecs':
                      case 'msec':
                      case 'ms':
                        return e
                      default:
                        return
                    }
                  }
                }
              })(t)
            if ('number' == r && !1 === isNaN(t))
              return e.long
                ? o((n = t), s, 'day') ||
                    o(n, i, 'hour') ||
                    o(n, 6e4, 'minute') ||
                    o(n, 1e3, 'second') ||
                    n + ' ms'
                : s <= (n = t)
                ? Math.round(n / s) + 'd'
                : i <= n
                ? Math.round(n / i) + 'h'
                : 6e4 <= n
                ? Math.round(n / 6e4) + 'm'
                : 1e3 <= n
                ? Math.round(n / 1e3) + 's'
                : n + 'ms'
            throw new Error(
              'val is not a non-empty string or a valid number. val=' +
                JSON.stringify(t)
            )
          }
        },
        function (t, e, n) {
          function r(t) {
            if (t)
              return (function (t) {
                for (var e in r.prototype) t[e] = r.prototype[e]
                return t
              })(t)
          }
          ;((t.exports = r).prototype.on = r.prototype.addEventListener =
            function (t, e) {
              return (
                (this._callbacks = this._callbacks || {}),
                (this._callbacks['$' + t] =
                  this._callbacks['$' + t] || []).push(e),
                this
              )
            }),
            (r.prototype.once = function (t, e) {
              function n() {
                this.off(t, n), e.apply(this, arguments)
              }
              return (n.fn = e), this.on(t, n), this
            }),
            (r.prototype.off =
              r.prototype.removeListener =
              r.prototype.removeAllListeners =
              r.prototype.removeEventListener =
                function (t, e) {
                  if (
                    ((this._callbacks = this._callbacks || {}),
                    0 == arguments.length)
                  )
                    return (this._callbacks = {}), this
                  var n = this._callbacks['$' + t]
                  if (!n) return this
                  if (1 == arguments.length)
                    return delete this._callbacks['$' + t], this
                  for (var r, o = 0; o < n.length; o++)
                    if ((r = n[o]) === e || r.fn === e) {
                      n.splice(o, 1)
                      break
                    }
                  return this
                }),
            (r.prototype.emit = function (t) {
              this._callbacks = this._callbacks || {}
              var e = [].slice.call(arguments, 1),
                n = this._callbacks['$' + t]
              if (n)
                for (var r = 0, o = (n = n.slice(0)).length; r < o; ++r)
                  n[r].apply(this, e)
              return this
            }),
            (r.prototype.listeners = function (t) {
              return (
                (this._callbacks = this._callbacks || {}),
                this._callbacks['$' + t] || []
              )
            }),
            (r.prototype.hasListeners = function (t) {
              return !!this.listeners(t).length
            })
        },
        function (t, e, n) {
          var u = n(13),
            h = n(14),
            n = Object.prototype.toString,
            f =
              'function' == typeof Blob ||
              ('undefined' != typeof Blob &&
                '[object BlobConstructor]' === n.call(Blob)),
            l =
              'function' == typeof File ||
              ('undefined' != typeof File &&
                '[object FileConstructor]' === n.call(File))
          ;(e.deconstructPacket = function (t) {
            var e = [],
              n = t.data,
              t = t
            return (
              (t.data = (function t(e, n) {
                if (!e) return e
                if (h(e)) {
                  var r = { _placeholder: !0, num: n.length }
                  return n.push(e), r
                }
                if (u(e)) {
                  for (var o = new Array(e.length), i = 0; i < e.length; i++)
                    o[i] = t(e[i], n)
                  return o
                }
                if ('object' != typeof e || e instanceof Date) return e
                var s,
                  o = {}
                for (s in e) o[s] = t(e[s], n)
                return o
              })(n, e)),
              (t.attachments = e.length),
              { packet: t, buffers: e }
            )
          }),
            (e.reconstructPacket = function (t, e) {
              return (
                (t.data = (function t(e, n) {
                  if (!e) return e
                  if (e && e._placeholder) return n[e.num]
                  if (u(e)) for (var r = 0; r < e.length; r++) e[r] = t(e[r], n)
                  else if ('object' == typeof e)
                    for (var o in e) e[o] = t(e[o], n)
                  return e
                })(t.data, e)),
                (t.attachments = void 0),
                t
              )
            }),
            (e.removeBlobs = function (t, a) {
              var c = 0,
                p = t
              ;(function t(e, n, r) {
                if (!e) return e
                if ((f && e instanceof Blob) || (l && e instanceof File)) {
                  c++
                  var o = new FileReader()
                  ;(o.onload = function () {
                    r ? (r[n] = this.result) : (p = this.result), --c || a(p)
                  }),
                    o.readAsArrayBuffer(e)
                } else if (u(e))
                  for (var i = 0; i < e.length; i++) t(e[i], i, e)
                else if ('object' == typeof e && !h(e))
                  for (var s in e) t(e[s], s, e)
              })(p),
                c || a(p)
            })
        },
        function (t, e) {
          var n = {}.toString
          t.exports =
            Array.isArray ||
            function (t) {
              return '[object Array]' == n.call(t)
            }
        },
        function (t, e) {
          t.exports = function (t) {
            return (
              (n && Buffer.isBuffer(t)) ||
              (r && (t instanceof ArrayBuffer || o(t)))
            )
          }
          var n =
              'function' == typeof Buffer &&
              'function' == typeof Buffer.isBuffer,
            r = 'function' == typeof ArrayBuffer,
            o = function (t) {
              return 'function' == typeof ArrayBuffer.isView
                ? ArrayBuffer.isView(t)
                : t.buffer instanceof ArrayBuffer
            }
        },
        function (t, e, n) {
          function r(t, e) {
            if (!(this instanceof r)) return new r(t, e)
            t && 'object' == typeof t && ((e = t), (t = void 0)),
              ((e = e || {}).path = e.path || '/socket.io'),
              (this.nsps = {}),
              (this.subs = []),
              (this.opts = e),
              this.reconnection(!1 !== e.reconnection),
              this.reconnectionAttempts(e.reconnectionAttempts || 1 / 0),
              this.reconnectionDelay(e.reconnectionDelay || 1e3),
              this.reconnectionDelayMax(e.reconnectionDelayMax || 5e3),
              this.randomizationFactor(e.randomizationFactor || 0.5),
              (this.backoff = new f({
                min: this.reconnectionDelay(),
                max: this.reconnectionDelayMax(),
                jitter: this.randomizationFactor()
              })),
              this.timeout(null == e.timeout ? 2e4 : e.timeout),
              (this.readyState = 'closed'),
              (this.uri = t),
              (this.connecting = []),
              (this.lastPing = null),
              (this.encoding = !1),
              (this.packetBuffer = [])
            t = e.parser || s
            ;(this.encoder = new t.Encoder()),
              (this.decoder = new t.Decoder()),
              (this.autoConnect = !1 !== e.autoConnect),
              this.autoConnect && this.open()
          }
          var c = n(16),
            i = n(39),
            o = n(11),
            s = n(7),
            p = n(41),
            a = n(42),
            u = n(3)('socket.io-client:manager'),
            h = n(38),
            f = n(43),
            l = Object.prototype.hasOwnProperty
          ;((t.exports = r).prototype.emitAll = function () {
            for (var t in (this.emit.apply(this, arguments), this.nsps))
              l.call(this.nsps, t) &&
                this.nsps[t].emit.apply(this.nsps[t], arguments)
          }),
            (r.prototype.updateSocketIds = function () {
              for (var t in this.nsps)
                l.call(this.nsps, t) && (this.nsps[t].id = this.generateId(t))
            }),
            (r.prototype.generateId = function (t) {
              return ('/' === t ? '' : t + '#') + this.engine.id
            }),
            o(r.prototype),
            (r.prototype.reconnection = function (t) {
              return arguments.length
                ? ((this._reconnection = !!t), this)
                : this._reconnection
            }),
            (r.prototype.reconnectionAttempts = function (t) {
              return arguments.length
                ? ((this._reconnectionAttempts = t), this)
                : this._reconnectionAttempts
            }),
            (r.prototype.reconnectionDelay = function (t) {
              return arguments.length
                ? ((this._reconnectionDelay = t),
                  this.backoff && this.backoff.setMin(t),
                  this)
                : this._reconnectionDelay
            }),
            (r.prototype.randomizationFactor = function (t) {
              return arguments.length
                ? ((this._randomizationFactor = t),
                  this.backoff && this.backoff.setJitter(t),
                  this)
                : this._randomizationFactor
            }),
            (r.prototype.reconnectionDelayMax = function (t) {
              return arguments.length
                ? ((this._reconnectionDelayMax = t),
                  this.backoff && this.backoff.setMax(t),
                  this)
                : this._reconnectionDelayMax
            }),
            (r.prototype.timeout = function (t) {
              return arguments.length
                ? ((this._timeout = t), this)
                : this._timeout
            }),
            (r.prototype.maybeReconnectOnOpen = function () {
              !this.reconnecting &&
                this._reconnection &&
                0 === this.backoff.attempts &&
                this.reconnect()
            }),
            (r.prototype.open = r.prototype.connect =
              function (n, t) {
                if (
                  (u('readyState %s', this.readyState),
                  ~this.readyState.indexOf('open'))
                )
                  return this
                u('opening %s', this.uri),
                  (this.engine = c(this.uri, this.opts))
                var e = this.engine,
                  r = this
                ;(this.readyState = 'opening'), (this.skipReconnect = !1)
                var o,
                  i,
                  s = p(e, 'open', function () {
                    r.onopen(), n && n()
                  }),
                  a = p(e, 'error', function (t) {
                    var e
                    u('connect_error'),
                      r.cleanup(),
                      (r.readyState = 'closed'),
                      r.emitAll('connect_error', t),
                      n
                        ? (((e = new Error('Connection error')).data = t), n(e))
                        : r.maybeReconnectOnOpen()
                  })
                return (
                  !1 !== this._timeout &&
                    ((o = this._timeout),
                    u('connect attempt will timeout after %d', o),
                    (i = setTimeout(function () {
                      u('connect attempt timed out after %d', o),
                        s.destroy(),
                        e.close(),
                        e.emit('error', 'timeout'),
                        r.emitAll('connect_timeout', o)
                    }, o)),
                    this.subs.push({
                      destroy: function () {
                        clearTimeout(i)
                      }
                    })),
                  this.subs.push(s),
                  this.subs.push(a),
                  this
                )
              }),
            (r.prototype.onopen = function () {
              u('open'),
                this.cleanup(),
                (this.readyState = 'open'),
                this.emit('open')
              var t = this.engine
              this.subs.push(p(t, 'data', a(this, 'ondata'))),
                this.subs.push(p(t, 'ping', a(this, 'onping'))),
                this.subs.push(p(t, 'pong', a(this, 'onpong'))),
                this.subs.push(p(t, 'error', a(this, 'onerror'))),
                this.subs.push(p(t, 'close', a(this, 'onclose'))),
                this.subs.push(p(this.decoder, 'decoded', a(this, 'ondecoded')))
            }),
            (r.prototype.onping = function () {
              ;(this.lastPing = new Date()), this.emitAll('ping')
            }),
            (r.prototype.onpong = function () {
              this.emitAll('pong', new Date() - this.lastPing)
            }),
            (r.prototype.ondata = function (t) {
              this.decoder.add(t)
            }),
            (r.prototype.ondecoded = function (t) {
              this.emit('packet', t)
            }),
            (r.prototype.onerror = function (t) {
              u('error', t), this.emitAll('error', t)
            }),
            (r.prototype.socket = function (t, e) {
              function n() {
                ~h(r.connecting, o) || r.connecting.push(o)
              }
              var r,
                o = this.nsps[t]
              return (
                o ||
                  ((o = new i(this, t, e)),
                  (this.nsps[t] = o),
                  (r = this),
                  o.on('connecting', n),
                  o.on('connect', function () {
                    o.id = r.generateId(t)
                  }),
                  this.autoConnect && n()),
                o
              )
            }),
            (r.prototype.destroy = function (t) {
              t = h(this.connecting, t)
              ~t && this.connecting.splice(t, 1),
                this.connecting.length || this.close()
            }),
            (r.prototype.packet = function (n) {
              u('writing packet %j', n)
              var r = this
              n.query && 0 === n.type && (n.nsp += '?' + n.query),
                r.encoding
                  ? r.packetBuffer.push(n)
                  : ((r.encoding = !0),
                    this.encoder.encode(n, function (t) {
                      for (var e = 0; e < t.length; e++)
                        r.engine.write(t[e], n.options)
                      ;(r.encoding = !1), r.processPacketQueue()
                    }))
            }),
            (r.prototype.processPacketQueue = function () {
              var t
              0 < this.packetBuffer.length &&
                !this.encoding &&
                ((t = this.packetBuffer.shift()), this.packet(t))
            }),
            (r.prototype.cleanup = function () {
              u('cleanup')
              for (var t = this.subs.length, e = 0; e < t; e++)
                this.subs.shift().destroy()
              ;(this.packetBuffer = []),
                (this.encoding = !1),
                (this.lastPing = null),
                this.decoder.destroy()
            }),
            (r.prototype.close = r.prototype.disconnect =
              function () {
                u('disconnect'),
                  (this.skipReconnect = !0),
                  (this.reconnecting = !1),
                  'opening' === this.readyState && this.cleanup(),
                  this.backoff.reset(),
                  (this.readyState = 'closed'),
                  this.engine && this.engine.close()
              }),
            (r.prototype.onclose = function (t) {
              u('onclose'),
                this.cleanup(),
                this.backoff.reset(),
                (this.readyState = 'closed'),
                this.emit('close', t),
                this._reconnection && !this.skipReconnect && this.reconnect()
            }),
            (r.prototype.reconnect = function () {
              if (this.reconnecting || this.skipReconnect) return this
              var t,
                e,
                n = this
              this.backoff.attempts >= this._reconnectionAttempts
                ? (u('reconnect failed'),
                  this.backoff.reset(),
                  this.emitAll('reconnect_failed'),
                  (this.reconnecting = !1))
                : ((t = this.backoff.duration()),
                  u('will wait %dms before reconnect attempt', t),
                  (this.reconnecting = !0),
                  (e = setTimeout(function () {
                    n.skipReconnect ||
                      (u('attempting reconnect'),
                      n.emitAll('reconnect_attempt', n.backoff.attempts),
                      n.emitAll('reconnecting', n.backoff.attempts),
                      n.skipReconnect ||
                        n.open(function (t) {
                          t
                            ? (u('reconnect attempt error'),
                              (n.reconnecting = !1),
                              n.reconnect(),
                              n.emitAll('reconnect_error', t.data))
                            : (u('reconnect success'), n.onreconnect())
                        }))
                  }, t)),
                  this.subs.push({
                    destroy: function () {
                      clearTimeout(e)
                    }
                  }))
            }),
            (r.prototype.onreconnect = function () {
              var t = this.backoff.attempts
              ;(this.reconnecting = !1),
                this.backoff.reset(),
                this.updateSocketIds(),
                this.emitAll('reconnect', t)
            })
        },
        function (t, e, n) {
          ;(t.exports = n(17)), (t.exports.parser = n(24))
        },
        function (t, e, n) {
          function h(t, e) {
            return this instanceof h
              ? ((e = e || {}),
                t && 'object' == typeof t && ((e = t), (t = null)),
                t
                  ? ((t = a(t)),
                    (e.hostname = t.host),
                    (e.secure = 'https' === t.protocol || 'wss' === t.protocol),
                    (e.port = t.port),
                    t.query && (e.query = t.query))
                  : e.host && (e.hostname = a(e.host).host),
                (this.secure =
                  null != e.secure
                    ? e.secure
                    : 'undefined' != typeof location &&
                      'https:' === location.protocol),
                e.hostname && !e.port && (e.port = this.secure ? '443' : '80'),
                (this.agent = e.agent || !1),
                (this.hostname =
                  e.hostname ||
                  ('undefined' != typeof location
                    ? location.hostname
                    : 'localhost')),
                (this.port =
                  e.port ||
                  ('undefined' != typeof location && location.port
                    ? location.port
                    : this.secure
                    ? 443
                    : 80)),
                (this.query = e.query || {}),
                'string' == typeof this.query &&
                  (this.query = c.decode(this.query)),
                (this.upgrade = !1 !== e.upgrade),
                (this.path = (e.path || '/engine.io').replace(/\/$/, '') + '/'),
                (this.forceJSONP = !!e.forceJSONP),
                (this.jsonp = !1 !== e.jsonp),
                (this.forceBase64 = !!e.forceBase64),
                (this.enablesXDR = !!e.enablesXDR),
                (this.withCredentials = !1 !== e.withCredentials),
                (this.timestampParam = e.timestampParam || 't'),
                (this.timestampRequests = e.timestampRequests),
                (this.transports = e.transports || ['polling', 'websocket']),
                (this.transportOptions = e.transportOptions || {}),
                (this.readyState = ''),
                (this.writeBuffer = []),
                (this.prevBufferLen = 0),
                (this.policyPort = e.policyPort || 843),
                (this.rememberUpgrade = e.rememberUpgrade || !1),
                (this.binaryType = null),
                (this.onlyBinaryUpgrades = e.onlyBinaryUpgrades),
                (this.perMessageDeflate =
                  !1 !== e.perMessageDeflate && (e.perMessageDeflate || {})),
                !0 === this.perMessageDeflate && (this.perMessageDeflate = {}),
                this.perMessageDeflate &&
                  null == this.perMessageDeflate.threshold &&
                  (this.perMessageDeflate.threshold = 1024),
                (this.pfx = e.pfx || null),
                (this.key = e.key || null),
                (this.passphrase = e.passphrase || null),
                (this.cert = e.cert || null),
                (this.ca = e.ca || null),
                (this.ciphers = e.ciphers || null),
                (this.rejectUnauthorized =
                  void 0 === e.rejectUnauthorized || e.rejectUnauthorized),
                (this.forceNode = !!e.forceNode),
                (this.isReactNative =
                  'undefined' != typeof navigator &&
                  'string' == typeof navigator.product &&
                  'reactnative' === navigator.product.toLowerCase()),
                ('undefined' != typeof self && !this.isReactNative) ||
                  (e.extraHeaders &&
                    0 < Object.keys(e.extraHeaders).length &&
                    (this.extraHeaders = e.extraHeaders),
                  e.localAddress && (this.localAddress = e.localAddress)),
                (this.id = null),
                (this.upgrades = null),
                (this.pingInterval = null),
                (this.pingTimeout = null),
                (this.pingIntervalTimer = null),
                (this.pingTimeoutTimer = null),
                void this.open())
              : new h(t, e)
          }
          var r = n(18),
            o = n(11),
            f = n(3)('engine.io-client:socket'),
            i = n(38),
            s = n(24),
            a = n(2),
            c = n(32)
          ;((t.exports = h).priorWebsocketSuccess = !1),
            o(h.prototype),
            (h.protocol = s.protocol),
            ((h.Socket = h).Transport = n(23)),
            (h.transports = n(18)),
            (h.parser = n(24)),
            (h.prototype.createTransport = function (t) {
              f('creating transport "%s"', t)
              var e = (function (t) {
                var e,
                  n = {}
                for (e in t) t.hasOwnProperty(e) && (n[e] = t[e])
                return n
              })(this.query)
              ;(e.EIO = s.protocol), (e.transport = t)
              var n = this.transportOptions[t] || {}
              return (
                this.id && (e.sid = this.id),
                new r[t]({
                  query: e,
                  socket: this,
                  agent: n.agent || this.agent,
                  hostname: n.hostname || this.hostname,
                  port: n.port || this.port,
                  secure: n.secure || this.secure,
                  path: n.path || this.path,
                  forceJSONP: n.forceJSONP || this.forceJSONP,
                  jsonp: n.jsonp || this.jsonp,
                  forceBase64: n.forceBase64 || this.forceBase64,
                  enablesXDR: n.enablesXDR || this.enablesXDR,
                  withCredentials: n.withCredentials || this.withCredentials,
                  timestampRequests:
                    n.timestampRequests || this.timestampRequests,
                  timestampParam: n.timestampParam || this.timestampParam,
                  policyPort: n.policyPort || this.policyPort,
                  pfx: n.pfx || this.pfx,
                  key: n.key || this.key,
                  passphrase: n.passphrase || this.passphrase,
                  cert: n.cert || this.cert,
                  ca: n.ca || this.ca,
                  ciphers: n.ciphers || this.ciphers,
                  rejectUnauthorized:
                    n.rejectUnauthorized || this.rejectUnauthorized,
                  perMessageDeflate:
                    n.perMessageDeflate || this.perMessageDeflate,
                  extraHeaders: n.extraHeaders || this.extraHeaders,
                  forceNode: n.forceNode || this.forceNode,
                  localAddress: n.localAddress || this.localAddress,
                  requestTimeout: n.requestTimeout || this.requestTimeout,
                  protocols: n.protocols || void 0,
                  isReactNative: this.isReactNative
                })
              )
            }),
            (h.prototype.open = function () {
              var t
              if (
                this.rememberUpgrade &&
                h.priorWebsocketSuccess &&
                -1 !== this.transports.indexOf('websocket')
              )
                t = 'websocket'
              else {
                if (0 === this.transports.length) {
                  var e = this
                  return void setTimeout(function () {
                    e.emit('error', 'No transports available')
                  }, 0)
                }
                t = this.transports[0]
              }
              this.readyState = 'opening'
              try {
                t = this.createTransport(t)
              } catch (t) {
                return this.transports.shift(), void this.open()
              }
              t.open(), this.setTransport(t)
            }),
            (h.prototype.setTransport = function (t) {
              f('setting transport %s', t.name)
              var e = this
              this.transport &&
                (f('clearing existing transport %s', this.transport.name),
                this.transport.removeAllListeners()),
                (this.transport = t)
                  .on('drain', function () {
                    e.onDrain()
                  })
                  .on('packet', function (t) {
                    e.onPacket(t)
                  })
                  .on('error', function (t) {
                    e.onError(t)
                  })
                  .on('close', function () {
                    e.onClose('transport close')
                  })
            }),
            (h.prototype.probe = function (n) {
              function t() {
                var t
                u.onlyBinaryUpgrades &&
                  ((t = !this.supportsBinary && u.transport.supportsBinary),
                  (p = p || t)),
                  p ||
                    (f('probe transport "%s" opened', n),
                    c.send([{ type: 'ping', data: 'probe' }]),
                    c.once('packet', function (t) {
                      p ||
                        ('pong' === t.type && 'probe' === t.data
                          ? (f('probe transport "%s" pong', n),
                            (u.upgrading = !0),
                            u.emit('upgrading', c),
                            c &&
                              ((h.priorWebsocketSuccess =
                                'websocket' === c.name),
                              f(
                                'pausing current transport "%s"',
                                u.transport.name
                              ),
                              u.transport.pause(function () {
                                p ||
                                  ('closed' !== u.readyState &&
                                    (f(
                                      'changing transport and sending upgrade packet'
                                    ),
                                    a(),
                                    u.setTransport(c),
                                    c.send([{ type: 'upgrade' }]),
                                    u.emit('upgrade', c),
                                    (c = null),
                                    (u.upgrading = !1),
                                    u.flush()))
                              })))
                          : (f('probe transport "%s" failed', n),
                            ((t = new Error('probe error')).transport = c.name),
                            u.emit('upgradeError', t)))
                    }))
              }
              function r() {
                p || ((p = !0), a(), c.close(), (c = null))
              }
              function e(t) {
                var e = new Error('probe error: ' + t)
                ;(e.transport = c.name),
                  r(),
                  f('probe transport "%s" failed because of error: %s', n, t),
                  u.emit('upgradeError', e)
              }
              function o() {
                e('transport closed')
              }
              function i() {
                e('socket closed')
              }
              function s(t) {
                c &&
                  t.name !== c.name &&
                  (f('"%s" works - aborting "%s"', t.name, c.name), r())
              }
              function a() {
                c.removeListener('open', t),
                  c.removeListener('error', e),
                  c.removeListener('close', o),
                  u.removeListener('close', i),
                  u.removeListener('upgrading', s)
              }
              f('probing transport "%s"', n)
              var c = this.createTransport(n, { probe: 1 }),
                p = !1,
                u = this
              ;(h.priorWebsocketSuccess = !1),
                c.once('open', t),
                c.once('error', e),
                c.once('close', o),
                this.once('close', i),
                this.once('upgrading', s),
                c.open()
            }),
            (h.prototype.onOpen = function () {
              if (
                (f('socket open'),
                (this.readyState = 'open'),
                (h.priorWebsocketSuccess = 'websocket' === this.transport.name),
                this.emit('open'),
                this.flush(),
                'open' === this.readyState &&
                  this.upgrade &&
                  this.transport.pause)
              ) {
                f('starting upgrade probes')
                for (var t = 0, e = this.upgrades.length; t < e; t++)
                  this.probe(this.upgrades[t])
              }
            }),
            (h.prototype.onPacket = function (t) {
              if (
                'opening' === this.readyState ||
                'open' === this.readyState ||
                'closing' === this.readyState
              )
                switch (
                  (f('socket receive: type "%s", data "%s"', t.type, t.data),
                  this.emit('packet', t),
                  this.emit('heartbeat'),
                  t.type)
                ) {
                  case 'open':
                    this.onHandshake(JSON.parse(t.data))
                    break
                  case 'pong':
                    this.setPing(), this.emit('pong')
                    break
                  case 'error':
                    var e = new Error('server error')
                    ;(e.code = t.data), this.onError(e)
                    break
                  case 'message':
                    this.emit('data', t.data), this.emit('message', t.data)
                }
              else
                f(
                  'packet received with socket readyState "%s"',
                  this.readyState
                )
            }),
            (h.prototype.onHandshake = function (t) {
              this.emit('handshake', t),
                (this.id = t.sid),
                (this.transport.query.sid = t.sid),
                (this.upgrades = this.filterUpgrades(t.upgrades)),
                (this.pingInterval = t.pingInterval),
                (this.pingTimeout = t.pingTimeout),
                this.onOpen(),
                'closed' !== this.readyState &&
                  (this.setPing(),
                  this.removeListener('heartbeat', this.onHeartbeat),
                  this.on('heartbeat', this.onHeartbeat))
            }),
            (h.prototype.onHeartbeat = function (t) {
              clearTimeout(this.pingTimeoutTimer)
              var e = this
              e.pingTimeoutTimer = setTimeout(function () {
                'closed' !== e.readyState && e.onClose('ping timeout')
              }, t || e.pingInterval + e.pingTimeout)
            }),
            (h.prototype.setPing = function () {
              var t = this
              clearTimeout(t.pingIntervalTimer),
                (t.pingIntervalTimer = setTimeout(function () {
                  f(
                    'writing ping packet - expecting pong within %sms',
                    t.pingTimeout
                  ),
                    t.ping(),
                    t.onHeartbeat(t.pingTimeout)
                }, t.pingInterval))
            }),
            (h.prototype.ping = function () {
              var t = this
              this.sendPacket('ping', function () {
                t.emit('ping')
              })
            }),
            (h.prototype.onDrain = function () {
              this.writeBuffer.splice(0, this.prevBufferLen),
                (this.prevBufferLen = 0) === this.writeBuffer.length
                  ? this.emit('drain')
                  : this.flush()
            }),
            (h.prototype.flush = function () {
              'closed' !== this.readyState &&
                this.transport.writable &&
                !this.upgrading &&
                this.writeBuffer.length &&
                (f('flushing %d packets in socket', this.writeBuffer.length),
                this.transport.send(this.writeBuffer),
                (this.prevBufferLen = this.writeBuffer.length),
                this.emit('flush'))
            }),
            (h.prototype.write = h.prototype.send =
              function (t, e, n) {
                return this.sendPacket('message', t, e, n), this
              }),
            (h.prototype.sendPacket = function (t, e, n, r) {
              'function' == typeof e && ((r = e), (e = void 0)),
                'function' == typeof n && ((r = n), (n = null)),
                'closing' !== this.readyState &&
                  'closed' !== this.readyState &&
                  (((n = n || {}).compress = !1 !== n.compress),
                  (n = { type: t, data: e, options: n }),
                  this.emit('packetCreate', n),
                  this.writeBuffer.push(n),
                  r && this.once('flush', r),
                  this.flush())
            }),
            (h.prototype.close = function () {
              function t() {
                r.onClose('forced close'),
                  f('socket closing - telling transport to close'),
                  r.transport.close()
              }
              function e() {
                r.removeListener('upgrade', e),
                  r.removeListener('upgradeError', e),
                  t()
              }
              function n() {
                r.once('upgrade', e), r.once('upgradeError', e)
              }
              var r
              return (
                ('opening' !== this.readyState && 'open' !== this.readyState) ||
                  ((this.readyState = 'closing'),
                  (r = this).writeBuffer.length
                    ? this.once('drain', function () {
                        ;(this.upgrading ? n : t)()
                      })
                    : (this.upgrading ? n : t)()),
                this
              )
            }),
            (h.prototype.onError = function (t) {
              f('socket error %j', t),
                (h.priorWebsocketSuccess = !1),
                this.emit('error', t),
                this.onClose('transport error', t)
            }),
            (h.prototype.onClose = function (t, e) {
              ;('opening' !== this.readyState &&
                'open' !== this.readyState &&
                'closing' !== this.readyState) ||
                (f('socket close with reason: "%s"', t),
                clearTimeout(this.pingIntervalTimer),
                clearTimeout(this.pingTimeoutTimer),
                this.transport.removeAllListeners('close'),
                this.transport.close(),
                this.transport.removeAllListeners(),
                (this.readyState = 'closed'),
                (this.id = null),
                this.emit('close', t, e),
                (this.writeBuffer = []),
                (this.prevBufferLen = 0))
            }),
            (h.prototype.filterUpgrades = function (t) {
              for (var e = [], n = 0, r = t.length; n < r; n++)
                ~i(this.transports, t[n]) && e.push(t[n])
              return e
            })
        },
        function (t, e, n) {
          var s = n(19),
            a = n(21),
            c = n(35),
            n = n(36)
          ;(e.polling = function (t) {
            var e,
              n,
              r = !1,
              o = !1,
              i = !1 !== t.jsonp
            if (
              ('undefined' != typeof location &&
                ((e = 'https:' === location.protocol),
                (n = (n = location.port) || (e ? 443 : 80)),
                (r = t.hostname !== location.hostname || n !== t.port),
                (o = t.secure !== e)),
              (t.xdomain = r),
              (t.xscheme = o),
              'open' in new s(t) && !t.forceJSONP)
            )
              return new a(t)
            if (!i) throw new Error('JSONP disabled')
            return new c(t)
          }),
            (e.websocket = n)
        },
        function (t, e, n) {
          var o = n(20)
          t.exports = function (t) {
            var e = t.xdomain,
              n = t.xscheme,
              r = t.enablesXDR
            try {
              if ('undefined' != typeof XMLHttpRequest && (!e || o))
                return new XMLHttpRequest()
            } catch (t) {}
            try {
              if ('undefined' != typeof XDomainRequest && !n && r)
                return new XDomainRequest()
            } catch (t) {}
            if (!e)
              try {
                return new self[['Active'].concat('Object').join('X')](
                  'Microsoft.XMLHTTP'
                )
              } catch (t) {}
          }
        },
        function (e, t) {
          try {
            e.exports =
              'undefined' != typeof XMLHttpRequest &&
              'withCredentials' in new XMLHttpRequest()
          } catch (t) {
            e.exports = !1
          }
        },
        function (t, e, n) {
          function r() {}
          function o(t) {
            var e, n
            c.call(this, t),
              (this.requestTimeout = t.requestTimeout),
              (this.extraHeaders = t.extraHeaders),
              'undefined' != typeof location &&
                ((e = 'https:' === location.protocol),
                (n = (n = location.port) || (e ? 443 : 80)),
                (this.xd =
                  ('undefined' != typeof location &&
                    t.hostname !== location.hostname) ||
                  n !== t.port),
                (this.xs = t.secure !== e))
          }
          function i(t) {
            ;(this.method = t.method || 'GET'),
              (this.uri = t.uri),
              (this.xd = !!t.xd),
              (this.xs = !!t.xs),
              (this.async = !1 !== t.async),
              (this.data = void 0 !== t.data ? t.data : null),
              (this.agent = t.agent),
              (this.isBinary = t.isBinary),
              (this.supportsBinary = t.supportsBinary),
              (this.enablesXDR = t.enablesXDR),
              (this.withCredentials = t.withCredentials),
              (this.requestTimeout = t.requestTimeout),
              (this.pfx = t.pfx),
              (this.key = t.key),
              (this.passphrase = t.passphrase),
              (this.cert = t.cert),
              (this.ca = t.ca),
              (this.ciphers = t.ciphers),
              (this.rejectUnauthorized = t.rejectUnauthorized),
              (this.extraHeaders = t.extraHeaders),
              this.create()
          }
          function s() {
            for (var t in i.requests)
              i.requests.hasOwnProperty(t) && i.requests[t].abort()
          }
          var a = n(19),
            c = n(22),
            p = n(11),
            u = n(33),
            h = n(3)('engine.io-client:polling-xhr')
          ;(t.exports = o),
            (t.exports.Request = i),
            u(o, c),
            (o.prototype.supportsBinary = !0),
            (o.prototype.request = function (t) {
              return (
                ((t = t || {}).uri = this.uri()),
                (t.xd = this.xd),
                (t.xs = this.xs),
                (t.agent = this.agent || !1),
                (t.supportsBinary = this.supportsBinary),
                (t.enablesXDR = this.enablesXDR),
                (t.withCredentials = this.withCredentials),
                (t.pfx = this.pfx),
                (t.key = this.key),
                (t.passphrase = this.passphrase),
                (t.cert = this.cert),
                (t.ca = this.ca),
                (t.ciphers = this.ciphers),
                (t.rejectUnauthorized = this.rejectUnauthorized),
                (t.requestTimeout = this.requestTimeout),
                (t.extraHeaders = this.extraHeaders),
                new i(t)
              )
            }),
            (o.prototype.doWrite = function (t, e) {
              var n = 'string' != typeof t && void 0 !== t,
                n = this.request({ method: 'POST', data: t, isBinary: n }),
                r = this
              n.on('success', e),
                n.on('error', function (t) {
                  r.onError('xhr post error', t)
                }),
                (this.sendXhr = n)
            }),
            (o.prototype.doPoll = function () {
              h('xhr poll')
              var t = this.request(),
                e = this
              t.on('data', function (t) {
                e.onData(t)
              }),
                t.on('error', function (t) {
                  e.onError('xhr poll error', t)
                }),
                (this.pollXhr = t)
            }),
            p(i.prototype),
            (i.prototype.create = function () {
              var t = {
                agent: this.agent,
                xdomain: this.xd,
                xscheme: this.xs,
                enablesXDR: this.enablesXDR
              }
              ;(t.pfx = this.pfx),
                (t.key = this.key),
                (t.passphrase = this.passphrase),
                (t.cert = this.cert),
                (t.ca = this.ca),
                (t.ciphers = this.ciphers),
                (t.rejectUnauthorized = this.rejectUnauthorized)
              var e = (this.xhr = new a(t)),
                n = this
              try {
                h('xhr open %s: %s', this.method, this.uri),
                  e.open(this.method, this.uri, this.async)
                try {
                  if (this.extraHeaders)
                    for (var r in (e.setDisableHeaderCheck &&
                      e.setDisableHeaderCheck(!0),
                    this.extraHeaders))
                      this.extraHeaders.hasOwnProperty(r) &&
                        e.setRequestHeader(r, this.extraHeaders[r])
                } catch (t) {}
                if ('POST' === this.method)
                  try {
                    this.isBinary
                      ? e.setRequestHeader(
                          'Content-type',
                          'application/octet-stream'
                        )
                      : e.setRequestHeader(
                          'Content-type',
                          'text/plain;charset=UTF-8'
                        )
                  } catch (t) {}
                try {
                  e.setRequestHeader('Accept', '*/*')
                } catch (t) {}
                'withCredentials' in e &&
                  (e.withCredentials = this.withCredentials),
                  this.requestTimeout && (e.timeout = this.requestTimeout),
                  this.hasXDR()
                    ? ((e.onload = function () {
                        n.onLoad()
                      }),
                      (e.onerror = function () {
                        n.onError(e.responseText)
                      }))
                    : (e.onreadystatechange = function () {
                        if (2 === e.readyState)
                          try {
                            var t = e.getResponseHeader('Content-Type')
                            ;((n.supportsBinary &&
                              'application/octet-stream' === t) ||
                              'application/octet-stream; charset=UTF-8' ===
                                t) &&
                              (e.responseType = 'arraybuffer')
                          } catch (t) {}
                        4 === e.readyState &&
                          (200 === e.status || 1223 === e.status
                            ? n.onLoad()
                            : setTimeout(function () {
                                n.onError(
                                  'number' == typeof e.status ? e.status : 0
                                )
                              }, 0))
                      }),
                  h('xhr data %s', this.data),
                  e.send(this.data)
              } catch (t) {
                return void setTimeout(function () {
                  n.onError(t)
                }, 0)
              }
              'undefined' != typeof document &&
                ((this.index = i.requestsCount++),
                (i.requests[this.index] = this))
            }),
            (i.prototype.onSuccess = function () {
              this.emit('success'), this.cleanup()
            }),
            (i.prototype.onData = function (t) {
              this.emit('data', t), this.onSuccess()
            }),
            (i.prototype.onError = function (t) {
              this.emit('error', t), this.cleanup(!0)
            }),
            (i.prototype.cleanup = function (t) {
              if (void 0 !== this.xhr && null !== this.xhr) {
                if (
                  (this.hasXDR()
                    ? (this.xhr.onload = this.xhr.onerror = r)
                    : (this.xhr.onreadystatechange = r),
                  t)
                )
                  try {
                    this.xhr.abort()
                  } catch (t) {}
                'undefined' != typeof document && delete i.requests[this.index],
                  (this.xhr = null)
              }
            }),
            (i.prototype.onLoad = function () {
              var t, e
              try {
                try {
                  e = this.xhr.getResponseHeader('Content-Type')
                } catch (t) {}
                t =
                  (('application/octet-stream' === e ||
                    'application/octet-stream; charset=UTF-8' === e) &&
                    this.xhr.response) ||
                  this.xhr.responseText
              } catch (t) {
                this.onError(t)
              }
              null != t && this.onData(t)
            }),
            (i.prototype.hasXDR = function () {
              return (
                'undefined' != typeof XDomainRequest &&
                !this.xs &&
                this.enablesXDR
              )
            }),
            (i.prototype.abort = function () {
              this.cleanup()
            }),
            (i.requestsCount = 0),
            (i.requests = {}),
            'undefined' != typeof document &&
              ('function' == typeof attachEvent
                ? attachEvent('onunload', s)
                : 'function' == typeof addEventListener &&
                  ((p = 'onpagehide' in self ? 'pagehide' : 'unload'),
                  addEventListener(p, s, !1)))
        },
        function (t, e, n) {
          function r(t) {
            var e = t && t.forceBase64
            ;(u && !e) || (this.supportsBinary = !1), o.call(this, t)
          }
          var o = n(23),
            i = n(32),
            s = n(24),
            a = n(33),
            c = n(34),
            p = n(3)('engine.io-client:polling')
          t.exports = r
          var u = null != new (n(19))({ xdomain: !1 }).responseType
          a(r, o),
            (r.prototype.name = 'polling'),
            (r.prototype.doOpen = function () {
              this.poll()
            }),
            (r.prototype.pause = function (t) {
              function e() {
                p('paused'), (r.readyState = 'paused'), t()
              }
              var n,
                r = this
              ;(this.readyState = 'pausing'),
                this.polling || !this.writable
                  ? ((n = 0),
                    this.polling &&
                      (p('we are currently polling - waiting to pause'),
                      n++,
                      this.once('pollComplete', function () {
                        p('pre-pause polling complete'), --n || e()
                      })),
                    this.writable ||
                      (p('we are currently writing - waiting to pause'),
                      n++,
                      this.once('drain', function () {
                        p('pre-pause writing complete'), --n || e()
                      })))
                  : e()
            }),
            (r.prototype.poll = function () {
              p('polling'),
                (this.polling = !0),
                this.doPoll(),
                this.emit('poll')
            }),
            (r.prototype.onData = function (t) {
              var r = this
              p('polling got data %s', t)
              s.decodePayload(t, this.socket.binaryType, function (t, e, n) {
                return (
                  'opening' === r.readyState && r.onOpen(),
                  'close' === t.type ? (r.onClose(), !1) : void r.onPacket(t)
                )
              }),
                'closed' !== this.readyState &&
                  ((this.polling = !1),
                  this.emit('pollComplete'),
                  'open' === this.readyState
                    ? this.poll()
                    : p(
                        'ignoring poll - transport state "%s"',
                        this.readyState
                      ))
            }),
            (r.prototype.doClose = function () {
              function t() {
                p('writing close packet'), e.write([{ type: 'close' }])
              }
              var e = this
              'open' === this.readyState
                ? (p('transport open - closing'), t())
                : (p('transport not open - deferring close'),
                  this.once('open', t))
            }),
            (r.prototype.write = function (t) {
              var e = this
              this.writable = !1
              function n() {
                ;(e.writable = !0), e.emit('drain')
              }
              s.encodePayload(t, this.supportsBinary, function (t) {
                e.doWrite(t, n)
              })
            }),
            (r.prototype.uri = function () {
              var t = this.query || {},
                e = this.secure ? 'https' : 'http',
                n = ''
              return (
                !1 !== this.timestampRequests && (t[this.timestampParam] = c()),
                this.supportsBinary || t.sid || (t.b64 = 1),
                (t = i.encode(t)),
                this.port &&
                  (('https' == e && 443 !== Number(this.port)) ||
                    ('http' == e && 80 !== Number(this.port))) &&
                  (n = ':' + this.port),
                t.length && (t = '?' + t),
                e +
                  '://' +
                  (-1 !== this.hostname.indexOf(':')
                    ? '[' + this.hostname + ']'
                    : this.hostname) +
                  n +
                  this.path +
                  t
              )
            })
        },
        function (t, e, n) {
          function r(t) {
            ;(this.path = t.path),
              (this.hostname = t.hostname),
              (this.port = t.port),
              (this.secure = t.secure),
              (this.query = t.query),
              (this.timestampParam = t.timestampParam),
              (this.timestampRequests = t.timestampRequests),
              (this.readyState = ''),
              (this.agent = t.agent || !1),
              (this.socket = t.socket),
              (this.enablesXDR = t.enablesXDR),
              (this.withCredentials = t.withCredentials),
              (this.pfx = t.pfx),
              (this.key = t.key),
              (this.passphrase = t.passphrase),
              (this.cert = t.cert),
              (this.ca = t.ca),
              (this.ciphers = t.ciphers),
              (this.rejectUnauthorized = t.rejectUnauthorized),
              (this.forceNode = t.forceNode),
              (this.isReactNative = t.isReactNative),
              (this.extraHeaders = t.extraHeaders),
              (this.localAddress = t.localAddress)
          }
          var o = n(24)
          n(11)((t.exports = r).prototype),
            (r.prototype.onError = function (t, e) {
              t = new Error(t)
              return (
                (t.type = 'TransportError'),
                (t.description = e),
                this.emit('error', t),
                this
              )
            }),
            (r.prototype.open = function () {
              return (
                ('closed' !== this.readyState && '' !== this.readyState) ||
                  ((this.readyState = 'opening'), this.doOpen()),
                this
              )
            }),
            (r.prototype.close = function () {
              return (
                ('opening' !== this.readyState && 'open' !== this.readyState) ||
                  (this.doClose(), this.onClose()),
                this
              )
            }),
            (r.prototype.send = function (t) {
              if ('open' !== this.readyState)
                throw new Error('Transport not open')
              this.write(t)
            }),
            (r.prototype.onOpen = function () {
              ;(this.readyState = 'open'),
                (this.writable = !0),
                this.emit('open')
            }),
            (r.prototype.onData = function (t) {
              t = o.decodePacket(t, this.socket.binaryType)
              this.onPacket(t)
            }),
            (r.prototype.onPacket = function (t) {
              this.emit('packet', t)
            }),
            (r.prototype.onClose = function () {
              ;(this.readyState = 'closed'), this.emit('close')
            })
        },
        function (t, f, e) {
          function s(t, e, n) {
            if (!e) return f.encodeBase64Packet(t, n)
            if (h)
              return (function (t, e, n) {
                if (!e) return f.encodeBase64Packet(t, n)
                var r = new FileReader()
                return (
                  (r.onload = function () {
                    f.encodePacket({ type: t.type, data: r.result }, e, !0, n)
                  }),
                  r.readAsArrayBuffer(t.data)
                )
              })(t, e, n)
            e = new Uint8Array(1)
            return (e[0] = d[t.type]), n(new g([e.buffer, t.data]))
          }
          function i(t, e, n) {
            for (
              var o = new Array(t.length), r = c(t.length, n), i = 0;
              i < t.length;
              i++
            )
              !(function (n, t, r) {
                e(t, function (t, e) {
                  ;(o[n] = e), r(t, o)
                })
              })(i, t[i], r)
          }
          var r,
            n = e(25),
            a = e(26),
            l = e(27),
            c = e(28),
            p = e(29)
          'undefined' != typeof ArrayBuffer && (r = e(30))
          var o =
              'undefined' != typeof navigator &&
              /Android/i.test(navigator.userAgent),
            u =
              'undefined' != typeof navigator &&
              /PhantomJS/i.test(navigator.userAgent),
            h = o || u
          f.protocol = 3
          var d = (f.packets = {
              open: 0,
              close: 1,
              ping: 2,
              pong: 3,
              message: 4,
              upgrade: 5,
              noop: 6
            }),
            y = n(d),
            m = { type: 'error', data: 'parser error' },
            g = e(31)
          ;(f.encodePacket = function (t, e, n, r) {
            'function' == typeof e && ((r = e), (e = !1)),
              'function' == typeof n && ((r = n), (n = null))
            var o = void 0 === t.data ? void 0 : t.data.buffer || t.data
            if ('undefined' != typeof ArrayBuffer && o instanceof ArrayBuffer)
              return (function (t, e, n) {
                if (!e) return f.encodeBase64Packet(t, n)
                var e = t.data,
                  r = new Uint8Array(e),
                  o = new Uint8Array(1 + e.byteLength)
                o[0] = d[t.type]
                for (var i = 0; i < r.length; i++) o[i + 1] = r[i]
                return n(o.buffer)
              })(t, e, r)
            if (void 0 !== g && o instanceof g) return s(t, e, r)
            if (o && o.base64)
              return (i = t), r('b' + f.packets[i.type] + i.data.data)
            var i = d[t.type]
            return (
              void 0 !== t.data &&
                (i += n
                  ? p.encode(String(t.data), { strict: !1 })
                  : String(t.data)),
              r('' + i)
            )
          }),
            (f.encodeBase64Packet = function (e, n) {
              var r,
                o = 'b' + f.packets[e.type]
              if (void 0 !== g && e.data instanceof g) {
                var i = new FileReader()
                return (
                  (i.onload = function () {
                    var t = i.result.split(',')[1]
                    n(o + t)
                  }),
                  i.readAsDataURL(e.data)
                )
              }
              try {
                r = String.fromCharCode.apply(null, new Uint8Array(e.data))
              } catch (t) {
                for (
                  var s = new Uint8Array(e.data),
                    a = new Array(s.length),
                    c = 0;
                  c < s.length;
                  c++
                )
                  a[c] = s[c]
                r = String.fromCharCode.apply(null, a)
              }
              return (o += btoa(r)), n(o)
            }),
            (f.decodePacket = function (t, e, n) {
              if (void 0 === t) return m
              if ('string' == typeof t) {
                if ('b' === t.charAt(0))
                  return f.decodeBase64Packet(t.substr(1), e)
                if (
                  n &&
                  !1 ===
                    (t = (function (t) {
                      try {
                        t = p.decode(t, { strict: !1 })
                      } catch (t) {
                        return !1
                      }
                      return t
                    })(t))
                )
                  return m
                var r = t.charAt(0)
                return Number(r) == r && y[r]
                  ? 1 < t.length
                    ? { type: y[r], data: t.substring(1) }
                    : { type: y[r] }
                  : m
              }
              ;(r = new Uint8Array(t)[0]), (t = l(t, 1))
              return (
                g && 'blob' === e && (t = new g([t])), { type: y[r], data: t }
              )
            }),
            (f.decodeBase64Packet = function (t, e) {
              var n = y[t.charAt(0)]
              if (!r)
                return { type: n, data: { base64: !0, data: t.substr(1) } }
              t = r.decode(t.substr(1))
              return 'blob' === e && g && (t = new g([t])), { type: n, data: t }
            }),
            (f.encodePayload = function (t, n, r) {
              'function' == typeof n && ((r = n), (n = null))
              var o = a(t)
              return n && o
                ? g && !h
                  ? f.encodePayloadAsBlob(t, r)
                  : f.encodePayloadAsArrayBuffer(t, r)
                : t.length
                ? void i(
                    t,
                    function (t, e) {
                      f.encodePacket(t, !!o && n, !1, function (t) {
                        e(null, (t = t).length + ':' + t)
                      })
                    },
                    function (t, e) {
                      return r(e.join(''))
                    }
                  )
                : r('0:')
            }),
            (f.decodePayload = function (t, e, n) {
              if ('string' != typeof t) return f.decodePayloadAsBinary(t, e, n)
              if (('function' == typeof e && ((n = e), (e = null)), '' === t))
                return n(m, 0, 1)
              for (var r, o, i = '', s = 0, a = t.length; s < a; s++) {
                var c = t.charAt(s)
                if (':' === c) {
                  if ('' === i || i != (r = Number(i))) return n(m, 0, 1)
                  if (i != (o = t.substr(s + 1, r)).length) return n(m, 0, 1)
                  if (o.length) {
                    if (
                      ((o = f.decodePacket(o, e, !1)),
                      m.type === o.type && m.data === o.data)
                    )
                      return n(m, 0, 1)
                    if (!1 === n(o, s + r, a)) return
                  }
                  ;(s += r), (i = '')
                } else i += c
              }
              return '' !== i ? n(m, 0, 1) : void 0
            }),
            (f.encodePayloadAsArrayBuffer = function (t, r) {
              return t.length
                ? void i(
                    t,
                    function (t, e) {
                      f.encodePacket(t, !0, !0, function (t) {
                        return e(null, t)
                      })
                    },
                    function (t, e) {
                      var n = e.reduce(function (t, e) {
                          e = 'string' == typeof e ? e.length : e.byteLength
                          return t + e.toString().length + e + 2
                        }, 0),
                        s = new Uint8Array(n),
                        a = 0
                      return (
                        e.forEach(function (t) {
                          var e = 'string' == typeof t,
                            n = t
                          if (e) {
                            for (
                              var r = new Uint8Array(t.length), o = 0;
                              o < t.length;
                              o++
                            )
                              r[o] = t.charCodeAt(o)
                            n = r.buffer
                          }
                          s[a++] = e ? 0 : 1
                          for (
                            var i = n.byteLength.toString(), o = 0;
                            o < i.length;
                            o++
                          )
                            s[a++] = parseInt(i[o])
                          s[a++] = 255
                          for (r = new Uint8Array(n), o = 0; o < r.length; o++)
                            s[a++] = r[o]
                        }),
                        r(s.buffer)
                      )
                    }
                  )
                : r(new ArrayBuffer(0))
            }),
            (f.encodePayloadAsBlob = function (t, n) {
              i(
                t,
                function (t, s) {
                  f.encodePacket(t, !0, !0, function (t) {
                    var e = new Uint8Array(1)
                    if (((e[0] = 1), 'string' == typeof t)) {
                      for (
                        var n = new Uint8Array(t.length), r = 0;
                        r < t.length;
                        r++
                      )
                        n[r] = t.charCodeAt(r)
                      ;(t = n.buffer), (e[0] = 0)
                    }
                    for (
                      var o = (
                          t instanceof ArrayBuffer ? t.byteLength : t.size
                        ).toString(),
                        i = new Uint8Array(o.length + 1),
                        r = 0;
                      r < o.length;
                      r++
                    )
                      i[r] = parseInt(o[r])
                    ;(i[o.length] = 255),
                      g && ((e = new g([e.buffer, i.buffer, t])), s(null, e))
                  })
                },
                function (t, e) {
                  return n(new g(e))
                }
              )
            }),
            (f.decodePayloadAsBinary = function (t, n, r) {
              'function' == typeof n && ((r = n), (n = null))
              for (var e = t, o = []; 0 < e.byteLength; ) {
                for (
                  var i = new Uint8Array(e), s = 0 === i[0], a = '', c = 1;
                  255 !== i[c];
                  c++
                ) {
                  if (310 < a.length) return r(m, 0, 1)
                  a += i[c]
                }
                ;(e = l(e, 2 + a.length)), (a = parseInt(a))
                var p = l(e, 0, a)
                if (s)
                  try {
                    p = String.fromCharCode.apply(null, new Uint8Array(p))
                  } catch (t) {
                    for (
                      var u = new Uint8Array(p), p = '', c = 0;
                      c < u.length;
                      c++
                    )
                      p += String.fromCharCode(u[c])
                  }
                o.push(p), (e = l(e, a))
              }
              var h = o.length
              o.forEach(function (t, e) {
                r(f.decodePacket(t, n, !0), e, h)
              })
            })
        },
        function (t, e) {
          t.exports =
            Object.keys ||
            function (t) {
              var e,
                n = [],
                r = Object.prototype.hasOwnProperty
              for (e in t) r.call(t, e) && n.push(e)
              return n
            }
        },
        function (t, e, n) {
          var i = n(13),
            n = Object.prototype.toString,
            s =
              'function' == typeof Blob ||
              ('undefined' != typeof Blob &&
                '[object BlobConstructor]' === n.call(Blob)),
            a =
              'function' == typeof File ||
              ('undefined' != typeof File &&
                '[object FileConstructor]' === n.call(File))
          t.exports = function t(e) {
            if (!e || 'object' != typeof e) return !1
            if (i(e)) {
              for (var n = 0, r = e.length; n < r; n++) if (t(e[n])) return !0
              return !1
            }
            if (
              ('function' == typeof Buffer &&
                Buffer.isBuffer &&
                Buffer.isBuffer(e)) ||
              ('function' == typeof ArrayBuffer && e instanceof ArrayBuffer) ||
              (s && e instanceof Blob) ||
              (a && e instanceof File)
            )
              return !0
            if (
              e.toJSON &&
              'function' == typeof e.toJSON &&
              1 === arguments.length
            )
              return t(e.toJSON(), !0)
            for (var o in e)
              if (Object.prototype.hasOwnProperty.call(e, o) && t(e[o]))
                return !0
            return !1
          }
        },
        function (t, e) {
          t.exports = function (t, e, n) {
            var r = t.byteLength
            if (((e = e || 0), (n = n || r), t.slice)) return t.slice(e, n)
            if (
              (e < 0 && (e += r),
              n < 0 && (n += r),
              r < n && (n = r),
              r <= e || n <= e || 0 === r)
            )
              return new ArrayBuffer(0)
            for (
              var o = new Uint8Array(t),
                i = new Uint8Array(n - e),
                s = e,
                a = 0;
              s < n;
              s++, a++
            )
              i[a] = o[s]
            return i.buffer
          }
        },
        function (t, e) {
          function s() {}
          t.exports = function (t, n, r) {
            function o(t, e) {
              if (o.count <= 0) throw new Error('after called too many times')
              --o.count,
                t ? ((i = !0), n(t), (n = r)) : 0 !== o.count || i || n(null, e)
            }
            var i = !1
            return (r = r || s), 0 === (o.count = t) ? n() : o
          }
        },
        function (t, e) {
          function a(t) {
            for (var e, n, r = [], o = 0, i = t.length; o < i; )
              55296 <= (e = t.charCodeAt(o++)) && e <= 56319 && o < i
                ? 56320 == (64512 & (n = t.charCodeAt(o++)))
                  ? r.push(((1023 & e) << 10) + (1023 & n) + 65536)
                  : (r.push(e), o--)
                : r.push(e)
            return r
          }
          function c(t, e) {
            if (!(55296 <= t && t <= 57343)) return 1
            if (e)
              throw Error(
                'Lone surrogate U+' +
                  t.toString(16).toUpperCase() +
                  ' is not a scalar value'
              )
          }
          function p(t, e) {
            return f(((t >> e) & 63) | 128)
          }
          function i() {
            if (u <= h) throw Error('Invalid byte index')
            var t = 255 & s[h]
            if ((h++, 128 == (192 & t))) return 63 & t
            throw Error('Invalid continuation byte')
          }
          var s,
            u,
            h,
            f = String.fromCharCode
          t.exports = {
            version: '2.1.2',
            encode: function (t, e) {
              for (
                var n = !1 !== (e = e || {}).strict,
                  r = a(t),
                  o = r.length,
                  i = -1,
                  s = '';
                ++i < o;

              )
                s += (function (t, e) {
                  if (0 == (4294967168 & t)) return f(t)
                  var n = ''
                  return (
                    0 == (4294965248 & t)
                      ? (n = f(((t >> 6) & 31) | 192))
                      : 0 == (4294901760 & t)
                      ? (c(t, e) || (t = 65533),
                        (n = f(((t >> 12) & 15) | 224)),
                        (n += p(t, 6)))
                      : 0 == (4292870144 & t) &&
                        ((n = f(((t >> 18) & 7) | 240)),
                        (n += p(t, 12)),
                        (n += p(t, 6))),
                    n + f((63 & t) | 128)
                  )
                })(r[i], n)
              return s
            },
            decode: function (t, e) {
              var n = !1 !== (e = e || {}).strict
              ;(s = a(t)), (u = s.length), (h = 0)
              for (
                var r, o = [];
                !1 !==
                (r = (function (t) {
                  var e, n
                  if (u < h) throw Error('Invalid byte index')
                  if (h == u) return !1
                  if (((e = 255 & s[h]), h++, 0 == (128 & e))) return e
                  if (192 == (224 & e)) {
                    if (128 <= (n = ((31 & e) << 6) | i())) return n
                    throw Error('Invalid continuation byte')
                  }
                  if (224 == (240 & e)) {
                    if (2048 <= (n = ((15 & e) << 12) | (i() << 6) | i()))
                      return c(n, t) ? n : 65533
                    throw Error('Invalid continuation byte')
                  }
                  if (
                    240 == (248 & e) &&
                    65536 <=
                      (n = ((7 & e) << 18) | (i() << 12) | (i() << 6) | i()) &&
                    n <= 1114111
                  )
                    return n
                  throw Error('Invalid UTF-8 detected')
                })(n));

              )
                o.push(r)
              return (function (t) {
                for (var e, n = t.length, r = -1, o = ''; ++r < n; )
                  65535 < (e = t[r]) &&
                    ((o += f((((e -= 65536) >>> 10) & 1023) | 55296)),
                    (e = 56320 | (1023 & e))),
                    (o += f(e))
                return o
              })(o)
            }
          }
        },
        function (t, e) {
          !(function () {
            'use strict'
            for (
              var i =
                  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
                u = new Uint8Array(256),
                t = 0;
              t < i.length;
              t++
            )
              u[i.charCodeAt(t)] = t
            ;(e.encode = function (t) {
              for (
                var e = new Uint8Array(t), n = e.length, r = '', o = 0;
                o < n;
                o += 3
              )
                (r += i[e[o] >> 2]),
                  (r += i[((3 & e[o]) << 4) | (e[o + 1] >> 4)]),
                  (r += i[((15 & e[o + 1]) << 2) | (e[o + 2] >> 6)]),
                  (r += i[63 & e[o + 2]])
              return (
                n % 3 == 2
                  ? (r = r.substring(0, r.length - 1) + '=')
                  : n % 3 == 1 && (r = r.substring(0, r.length - 2) + '=='),
                r
              )
            }),
              (e.decode = function (t) {
                var e,
                  n,
                  r,
                  o,
                  i = 0.75 * t.length,
                  s = t.length,
                  a = 0
                '=' === t[t.length - 1] && (i--, '=' === t[t.length - 2] && i--)
                for (
                  var i = new ArrayBuffer(i), c = new Uint8Array(i), p = 0;
                  p < s;
                  p += 4
                )
                  (e = u[t.charCodeAt(p)]),
                    (n = u[t.charCodeAt(p + 1)]),
                    (r = u[t.charCodeAt(p + 2)]),
                    (o = u[t.charCodeAt(p + 3)]),
                    (c[a++] = (e << 2) | (n >> 4)),
                    (c[a++] = ((15 & n) << 4) | (r >> 2)),
                    (c[a++] = ((3 & r) << 6) | (63 & o))
                return i
              })
          })()
        },
        function (t, e) {
          function r(t) {
            return t.map(function (t) {
              if (t.buffer instanceof ArrayBuffer) {
                var e,
                  n = t.buffer
                return (
                  t.byteLength !== n.byteLength &&
                    ((e = new Uint8Array(t.byteLength)).set(
                      new Uint8Array(n, t.byteOffset, t.byteLength)
                    ),
                    (n = e.buffer)),
                  n
                )
              }
              return t
            })
          }
          function n(t, e) {
            e = e || {}
            var n = new i()
            return (
              r(t).forEach(function (t) {
                n.append(t)
              }),
              e.type ? n.getBlob(e.type) : n.getBlob()
            )
          }
          function o(t, e) {
            return new Blob(r(t), e || {})
          }
          var i =
              void 0 !== i
                ? i
                : 'undefined' != typeof WebKitBlobBuilder
                ? WebKitBlobBuilder
                : 'undefined' != typeof MSBlobBuilder
                ? MSBlobBuilder
                : 'undefined' != typeof MozBlobBuilder && MozBlobBuilder,
            s = (function () {
              try {
                return 2 === new Blob(['hi']).size
              } catch (t) {
                return !1
              }
            })(),
            a =
              s &&
              (function () {
                try {
                  return 2 === new Blob([new Uint8Array([1, 2])]).size
                } catch (t) {
                  return !1
                }
              })(),
            c = i && i.prototype.append && i.prototype.getBlob
          'undefined' != typeof Blob &&
            ((n.prototype = Blob.prototype), (o.prototype = Blob.prototype)),
            (t.exports = s ? (a ? Blob : o) : c ? n : void 0)
        },
        function (t, e) {
          ;(e.encode = function (t) {
            var e,
              n = ''
            for (e in t)
              t.hasOwnProperty(e) &&
                (n.length && (n += '&'),
                (n += encodeURIComponent(e) + '=' + encodeURIComponent(t[e])))
            return n
          }),
            (e.decode = function (t) {
              for (
                var e = {}, n = t.split('&'), r = 0, o = n.length;
                r < o;
                r++
              ) {
                var i = n[r].split('=')
                e[decodeURIComponent(i[0])] = decodeURIComponent(i[1])
              }
              return e
            })
        },
        function (t, e) {
          t.exports = function (t, e) {
            function n() {}
            ;(n.prototype = e.prototype),
              (t.prototype = new n()),
              (t.prototype.constructor = t)
          }
        },
        function (t, e) {
          'use strict'
          function n(t) {
            for (
              var e = '';
              (e = i[t % s] + e), (t = Math.floor(t / s)), 0 < t;

            );
            return e
          }
          function r() {
            var t = n(+new Date())
            return t !== o ? ((c = 0), (o = t)) : t + '.' + n(c++)
          }
          for (
            var o,
              i =
                '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(
                  ''
                ),
              s = 64,
              a = {},
              c = 0,
              p = 0;
            p < s;
            p++
          )
            a[i[p]] = p
          ;(r.encode = n),
            (r.decode = function (t) {
              var e = 0
              for (p = 0; p < t.length; p++) e = e * s + a[t.charAt(p)]
              return e
            }),
            (t.exports = r)
        },
        function (s, t, a) {
          ;(function (n) {
            function r() {}
            function t(t) {
              o.call(this, t),
                (this.query = this.query || {}),
                i ||
                  ((t =
                    'undefined' != typeof self
                      ? self
                      : 'undefined' != typeof window
                      ? window
                      : void 0 !== n
                      ? n
                      : {}),
                  (i = t.___eio = t.___eio || [])),
                (this.index = i.length)
              var e = this
              i.push(function (t) {
                e.onData(t)
              }),
                (this.query.j = this.index),
                'function' == typeof addEventListener &&
                  addEventListener(
                    'beforeunload',
                    function () {
                      e.script && (e.script.onerror = r)
                    },
                    !1
                  )
            }
            var o = a(22),
              e = a(33)
            s.exports = t
            var i,
              p = /\n/g,
              u = /\\n/g
            e(t, o),
              (t.prototype.supportsBinary = !1),
              (t.prototype.doClose = function () {
                this.script &&
                  (this.script.parentNode.removeChild(this.script),
                  (this.script = null)),
                  this.form &&
                    (this.form.parentNode.removeChild(this.form),
                    (this.form = null),
                    (this.iframe = null)),
                  o.prototype.doClose.call(this)
              }),
              (t.prototype.doPoll = function () {
                var e = this,
                  t = document.createElement('script')
                this.script &&
                  (this.script.parentNode.removeChild(this.script),
                  (this.script = null)),
                  (t.async = !0),
                  (t.src = this.uri()),
                  (t.onerror = function (t) {
                    e.onError('jsonp poll error', t)
                  })
                var n = document.getElementsByTagName('script')[0]
                n
                  ? n.parentNode.insertBefore(t, n)
                  : (document.head || document.body).appendChild(t),
                  (this.script = t),
                  'undefined' != typeof navigator &&
                    /gecko/i.test(navigator.userAgent) &&
                    setTimeout(function () {
                      var t = document.createElement('iframe')
                      document.body.appendChild(t), document.body.removeChild(t)
                    }, 100)
              }),
              (t.prototype.doWrite = function (t, e) {
                function n() {
                  r(), e()
                }
                function r() {
                  if (c.iframe)
                    try {
                      c.form.removeChild(c.iframe)
                    } catch (t) {
                      c.onError('jsonp polling iframe removal error', t)
                    }
                  try {
                    var t =
                      '<iframe src="javascript:0" name="' + c.iframeId + '">'
                    o = document.createElement(t)
                  } catch (t) {
                    ;((o = document.createElement('iframe')).name = c.iframeId),
                      (o.src = 'javascript:0')
                  }
                  ;(o.id = c.iframeId), c.form.appendChild(o), (c.iframe = o)
                }
                var o,
                  i,
                  s,
                  a,
                  c = this
                this.form ||
                  ((i = document.createElement('form')),
                  (s = document.createElement('textarea')),
                  (a = this.iframeId = 'eio_iframe_' + this.index),
                  (i.className = 'socketio'),
                  (i.style.position = 'absolute'),
                  (i.style.top = '-1000px'),
                  (i.style.left = '-1000px'),
                  (i.target = a),
                  (i.method = 'POST'),
                  i.setAttribute('accept-charset', 'utf-8'),
                  (s.name = 'd'),
                  i.appendChild(s),
                  document.body.appendChild(i),
                  (this.form = i),
                  (this.area = s)),
                  (this.form.action = this.uri()),
                  r(),
                  (t = t.replace(u, '\\\n')),
                  (this.area.value = t.replace(p, '\\n'))
                try {
                  this.form.submit()
                } catch (t) {}
                this.iframe.attachEvent
                  ? (this.iframe.onreadystatechange = function () {
                      'complete' === c.iframe.readyState && n()
                    })
                  : (this.iframe.onload = n)
              })
          }.call(
            t,
            (function () {
              return this
            })()
          ))
        },
        function (t, e, n) {
          function r(t) {
            t && t.forceBase64 && (this.supportsBinary = !1),
              (this.perMessageDeflate = t.perMessageDeflate),
              (this.usingBrowserWebSocket = o && !t.forceNode),
              (this.protocols = t.protocols),
              this.usingBrowserWebSocket || (f = i),
              s.call(this, t)
          }
          var o,
            i,
            s = n(23),
            a = n(24),
            c = n(32),
            p = n(33),
            u = n(34),
            h = n(3)('engine.io-client:websocket')
          if (
            ('undefined' != typeof WebSocket
              ? (o = WebSocket)
              : 'undefined' != typeof self &&
                (o = self.WebSocket || self.MozWebSocket),
            'undefined' == typeof window)
          )
            try {
              i = n(37)
            } catch (t) {}
          var f = o || i
          p((t.exports = r), s),
            (r.prototype.name = 'websocket'),
            (r.prototype.supportsBinary = !0),
            (r.prototype.doOpen = function () {
              if (this.check()) {
                var t = this.uri(),
                  e = this.protocols,
                  n = {
                    agent: this.agent,
                    perMessageDeflate: this.perMessageDeflate
                  }
                ;(n.pfx = this.pfx),
                  (n.key = this.key),
                  (n.passphrase = this.passphrase),
                  (n.cert = this.cert),
                  (n.ca = this.ca),
                  (n.ciphers = this.ciphers),
                  (n.rejectUnauthorized = this.rejectUnauthorized),
                  this.extraHeaders && (n.headers = this.extraHeaders),
                  this.localAddress && (n.localAddress = this.localAddress)
                try {
                  this.ws =
                    this.usingBrowserWebSocket && !this.isReactNative
                      ? e
                        ? new f(t, e)
                        : new f(t)
                      : new f(t, e, n)
                } catch (t) {
                  return this.emit('error', t)
                }
                void 0 === this.ws.binaryType && (this.supportsBinary = !1),
                  this.ws.supports && this.ws.supports.binary
                    ? ((this.supportsBinary = !0),
                      (this.ws.binaryType = 'nodebuffer'))
                    : (this.ws.binaryType = 'arraybuffer'),
                  this.addEventListeners()
              }
            }),
            (r.prototype.addEventListeners = function () {
              var e = this
              ;(this.ws.onopen = function () {
                e.onOpen()
              }),
                (this.ws.onclose = function () {
                  e.onClose()
                }),
                (this.ws.onmessage = function (t) {
                  e.onData(t.data)
                }),
                (this.ws.onerror = function (t) {
                  e.onError('websocket error', t)
                })
            }),
            (r.prototype.write = function (t) {
              var r = this
              this.writable = !1
              for (var o = t.length, e = 0, n = o; e < n; e++)
                !(function (n) {
                  a.encodePacket(n, r.supportsBinary, function (t) {
                    var e
                    r.usingBrowserWebSocket ||
                      ((e = {}),
                      n.options && (e.compress = n.options.compress),
                      !r.perMessageDeflate ||
                        (('string' == typeof t
                          ? Buffer.byteLength(t)
                          : t.length) < r.perMessageDeflate.threshold &&
                          (e.compress = !1)))
                    try {
                      r.usingBrowserWebSocket ? r.ws.send(t) : r.ws.send(t, e)
                    } catch (t) {
                      h('websocket closed before onclose event')
                    }
                    --o ||
                      (r.emit('flush'),
                      setTimeout(function () {
                        ;(r.writable = !0), r.emit('drain')
                      }, 0))
                  })
                })(t[e])
            }),
            (r.prototype.onClose = function () {
              s.prototype.onClose.call(this)
            }),
            (r.prototype.doClose = function () {
              void 0 !== this.ws && this.ws.close()
            }),
            (r.prototype.uri = function () {
              var t = this.query || {},
                e = this.secure ? 'wss' : 'ws',
                n = ''
              return (
                this.port &&
                  (('wss' == e && 443 !== Number(this.port)) ||
                    ('ws' == e && 80 !== Number(this.port))) &&
                  (n = ':' + this.port),
                this.timestampRequests && (t[this.timestampParam] = u()),
                this.supportsBinary || (t.b64 = 1),
                (t = c.encode(t)).length && (t = '?' + t),
                e +
                  '://' +
                  (-1 !== this.hostname.indexOf(':')
                    ? '[' + this.hostname + ']'
                    : this.hostname) +
                  n +
                  this.path +
                  t
              )
            }),
            (r.prototype.check = function () {
              return !(
                !f ||
                ('__initialize' in f && this.name === r.prototype.name)
              )
            })
        },
        function (t, e) {},
        function (t, e) {
          var r = [].indexOf
          t.exports = function (t, e) {
            if (r) return t.indexOf(e)
            for (var n = 0; n < t.length; ++n) if (t[n] === e) return n
            return -1
          }
        },
        function (t, e, n) {
          function r(t, e, n) {
            ;(this.io = t),
              (this.nsp = e),
              ((this.json = this).ids = 0),
              (this.acks = {}),
              (this.receiveBuffer = []),
              (this.sendBuffer = []),
              (this.connected = !1),
              (this.disconnected = !0),
              (this.flags = {}),
              n && n.query && (this.query = n.query),
              this.io.autoConnect && this.open()
          }
          var o = n(7),
            i = n(11),
            s = n(40),
            a = n(41),
            c = n(42),
            p = n(3)('socket.io-client:socket'),
            u = n(32),
            h = n(26)
          t.exports = r
          var f = {
              connect: 1,
              connect_error: 1,
              connect_timeout: 1,
              connecting: 1,
              disconnect: 1,
              error: 1,
              reconnect: 1,
              reconnect_attempt: 1,
              reconnect_failed: 1,
              reconnect_error: 1,
              reconnecting: 1,
              ping: 1,
              pong: 1
            },
            l = i.prototype.emit
          i(r.prototype),
            (r.prototype.subEvents = function () {
              var t
              this.subs ||
                ((t = this.io),
                (this.subs = [
                  a(t, 'open', c(this, 'onopen')),
                  a(t, 'packet', c(this, 'onpacket')),
                  a(t, 'close', c(this, 'onclose'))
                ]))
            }),
            (r.prototype.open = r.prototype.connect =
              function () {
                return (
                  this.connected ||
                    (this.subEvents(),
                    this.io.open(),
                    'open' === this.io.readyState && this.onopen(),
                    this.emit('connecting')),
                  this
                )
              }),
            (r.prototype.send = function () {
              var t = s(arguments)
              return t.unshift('message'), this.emit.apply(this, t), this
            }),
            (r.prototype.emit = function (t) {
              if (f.hasOwnProperty(t)) return l.apply(this, arguments), this
              var e = s(arguments),
                n = {
                  type: (
                    void 0 !== this.flags.binary ? this.flags.binary : h(e)
                  )
                    ? o.BINARY_EVENT
                    : o.EVENT,
                  data: e,
                  options: {}
                }
              return (
                (n.options.compress =
                  !this.flags || !1 !== this.flags.compress),
                'function' == typeof e[e.length - 1] &&
                  (p('emitting packet with ack id %d', this.ids),
                  (this.acks[this.ids] = e.pop()),
                  (n.id = this.ids++)),
                this.connected ? this.packet(n) : this.sendBuffer.push(n),
                (this.flags = {}),
                this
              )
            }),
            (r.prototype.packet = function (t) {
              ;(t.nsp = this.nsp), this.io.packet(t)
            }),
            (r.prototype.onopen = function () {
              var t
              p('transport is open - connecting'),
                '/' !== this.nsp &&
                  (this.query
                    ? ((t =
                        'object' == typeof this.query
                          ? u.encode(this.query)
                          : this.query),
                      p('sending connect packet with query %s', t),
                      this.packet({ type: o.CONNECT, query: t }))
                    : this.packet({ type: o.CONNECT }))
            }),
            (r.prototype.onclose = function (t) {
              p('close (%s)', t),
                (this.connected = !1),
                (this.disconnected = !0),
                delete this.id,
                this.emit('disconnect', t)
            }),
            (r.prototype.onpacket = function (t) {
              var e = t.nsp === this.nsp,
                n = t.type === o.ERROR && '/' === t.nsp
              if (e || n)
                switch (t.type) {
                  case o.CONNECT:
                    this.onconnect()
                    break
                  case o.EVENT:
                  case o.BINARY_EVENT:
                    this.onevent(t)
                    break
                  case o.ACK:
                  case o.BINARY_ACK:
                    this.onack(t)
                    break
                  case o.DISCONNECT:
                    this.ondisconnect()
                    break
                  case o.ERROR:
                    this.emit('error', t.data)
                }
            }),
            (r.prototype.onevent = function (t) {
              var e = t.data || []
              p('emitting event %j', e),
                null != t.id &&
                  (p('attaching ack callback to event'),
                  e.push(this.ack(t.id))),
                this.connected ? l.apply(this, e) : this.receiveBuffer.push(e)
            }),
            (r.prototype.ack = function (e) {
              var n = this,
                r = !1
              return function () {
                var t
                r ||
                  ((r = !0),
                  (t = s(arguments)),
                  p('sending ack %j', t),
                  n.packet({
                    type: h(t) ? o.BINARY_ACK : o.ACK,
                    id: e,
                    data: t
                  }))
              }
            }),
            (r.prototype.onack = function (t) {
              var e = this.acks[t.id]
              'function' == typeof e
                ? (p('calling ack %s with %j', t.id, t.data),
                  e.apply(this, t.data),
                  delete this.acks[t.id])
                : p('bad ack %s', t.id)
            }),
            (r.prototype.onconnect = function () {
              ;(this.connected = !0),
                (this.disconnected = !1),
                this.emit('connect'),
                this.emitBuffered()
            }),
            (r.prototype.emitBuffered = function () {
              for (var t = 0; t < this.receiveBuffer.length; t++)
                l.apply(this, this.receiveBuffer[t])
              for (
                this.receiveBuffer = [], t = 0;
                t < this.sendBuffer.length;
                t++
              )
                this.packet(this.sendBuffer[t])
              this.sendBuffer = []
            }),
            (r.prototype.ondisconnect = function () {
              p('server disconnect (%s)', this.nsp),
                this.destroy(),
                this.onclose('io server disconnect')
            }),
            (r.prototype.destroy = function () {
              if (this.subs) {
                for (var t = 0; t < this.subs.length; t++)
                  this.subs[t].destroy()
                this.subs = null
              }
              this.io.destroy(this)
            }),
            (r.prototype.close = r.prototype.disconnect =
              function () {
                return (
                  this.connected &&
                    (p('performing disconnect (%s)', this.nsp),
                    this.packet({ type: o.DISCONNECT })),
                  this.destroy(),
                  this.connected && this.onclose('io client disconnect'),
                  this
                )
              }),
            (r.prototype.compress = function (t) {
              return (this.flags.compress = t), this
            }),
            (r.prototype.binary = function (t) {
              return (this.flags.binary = t), this
            })
        },
        function (t, e) {
          t.exports = function (t, e) {
            for (var n = [], r = (e = e || 0) || 0; r < t.length; r++)
              n[r - e] = t[r]
            return n
          }
        },
        function (t, e) {
          t.exports = function (t, e, n) {
            return (
              t.on(e, n),
              {
                destroy: function () {
                  t.removeListener(e, n)
                }
              }
            )
          }
        },
        function (t, e) {
          var r = [].slice
          t.exports = function (t, e) {
            if (('string' == typeof e && (e = t[e]), 'function' != typeof e))
              throw new Error('bind() requires a function')
            var n = r.call(arguments, 2)
            return function () {
              return e.apply(t, n.concat(r.call(arguments)))
            }
          }
        },
        function (t, e) {
          function n(t) {
            ;(t = t || {}),
              (this.ms = t.min || 100),
              (this.max = t.max || 1e4),
              (this.factor = t.factor || 2),
              (this.jitter = 0 < t.jitter && t.jitter <= 1 ? t.jitter : 0),
              (this.attempts = 0)
          }
          ;((t.exports = n).prototype.duration = function () {
            var t,
              e,
              n = this.ms * Math.pow(this.factor, this.attempts++)
            return (
              this.jitter &&
                ((t = Math.random()),
                (e = Math.floor(t * this.jitter * n)),
                (n = 0 == (1 & Math.floor(10 * t)) ? n - e : n + e)),
              0 | Math.min(n, this.max)
            )
          }),
            (n.prototype.reset = function () {
              this.attempts = 0
            }),
            (n.prototype.setMin = function (t) {
              this.ms = t
            }),
            (n.prototype.setMax = function (t) {
              this.max = t
            }),
            (n.prototype.setJitter = function (t) {
              this.jitter = t
            })
        }
      ]),
    (n.c = o),
    (n.p = ''),
    n(0)
  )
  function n(t) {
    if (o[t]) return o[t].exports
    var e = (o[t] = { exports: {}, id: t, loaded: !1 })
    return r[t].call(e.exports, e, e.exports, n), (e.loaded = !0), e.exports
  }
  var r, o
})
function IceServer(s, t, i) {
  ;(this.uri = void 0),
    (this.username = void 0),
    (this.password = void 0),
    (this.__construct = function () {
      ;(this.uri = s),
        (this.username = null == t ? '' : t),
        (this.password = null == i ? '' : i)
    }),
    (this.getUri = function () {
      return this.uri
    }),
    (this.setUri = function (s) {
      this.uri = s
    }),
    (this.getPassword = function () {
      return this.password
    }),
    (this.setPassword = function (s) {
      this.password = s
    }),
    (this.setUsername = function (s) {
      this.username = s
    }),
    (this.getUsername = function () {
      return this.username
    }),
    (this.getIceServer = function () {
      return {
        urls: this.uri,
        username: this.username,
        credential: this.password
      }
    }),
    this.__construct()
}
function PeerSession(e, n, t, o) {
  var s = this
  ;(this.DATA_CHANNEL_ID = 1),
    (this.id = PeerSession.getId(e, n, t)),
    (this.room = void 0),
    (this.isCaller = void 0),
    (this.targetUser = void 0),
    (this.peerName = void 0),
    (this.peerConnection = void 0),
    (this.peerConnectionObserve = void 0),
    (this.sdpObserver = void 0),
    (this.localStreamHandler = void 0),
    (this.localDataChannel = void 0),
    (this.remoteDataChannel = void 0),
    (this.localBinaryDataChannel = void 0),
    (this.remoteBinaryDataChannel = void 0),
    (this.remoteTracks = []),
    (this.queuedRemoteCandidates = void 0),
    (this.recorder = void 0),
    (this.isError = !1),
    (this.__construct = function () {
      ;(this.room = e),
        (this.targetUser = n),
        (this.isCaller = o),
        (this.peerName = t)
    }),
    (this.getRoom = function () {
      return this.room
    }),
    (this.getTargetUser = function () {
      return this.targetUser
    }),
    (this.getPeerName = function () {
      return this.peerName
    }),
    (this.setLocalStreamHandler = function (e) {
      this.localStreamHandler = e
    }),
    (this.clearPeerSession = function () {
      ;(this.peerConnection = void 0),
        (this.remoteTracks = []),
        (this.queuedRemoteCandidates = void 0)
    }),
    (this.initPeerConnection = function (e, n) {
      ;(this.queuedRemoteCandidates = []),
        (this.peerConnection = new RTCPeerConnection({ iceServers: e })),
        (this.peerConnection.ontrack = this.onTrack.bind(this)),
        (this.peerConnection.oniceconnectionstatechange =
          this.onIceConnectionStateChange.bind(this)),
        (this.peerConnection.onicecandidate = this.onIceCandidate.bind(this)),
        (this.peerConnection.ondatachannel = this.onDataChannel.bind(this))
      try {
        ;(this.localDataChannel =
          this.peerConnection.createDataChannel('from_js')),
          (this.localDataChannel.onopen = this.onMessageDataChannelOpen),
          (this.localDataChannel.onclose = this.onMessageDataChannelClose),
          (this.localBinaryDataChannel =
            this.peerConnection.createDataChannel('binary_dc')),
          (this.localBinaryDataChannel.binaryType = 'arraybuffer'),
          (this.localBinaryDataChannel.onopen = this.onBinaryDataChannelOpen),
          (this.localBinaryDataChannel.onclose = this.onBinaryDataChannelClose)
      } catch (e) {
        Log.error(
          'PeerSession:initPeerConnection - peerSessionId:' + s.id,
          e.message
        ),
          s.onSystemDataChannelError(e)
      }
      this.localStreamHandler.getStream(n) &&
        this.peerConnection.addStream(this.localStreamHandler.getStream(n)),
        Log.info(
          'PeerSession:initPeerConnection - peerSessionId:' + s.id,
          INFO_PEER_SESSION_INITIALIZED
        )
    }),
    (this.addStream = function (e) {
      s.peerConnection.addStream(e)
    }),
    (this.onMessageDataChannelOpen = function (e) {
      Log.info(
        'PeerSession:onMessageDataChannelOpen - peerSessionId:' + s.id,
        INFO_DATACHANNEL_OPENED
      ),
        messageListener.onOpen(s.room, s.targetUser)
    }),
    (this.onMessageDataChannelClose = function (e) {
      Log.info(
        'PeerSession:onMessageDataChannelClose - peerSessionId:' + s.id,
        INFO_DATACHANNEL_CLOSED
      ),
        messageListener.onClose(s.room, s.targetUser)
    }),
    (this.onMessageDataChannelMessage = function (n) {
      Log.debug(
        'PeerSession:onMessageDataChannelMessage - peerSessionId:' + s.id,
        n.data
      )
      try {
        var e = JSON.parse(n.data)
        'stream_changed_offer' == e.event
          ? s.onRenegotiation(e.data, !0)
          : 'stream_changed_answer' == e.event
          ? s.onRenegotiation(e.data, !1)
          : messageListener.onMessage(s.room, s.targetUser, n.data)
      } catch (e) {
        messageListener.onMessage(s.room, s.targetUser, n.data)
      }
    }),
    (this.onBinaryDataChannelOpen = function (e) {
      Log.info(
        'PeerSession:onBinaryDataChannelOpen - peerSessionId:' + s.id,
        INFO_DATACHANNEL_OPENED
      ),
        dataListener.onOpen(s.room, s.targetUser)
    }),
    (this.onBinaryDataChannelClose = function (e) {
      Log.info(
        'PeerSession:onBinaryDataChannelClose - peerSessionId:' + s.id,
        INFO_DATACHANNEL_CLOSED
      ),
        dataListener.onClose(s.room, s.targetUser)
    }),
    (this.onBinaryDataChannelMessage = function (e) {
      Log.debug(
        'PeerSession:onBinaryDataChannelMessage - peerSessionId:' + s.id,
        e
      ),
        dataListener.onData(s.room, s.targetUser, e)
    }),
    (this.onMessageDataChannelError = function (e) {
      Log.error(
        'PeerSession:onMessageDataChannelError - peerSessionId:' + s.id,
        ERROR_DATACHANNEL_ERROR + ' msg:' + e
      ),
        messageListener.onError(s.room, s.targetUser, e)
    }),
    (this.onIceConnectionStateChange = function (e) {
      this.peerConnectionObserve &&
        this.peerConnectionObserve.onIceConnectionChange(this.id, e)
    }),
    (this.onIceCandidate = function (e) {
      this.peerConnectionObserve &&
        this.peerConnectionObserve.onIceCandidate(this.id, e)
    }),
    (this.onTrack = function (e) {
      s.localStreamHandler.compareTracks(
        e.streams[0].getTracks(),
        s.remoteTracks
      ) ||
        ((s.remoteTracks = e.streams[0].getTracks()),
        streamListener.onRemoteStreamChanged(
          s.room,
          s.targetUser,
          e.streams[0]
        ))
    }),
    (this.onDataChannel = function (e) {
      'from_js' == e.channel.label
        ? ((this.remoteDataChannel = e.channel),
          (this.remoteDataChannel.onmessage = this.onMessageDataChannelMessage))
        : 'binary_dc' == e.channel.label &&
          ((this.remoteBinaryDataChannel = e.channel),
          (this.remoteBinaryDataChannel.binaryType = 'arraybuffer'),
          (this.remoteBinaryDataChannel.onmessage =
            this.onBinaryDataChannelMessage)),
        Log.info(
          'PeerSession:onDataChannel - ' +
            e.channel.label +
            ' - peerSessionId:' +
            s.id,
          INFO_DATACHANNEL_CREATED
        )
    }),
    (this.releasePeerConnection = function (e) {
      if (null != this.peerConnection) {
        if (e)
          for (i = 0; i < e.length; i++)
            e[i] && this.peerConnection.removeStream(e[i])
        this.peerConnection.close(), (this.peerConnection = void 0)
      }
      ;(this.remoteRenderProxy = void 0), this.clearPeerSession()
    }),
    (this.isPeerConnectionReady = function () {
      return null != this.peerConnection
    }),
    (this.setPeerConnectionObserver = function (e) {
      this.peerConnectionObserve = e
    }),
    (this.setSdpObserver = function (e) {
      this.sdpObserver = e
    }),
    (this.setLocalDescription = function (e) {
      null != this.peerConnection &&
        this.peerConnection
          .setLocalDescription(e)
          .then(function () {
            s.sdpObserver.onSetLocalDescriptionSuccess(s.id)
          })
          .catch(function (e) {
            Log.error(
              'PeerSession:setLocalDescription - peerSessionId:' + s.id,
              e.message
            ),
              s.sdpObserver.onSetLocalDescriptionFailed(s.id, e.message)
          })
    }),
    (this.getLocalDescription = function () {
      return this.peerConnection.localDescription
    }),
    (this.hasLocalDescription = function () {
      return (
        null != this.peerConnection.localDescription &&
        '' != this.peerConnection.localDescription.type &&
        '' != this.peerConnection.localDescription.description &&
        null != this.peerConnection.localDescription
      )
    }),
    (this.setRemoteDescription = function (e) {
      null != this.peerConnection &&
        this.peerConnection
          .setRemoteDescription(e)
          .then(function () {
            s.sdpObserver.onSetRemoteDescriptionSuccess(s.id)
          })
          .catch(function (e) {
            Log.error(
              'PeerSession:setRemoteDescription - peerSessionId:' + s.id,
              e.message
            ),
              s.sdpObserver.onSetRemoteDescriptionFailed(s.id, e.message)
          })
    }),
    (this.hasRemoteDescription = function () {
      return null != this.peerConnection.remoteDescription
    }),
    (this.createOffer = function () {
      null != this.peerConnection &&
        this.peerConnection
          .createOffer({ offerToReceiveAudio: 1, offerToReceiveVideo: 1 })
          .then(function (e) {
            s.sdpObserver.onCreateSdpSuccess(s.id, e)
          })
          .catch(function (e) {
            Log.error(
              'PeerSession:createOffer - peerSessionId:' + s.id,
              e.message
            ),
              s.sdpObserver.onCreateSdpFailed(s.id, e.message)
          })
    }),
    (this.createAnswer = function () {
      null != this.peerConnection &&
        this.peerConnection
          .createAnswer()
          .then(function (e) {
            s.sdpObserver.onCreateSdpSuccess(s.id, e)
          })
          .catch(function (e) {
            Log.error(
              'PeerSession:createAnswer - peerSessionId:' + s.id,
              e.message
            ),
              s.sdpObserver.onCreateSdpFailed(s.id, e.message)
          })
    }),
    (this.addIceCandidate = function (e) {
      null != this.queuedRemoteCandidates
        ? this.queuedRemoteCandidates.push(e)
        : this.peerConnection.addIceCandidate(e)
    }),
    (this.removeIceCandidate = function (e) {
      this.peerConnection.removeIceCandidate(e)
    }),
    (this.drainCandidates = function () {
      null != this.queuedRemoteCandidates &&
        (this.queuedRemoteCandidates.forEach(function (e) {
          s.peerConnection.addIceCandidate(e)
        }),
        (this.queuedRemoteCandidates = void 0))
    }),
    (this.getRemoteStream = function () {
      if (this.peerConnection) return this.peerConnection.getRemoteStreams()[0]
    }),
    (this.sendMessage = function (e) {
      this.localDataChannel &&
        'open' == this.localDataChannel.readyState &&
        (this.localDataChannel.send(e),
        Log.debug('PeerSession:sendMessage - peerSessionId:' + this.id, e))
    }),
    (this.sendData = function (e) {
      this.localBinaryDataChannel &&
        'open' == this.localBinaryDataChannel.readyState &&
        (this.localBinaryDataChannel.send(e),
        Log.debug('PeerSession:sendData - peerSessionId:' + this.id, e))
    }),
    (this.sendBuffer = function (e) {
      this.localBinaryDataChannel &&
        'open' == this.localBinaryDataChannel.readyState &&
        (this.localBinaryDataChannel.send(e),
        Log.debug('PeerSession:sendBuffer - peerSessionId:' + this.id, msg))
    }),
    (this.isCaller = function () {
      return o
    }),
    (this.getStats = function () {
      if (null != this.peerConnection)
        return Stats.getStats(this.id, this.peerConnection)
    }),
    (this.renegotiation = function () {
      null != this.peerConnection &&
        this.peerConnection
          .createOffer({ offerToReceiveAudio: 1, offerToReceiveVideo: 1 })
          .then(function (e) {
            return (
              s.sendMessage(
                JSON.stringify({ event: 'stream_changed_offer', data: e })
              ),
              s.peerConnection.setLocalDescription(e)
            )
          })
          .catch(function (e) {
            Log.error(
              'PeerSession:renegotiation - peerSessionId:' + this.id,
              'Create offer failed: ' + e.message
            )
          })
    }),
    (this.onRenegotiation = function (e, n) {
      var t
      null != this.peerConnection &&
        null != e &&
        (n
          ? ((t =
              null == s.localStreamHandler
                ? e
                : new RTCSessionDescription({
                    type: e.type,
                    sdp: s.localStreamHandler.getSdp(e.sdp, this.peerName)
                  })),
            this.peerConnection
              .setRemoteDescription(t)
              .then(function (e) {
                s.peerConnection.createAnswer().then(function (e) {
                  s.sendMessage(
                    JSON.stringify({ event: 'stream_changed_answer', data: e })
                  ),
                    s.peerConnection.setLocalDescription(e)
                })
              })
              .catch(function (e) {
                Log.error(
                  'PeerSession:onRenegotiation - peerSessionId:' + this.id,
                  'Error occur when set remote description: ' + e.message
                )
              }))
          : ((t =
              null == s.localStreamHandler
                ? e
                : new RTCSessionDescription({
                    type: e.type,
                    sdp: s.localStreamHandler.getSdp(e.sdp, this.peerName)
                  })),
            this.peerConnection
              .setRemoteDescription(t)
              .then(function (e) {})
              .catch(function (e) {
                Log.error(
                  'PeerSession:onRenegotiation - peerSessionId:' + this.id,
                  'Error occur when set remote description: ' + e.message
                )
              })))
    }),
    this.__construct()
}
PeerSession.getId = function (e, n, t) {
  if (void 0 !== n) return e.getRoomName() + n.getUID() + '_' + t
}
function Room(t) {
  ;(this.roomName = void 0),
    (this.myUser = void 0),
    (this.members = []),
    (this.info = void 0),
    (this.callingTargets = []),
    (this.__construct = function () {
      this.roomName = t
    }),
    (this.setRoomName = function (t) {
      this.roomName = t
    }),
    (this.getRoomName = function () {
      return this.roomName
    }),
    (this.setMyUser = function (t) {
      this.myUser = t
    }),
    (this.getMyUser = function () {
      return this.myUser
    }),
    (this.getMembers = function () {
      return this.members
    }),
    (this.getMember = function (e) {
      var i = void 0
      return (
        this.members.forEach(function (t) {
          t.getUID() == e && (i = t)
        }),
        i
      )
    }),
    (this.addMember = function (e) {
      var i = !1
      this.members.forEach(function (t) {
        e.equals(t) &&
          ((i = !0),
          t.update(e.getName(), e.getInfo()),
          e.equals(this.myUser) && (this.myUser = e))
      }),
        i || this.members.push(e)
    }),
    (this.removeMember = function (t) {
      for (var e = 0; e < this.members.length; e++)
        if (this.members[e].equals(t)) {
          this.members.splice(e, 1)
          break
        }
      delete this.callingTargets[t.getUID]
    }),
    (this.changeMemberStatus = function (t, e) {
      t.setStatus(e)
    }),
    (this.getInfo = function () {
      return this.info
    }),
    (this.setInfo = function (t) {
      this.info = t
    }),
    (this.addCallingTarget = function (t) {
      this.callingTargets[t.getUID()] = t
    }),
    (this.removeCallingTarget = function (t) {
      delete this.callingTargets[t.getUID()]
    }),
    (this.getCallingTarget = function (t) {
      return this.callingTargets[t]
    }),
    (this.getCallingTargets = function () {
      return this.callingTargets
    }),
    (this.equals = function (t) {
      return null != t && t instanceof Room && this.roomName == t.getRoomName()
    }),
    (this.updateUserInfo = function (t, e, i) {
      this.myUser.equals(t) && this.myUser.updateInfo(e, i)
      for (var s = 0; s < this.members.length; s++)
        if (this.members[s].equals(t)) {
          this.members[s].updateInfo(e, i)
          break
        }
    }),
    (this.updateRoomInfo = function (t, e) {
      null == this.info && (this.info = {}), (this.info[t] = e)
    }),
    this.__construct()
}
function User(t, i, s, n, h, u) {
  ;(this.socketID = void 0),
    (this.name = void 0),
    (this.uid = void 0),
    (this.status = void 0),
    (this.info = void 0),
    (this.__construct = function () {
      null != u
        ? ((this.name = u.nick_name),
          (this.socketID = u.socket_id),
          (this.uid = u.uid),
          (this.status = parseInt(u.status)),
          (this.info = u.info))
        : ((this.name = t),
          (this.socketID = i),
          (this.uid = s),
          (this.status = parseInt(n)),
          (this.info = h))
    }),
    (this.setStatus = function (t) {
      this.status = parseInt(t)
    }),
    (this.getStatus = function () {
      return this.status
    }),
    (this.getName = function () {
      return this.name
    }),
    (this.setName = function (t) {
      this.name = t
    }),
    (this.getSocketID = function () {
      return this.socketID
    }),
    (this.setSocketID = function (t) {
      this.socketID = t
    }),
    (this.equals = function (t) {
      return null != t && null != t && t instanceof User && t.uid == this.uid
    }),
    (this.getUID = function () {
      return this.uid
    }),
    (this.setUID = function (t) {
      this.uid = t
    }),
    (this.getInfo = function () {
      return this.info
    }),
    (this.setInfo = function (t) {
      this.info = t
    }),
    (this.updateInfo = function (t, i) {
      this.info || (this.info = {}), (this.info[t] = i)
    }),
    (this.update = function (t, i) {
      ;(this.name = t), (this.info = i)
    }),
    this.__construct()
}
;(User.STATUS_OFFLINE = 0), (User.STATUS_ONLINE = 1)
var Bandwidth = {
  findIndexOfMediaInSdp: function (n, i) {
    var d = 0,
      e = n.length - 1,
      r = Sdp.findMediaDescriptionLine(n)
    if (i) {
      if (-1 == r[0])
        return (
          Log.warn(
            'Bandwidth:findIndexOfMediaInSdp',
            WARN_SDP_NO_AUDIO_DES_LINE
          ),
          sdpDescription
        )
      ;(d = r[0]),
        r[1] > r[0] && (e = r[2] > r[0] && r[2] < r[1] ? r[2] : r[1]),
        r[2] > r[0] && (e = r[1] > r[0] && r[1] < r[2] ? r[1] : r[2])
    } else {
      if (-1 == r[1])
        return (
          Log.warn(
            'Bandwidth:findIndexOfMediaInSdp',
            WARN_SDP_NO_VIDEO_DES_LINE
          ),
          sdpDescription
        )
      ;(d = r[1]),
        r[0] > r[1] && (e = r[2] > r[1] && r[2] < r[0] ? r[2] : r[0]),
        r[2] > r[1] && (e = r[0] > r[1] && r[0] < r[2] ? r[0] : r[2])
    }
    return { start_index: d, end_index: e }
  },
  updateBandwidthRestriction: function (n, i, d) {
    if (
      (Log.info('Bandwidth:updateBandwidthRestriction', 'isAudio:' + d),
      null == n)
    )
      return n
    var e = n.split('\r\n'),
      n = Bandwidth.findIndexOfMediaInSdp(e, d),
      d = n.start_index,
      r = n.end_index,
      t = 'AS'
    'firefox' === adapter.browserDetails.browser &&
      ((i = 1e3 * (i >>> 0)), (t = 'TIAS'))
    for (var a = !1, f = d, o = d; o <= r; o++) {
      if (-1 !== e[o].indexOf('b=' + t + ':')) {
        ;(e[o] = 'b=' + t + ':' + i), (a = !0)
        break
      }
      ;-1 !== e[o].indexOf('c=IN') && (f = o)
    }
    return (
      a || e.splice(f + 1, 0, 'b=' + t + ':' + i), Sdp.joinString(e, '\r\n', !0)
    )
  },
  removeBandwidthRestriction: function (n, i) {
    if (
      (Log.info('Bandwidth:removeBandwidthRestriction', 'isAudio:' + i),
      null == n)
    )
      return n
    for (
      var d = n.split('\r\n'),
        n = Bandwidth.findIndexOfMediaInSdp(d, i),
        i = n.start_index,
        e = n.end_index,
        r = i;
      r <= e;
      r++
    )
      if (-1 !== d[r].indexOf('b=')) {
        d.splice(r, 1)
        break
      }
    return Sdp.joinString(d, '\r\n', !0)
  }
}
var Browser = (function () {
  return (
    (this.isSafari = function () {
      return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
    }),
    (this.getUserAgent = function () {
      return window.navigator.userAgent
    }),
    { isSafari: this.isSafari, getOS: this.getUserAgent }
  )
})()
var Codec = {
  movePayloadTypesToFront: function (e, n) {
    var r = n.split(' ')
    if (r.length < 4)
      return (
        Log.warn(
          'Codec-movePayloadTypesToFront',
          WARN_SDP_MEDIA_DES_FORMAT + ':' + n
        ),
        null
      )
    ;(n = r.slice(0, 3)),
      (r = (r = r.slice(3, r.length)).filter(function (n) {
        return -1 == e.indexOf(n)
      }))
    return (
      (newLineParts = []),
      (newLineParts = newLineParts.concat(n)),
      (newLineParts = newLineParts.concat(e)),
      (newLineParts = newLineParts.concat(r)),
      Sdp.joinString(newLineParts, ' ', !1)
    )
  },
  preferCodec: function (n, e, r) {
    if (null == n) return n
    var t = n.split('\r\n'),
      r = Sdp.findMediaDescriptionLine(t)[r ? 0 : 1]
    if (-1 == r)
      return Log.warn('Codec:preferCodec', WARN_SDP_NO_MEDIA_DES_LINE), n
    var a = [],
      o = new RegExp('^a=rtpmap:(\\d+) ' + e + '(/\\d+)+[\r]?$')
    if (
      (t.forEach(function (n) {
        ;(match = o.exec(n)), null != match && a.push(match[1])
      }),
      0 == a.length)
    )
      return (
        Log.warn('Codec:preferCodec', WARN_SDP_CODEC_NO_PAYLOAD_TYPE + ':' + e),
        n
      )
    e = Codec.movePayloadTypesToFront(a, t[r])
    return null == e ? n : ((t[r] = e), Sdp.joinString(t, '\r\n', !0))
  },
  enableConstantBitrate: function (n) {
    return (n = n.replace('useinbandfec=1', 'cbr=1'))
  }
}
var LOG_INFO = 1,
  LOG_WARN = 2,
  LOG_ERROR = 4,
  LOG_DEBUG = 8,
  Log = (function () {
    function c(o, n, c) {
      return (
        new Date().toISOString() +
        ' [' +
        o +
        '] ' +
        (null != n ? '(' + n + ') ' : '') +
        c
      )
    }
    return {
      info: function (o, n) {
        0 != (logFlag & LOG_INFO) &&
          console.log('%c' + c('INFO', o, n), 'color: #339933')
      },
      warn: function (o, n) {
        0 != (logFlag & LOG_WARN) &&
          console.warn('%c' + c('WARN', o, n), 'color: #ffcc00')
      },
      error: function (o, n) {
        0 != (logFlag & LOG_ERROR) &&
          console.error('%c' + c('ERROR', o, n), 'color: #cc3300')
      },
      debug: function (o, n) {
        0 != (logFlag & LOG_DEBUG) &&
          console.debug('%c' + c('DEBUG', o, n), 'color: #000000')
      }
    }
  })()
var Sdp = {
  findMediaDescriptionLine: function (t) {
    for (var i = [-1, -1, -1], n = 0; n < t.length; n++)
      t[n].startsWith('m=audio') && (i[0] = n),
        t[n].startsWith('m=video') && (i[1] = n),
        t[n].startsWith('m=application') && (i[2] = n)
    return i
  },
  editCandidateDescription: function (t, i) {
    for (var n = t.split('\r\n'), r = n.length - 1; 0 <= r; r--) {
      var a = n[r]
      a.startsWith('a=candidate') &&
        1 == i &&
        a.includes('relay') &&
        n.splice(r, 1),
        2 == i &&
          a.startsWith('a=candidate') &&
          (a.includes('host') || a.includes('srflx') || a.includes('prflx')) &&
          n.splice(r, 1)
    }
    return this.joinString(n, '\r\n', !0)
  },
  joinString: function (t, i) {
    var n = ''
    n += t[0]
    for (var r = 1; r < t.length; r++) n += i + t[r]
    return n
  }
}
var Stats = (function () {
  var d = [],
    n = {
      inboundRtp: function (e, t) {
        var s, i
        'inbound-rtp' === t.type &&
          ((s = (t.timestamp - d[e].timestamp) / 1e3),
          (i = t.bytesReceived - d[e][t.mediaType].recv.bytesReceived),
          (d[e][t.mediaType].recv.speed = ((8 * i) / s / 1024).toFixed(2)),
          (d[e][t.mediaType].recv.bytesReceived = t.bytesReceived),
          (d[e][t.mediaType].recv.packetsLost = t.packetsLost))
      },
      outboundRtp: function (e, t) {
        var s, i
        'outbound-rtp' === t.type &&
          ((s = (t.timestamp - d[e].timestamp) / 1e3),
          (i = t.bytesSent - d[e][t.mediaType].send.bytesSent),
          (d[e][t.mediaType].send.speed = ((8 * i) / s / 1024).toFixed(2)),
          (d[e][t.mediaType].send.bytesSent = t.bytesSent))
      },
      transport: function (e, t) {
        var s, i, n
        'transport' === t.type &&
          ((s = (t.timestamp - d[e].timestamp) / 1e3),
          (i = t.bytesSent - d[e].traffic.send.bytesSent),
          (n = t.bytesReceived - d[e].traffic.recv.bytesReceived),
          (d[e].traffic.send.speed = ((8 * i) / s / 1024).toFixed(2)),
          (d[e].traffic.recv.speed = ((8 * n) / s / 1024).toFixed(2)),
          (d[e].traffic.send.bytesSent = t.bytesSent),
          (d[e].traffic.recv.bytesReceived = t.bytesReceived))
      }
    }
  return {
    getStats: function (i, e) {
      return e.getStats(null).then(function (e) {
        d[i] ||
          (d[i] = {
            audio: {
              send: { bytesSent: 0, speed: 0 },
              recv: { bytesReceived: 0, packetsLost: 0, speed: 0 }
            },
            video: {
              send: { bytesSent: 0, speed: 0 },
              recv: { bytesReceived: 0, packetsLost: 0, speed: 0 }
            },
            traffic: {
              send: { bytesSent: 0, speed: 0 },
              recv: { bytesReceived: 0, speed: 0 }
            },
            rawResults: {},
            timestamp: 0
          })
        var s = []
        return (
          e.forEach(function (t) {
            s.push(t),
              Object.keys(n).forEach(function (e) {
                n[e](i, t)
              })
          }),
          (d[i].rawResults = s),
          (d[i].timestamp = s[0].timestamp),
          d[i]
        )
      })
    }
  }
})()
function _classCallCheck(e, r) {
  if (!(e instanceof r))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(e, r) {
  for (var o = 0; o < r.length; o++) {
    var t = r[o]
    ;(t.enumerable = t.enumerable || !1),
      (t.configurable = !0),
      'value' in t && (t.writable = !0),
      Object.defineProperty(e, t.key, t)
  }
}
function _createClass(e, r, o) {
  return r && _defineProperties(e.prototype, r), o && _defineProperties(e, o), e
}
var InRoomMessage = (function () {
  'use strict'
  function o(e, r) {
    _classCallCheck(this, o), (this.roomName = e), (this.from = r)
  }
  return (
    _createClass(o, [
      {
        key: 'parseData',
        value: function (e) {
          ;(this.roomName = e.room_name), (this.from = e.from)
        }
      },
      {
        key: 'toJson',
        value: function () {
          var e = new Object()
          return (e.from = this.from), (e.room_name = this.roomName), e
        }
      },
      {
        key: 'getRoomName',
        value: function () {
          return this.roomName
        }
      },
      {
        key: 'getFrom',
        value: function () {
          return this.from
        }
      }
    ]),
    o
  )
})()
function _classCallCheck(e, n) {
  if (!(e instanceof n))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(e, n) {
  for (var t = 0; t < n.length; t++) {
    var r = n[t]
    ;(r.enumerable = r.enumerable || !1),
      (r.configurable = !0),
      'value' in r && (r.writable = !0),
      Object.defineProperty(e, r.key, r)
  }
}
function _createClass(e, n, t) {
  return n && _defineProperties(e.prototype, n), t && _defineProperties(e, t), e
}
var Message = (function () {
  'use strict'
  function e() {
    _classCallCheck(this, e)
  }
  return (
    _createClass(e, [
      {
        key: 'parseData',
        value: function () {
          throw 'not implement yet'
        }
      },
      {
        key: 'toJson',
        value: function () {
          throw 'not implement yet'
        }
      }
    ]),
    e
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var n = e[r]
    ;(n.enumerable = n.enumerable || !1),
      (n.configurable = !0),
      'value' in n && (n.writable = !0),
      Object.defineProperty(t, n.key, n)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var n = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      n
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var NotifyMessage = (function () {
  'use strict'
  _inherits(n, Message)
  var r = _createSuper(n)
  function n(t) {
    var e
    return _classCallCheck(this, n), ((e = r.call(this)).event = t), e
  }
  return (
    _createClass(n, [
      {
        key: 'parseData',
        value: function (t) {
          this.event = t.content.event
        }
      },
      {
        key: 'getEvent',
        value: function () {
          return this.event
        }
      }
    ]),
    n
  )
})()
function DeviceStreamProvider(i, n, t) {
  var e = this
  ;(this.__construct = function () {
    StreamProvider.call(this, i, n, t)
  }),
    (this.do = function () {
      this.config.audio || this.config.video
        ? navigator.mediaDevices
            .getUserMedia(this.config)
            .then(function (i) {
              e.successCB(i)
            })
            .catch(function (i) {
              var o
              'NotFoundError' == i.name
                ? ((o = 'Your current devices: \n'),
                  navigator.mediaDevices.enumerateDevices().then(function (i) {
                    var n = !1,
                      t = !1
                    i.forEach(function (i) {
                      ;(o += '-> ' + i.label + '\n'),
                        'videoinput' == i.kind
                          ? (n = !0)
                          : 'audioinput' == i.kind && (t = !0)
                    }),
                      n || (o = 'Video input not found \n' + o),
                      t || (o = 'Audio input not found \n' + o),
                      e.failCB(o)
                  }))
                : e.failCB('Failed to open camera :' + i)
            })
        : e.failCB(void 0)
    }),
    this.__construct()
}
function ScreenStreamProvider(t, i, c) {
  var n = this
  ;(this.__construct = function () {
    StreamProvider.call(this, t, i, c)
  }),
    (this.do = function () {
      navigator.mediaDevices
        .getDisplayMedia(this.config)
        .then(function (t) {
          ;(n.currentStream = t), n.successCB(t)
        })
        .catch(function (t) {
          n.failCB(t)
        })
    }),
    this.__construct()
}
var STREAM_DEVICE = 'STREAM_DEVICE',
  STREAM_SCREEN = 'STREAM_SCREEN'
function StreamProvider(i, t, r) {
  ;(this.config = void 0),
    (this.successCB = void 0),
    (this.failCB = void 0),
    (this.__construct = function () {
      ;(this.config = i), (this.successCB = t), (this.failCB = r)
    }),
    this.__construct()
}
StreamProvider.getProvider = function (i, t, r, e) {
  return i == STREAM_DEVICE
    ? new DeviceStreamProvider(t, r, e)
    : i == STREAM_SCREEN
    ? new ScreenStreamProvider(t, r, e)
    : void 0
}
function AudioMedia(e, o, t, s) {
  var a = this
  ;(this.audioContext = void 0),
    (this.analyser = void 0),
    (this.script = void 0),
    (this.audioSource = void 0),
    (this.FFT_SIZE = 1024),
    (this.SMOOTHING_TIME_CONSTANT = 0.3),
    (this.__construct = function () {
      ;(this.audioContext = new (window.AudioContext ||
        window.webkitAudioContext ||
        window.mozAudioContext ||
        window.oAudioContext ||
        window.msAudioContext)()),
        null != t &&
          (this.audioSource = this.audioContext.createMediaStreamSource(t))
    }),
    (this.getSampleRate = function () {
      return this.audioContext.sampleRate
    }),
    (this.startAnalyser = function () {
      null != this.audioSource &&
        ((this.analyser = this.audioContext.createAnalyser()),
        (this.analyser.smoothingTimeConstant = this.SMOOTHING_TIME_CONSTANT),
        (this.analyser.fftSize = this.FFT_SIZE),
        (this.script = this.audioContext.createScriptProcessor(2048, 1, 1)),
        (this.script.onaudioprocess = this.onAudioProcess),
        this.audioSource.connect(this.analyser),
        this.analyser.connect(this.script),
        this.script.connect(this.audioContext.destination))
    }),
    (this.stopAnalyser = function () {
      null != this.analyser && this.analyser.disconnect(),
        null != this.script && this.script.disconnect(),
        (this.analyser = void 0),
        (this.script = void 0)
    }),
    (this.onAudioProcess = function (t) {
      var i = new Uint8Array(a.analyser.frequencyBinCount)
      a.analyser.getByteFrequencyData(i)
      var n = a.getAverageVolume(i)
      s.onDataAvailable(o, e, {
        average: n,
        frequencyBinCount: i,
        inputBuffer: t.inputBuffer.getChannelData(0)
      })
    }),
    (this.getAverageVolume = function (t) {
      for (var i = 0, n = t.length, e = 0; e < n; e++) i += t[e]
      return i / n
    }),
    this.__construct()
}
function AudioStreamListener(n) {
  ;(this.__construct = function () {
    n.onVolumeChange && (this.onVolumeChange = n.onVolumeChange),
      n.onDataAvailable && (this.onDataAvailable = n.onDataAvailable)
  }),
    (this.onVolumeChange = function (n, a, t) {}),
    (this.onDataAvailable = function (n, a, t) {}),
    this.__construct()
}
function Recorder(t, i, o, s) {
  ;(($this = this).recordedBlobs = []),
    (this.mediaRecorder = void 0),
    (this.options = { mimeType: 'video/webm;codecs=vp9' }),
    (this.dataTime = 10),
    (this.__construct = function () {
      MediaRecorder.isTypeSupported(this.options.mimeType) ||
        (s.onError(t, i, 'Type ' + this.options.mimeType + ' is not supported'),
        (tthis.options = { mimeType: '' }))
    }),
    (this.getRecordedBlobs = function () {
      return this.recordedBlobs
    }),
    (this.start = function (e) {
      if (null != o) {
        null != e && Number.isInteger(e) && 0 < e && (this.dataTime = e)
        try {
          return (
            this.stop(),
            (this.mediaRecorder = new MediaRecorder(o, this.options)),
            (this.mediaRecorder.onstop = this.onStop),
            (this.mediaRecorder.onstart = this.onStart),
            (this.mediaRecorder.onpause = this.onPause),
            (this.mediaRecorder.onresume = this.onResume),
            (this.mediaRecorder.ondataavailable = this.onDataAvailable),
            this.mediaRecorder.start(this.dataTime),
            !0
          )
        } catch (e) {
          return (
            Log.error('Recorder:start', e.message),
            s.onError(t, i, e.message),
            !1
          )
        }
      } else s.onError(t, i, ERROR_STREAM_NOT_FOUND)
    }),
    (this.stop = function () {
      null == this.mediaRecorder ||
        ('recording' != this.mediaRecorder.state &&
          'active' != this.mediaRecorder.state) ||
        this.mediaRecorder.stop()
    }),
    (this.pause = function () {
      null != this.mediaRecorder &&
        (('recording' != this.mediaRecorder.state &&
          'active' != this.mediaRecorder.state) ||
          this.mediaRecorder.pause())
    }),
    (this.resume = function () {
      null != this.mediaRecorder &&
        'paused' == this.mediaRecorder.state &&
        this.mediaRecorder.resume()
    }),
    (this.getCurrentData = function () {
      return 0 < $this.recordedBlobs.length
        ? (blob = new Blob($this.recordedBlobs, { type: 'video/webm' }))
        : null
    }),
    (this.onResume = function () {
      s.onResume(t, i)
    }),
    (this.onStart = function (e) {
      ;($this.recordedBlobs = []),
        ($this.recordedBlobs.length = 0),
        s.onStart(t, i)
    }),
    (this.onStop = function (e) {
      s.onStop(t, i)
    }),
    (this.onDataAvailable = function (e) {
      e.data && 0 < e.data.size && $this.recordedBlobs.push(e.data),
        s.onDataAvailable(t, i, e)
    }),
    (this.onPause = function () {
      s.onPause(t, i)
    }),
    this.__construct()
}
function RecordingListener(o) {
  ;(this.__construct = function () {
    o.onError && (this.onError = o.onError),
      o.onStop && (this.onStop = o.onStop),
      o.onDataAvailable && (this.onDataAvailable = o.onDataAvailable),
      o.onStart && (this.onStart = o.onStart),
      o.onDownload && (this.onDownload = o.onDownload),
      o.onPause && (this.onPause = o.onPause),
      o.onResume && (this.onResume = o.onResume)
  }),
    (this.onError = function (o, n, t) {}),
    (this.onStop = function (o, n, t) {}),
    (this.onDataAvailable = function (o, n, t) {}),
    (this.onStart = function (o, n, t) {}),
    (this.onDownload = function (o, n, t) {}),
    (this.onPause = function (o, n, t) {}),
    (this.onResume = function (o, n, t) {}),
    this.__construct()
}
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var ChatMessage = (function () {
  'use strict'
  _inherits(i, InRoomMessage)
  var c = _createSuper(i)
  function i(t, e, r, o, n) {
    return (
      _classCallCheck(this, i),
      ((e = c.call(this, t, e)).content = o),
      (e.sendTo = n),
      (e.peerName = r),
      e
    )
  }
  return (
    _createClass(i, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(i.prototype), 'parseData', this).call(this, t),
            (this.content = t.content),
            (this.peerName = t.peerName || 'def')
        }
      },
      {
        key: 'toJson',
        value: function () {
          var t = _get(_getPrototypeOf(i.prototype), 'toJson', this).call(this)
          return (
            null != this.sendTo && (t.send_to = this.sendTo),
            (t.content = this.content),
            (t.peerName = this.peerName),
            t
          )
        }
      },
      {
        key: 'getContent',
        value: function () {
          return this.content
        }
      }
    ]),
    i
  )
})()
function _typeof(e) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (e) {
          return typeof e
        }
      : function (e) {
          return e &&
            'function' == typeof Symbol &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? 'symbol'
            : typeof e
        })(e)
}
function _classCallCheck(e, t) {
  if (!(e instanceof t))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(e, t) {
  for (var r = 0; r < t.length; r++) {
    var o = t[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(e, o.key, o)
  }
}
function _createClass(e, t, r) {
  return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), e
}
function _get(e, t, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (e, t, r) {
          e = _superPropBase(e, t)
          if (e) {
            t = Object.getOwnPropertyDescriptor(e, t)
            return t.get ? t.get.call(r) : t.value
          }
        })(e, t, r || e)
}
function _superPropBase(e, t) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(e, t) &&
    null !== (e = _getPrototypeOf(e));

  );
  return e
}
function _inherits(e, t) {
  if ('function' != typeof t && null !== t)
    throw new TypeError('Super expression must either be null or a function')
  ;(e.prototype = Object.create(t && t.prototype, {
    constructor: { value: e, writable: !0, configurable: !0 }
  })),
    t && _setPrototypeOf(e, t)
}
function _setPrototypeOf(e, t) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (e, t) {
      return (e.__proto__ = t), e
    })(e, t)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var e,
      t = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((e = _getPrototypeOf(this).constructor),
          Reflect.construct(t, arguments, e))
        : t.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(e, t) {
  return !t || ('object' !== _typeof(t) && 'function' != typeof t)
    ? _assertThisInitialized(e)
    : t
}
function _assertThisInitialized(e) {
  if (void 0 === e)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return e
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (e) {
    return !1
  }
}
function _getPrototypeOf(e) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (e) {
        return e.__proto__ || Object.getPrototypeOf(e)
      })(e)
}
var RoomMessage = (function () {
  'use strict'
  _inherits(r, InRoomMessage)
  var t = _createSuper(r)
  function r() {
    var e
    return (
      _classCallCheck(this, r),
      ((e = t.call(this)).members = []),
      (e.leftMember = void 0),
      (e.joinedMember = void 0),
      (e.info = void 0),
      e
    )
  }
  return (
    _createClass(r, [
      {
        key: 'parseData',
        value: function (e) {
          _get(_getPrototypeOf(r.prototype), 'parseData', this).call(this, e)
          for (var t = 0; t < e.members.length; t++)
            this.members.push(
              new User(void 0, void 0, void 0, void 0, void 0, e.members[t])
            )
          null != e.left_member
            ? (this.leftMember = new User(
                void 0,
                void 0,
                void 0,
                void 0,
                void 0,
                e.left_member
              ))
            : (this.leftMember = null),
            e.joined_member
              ? (this.joinedMember = new User(
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  e.joined_member
                ))
              : (this.joinedMember = null),
            e.info && (this.info = e.info)
        }
      },
      {
        key: 'getLeftMember',
        value: function () {
          return this.leftMember
        }
      },
      {
        key: 'getJoinedMember',
        value: function () {
          return this.joinedMember
        }
      },
      {
        key: 'getMembers',
        value: function () {
          return this.members
        }
      },
      {
        key: 'getInfo',
        value: function () {
          return this.info
        }
      }
    ]),
    r
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var RoomUpdateInfoMessage = (function () {
  'use strict'
  _inherits(i, InRoomMessage)
  var n = _createSuper(i)
  function i(t, e, r, o) {
    return (
      _classCallCheck(this, i),
      ((e = n.call(this, t, e)).attr = r),
      (e.val = o),
      e
    )
  }
  return (
    _createClass(i, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(i.prototype), 'parseData', this).call(this, t),
            (this.attr = t.attr),
            (this.val = t.val)
        }
      },
      {
        key: 'toJson',
        value: function () {
          var t = _get(_getPrototypeOf(i.prototype), 'toJson', this).call(this)
          return (t.attr = this.attr), (t.val = this.val), t
        }
      },
      {
        key: 'getAttribute',
        value: function () {
          return this.attr
        }
      },
      {
        key: 'getValue',
        value: function () {
          return this.val
        }
      }
    ]),
    i
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var RoomUpdateMyInfoMessage = (function () {
  'use strict'
  _inherits(i, InRoomMessage)
  var n = _createSuper(i)
  function i(t, e, r, o) {
    return (
      _classCallCheck(this, i),
      ((e = n.call(this, t, e)).attr = r),
      (e.val = o),
      e
    )
  }
  return (
    _createClass(i, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(i.prototype), 'parseData', this).call(this, t),
            (this.attr = t.attr),
            (this.val = t.val)
        }
      },
      {
        key: 'toJson',
        value: function () {
          var t = _get(_getPrototypeOf(i.prototype), 'toJson', this).call(this)
          return (t.attr = this.attr), (t.val = this.val), t
        }
      },
      {
        key: 'getAttribute',
        value: function () {
          return this.attr
        }
      },
      {
        key: 'getValue',
        value: function () {
          return this.val
        }
      }
    ]),
    i
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var EnterFailMessage = (function () {
  'use strict'
  _inherits(r, NotifyMessage)
  var e = _createSuper(r)
  function r() {
    var t
    return (
      _classCallCheck(this, r),
      ((t = e.call(this)).roomName = void 0),
      (t.errorMsg = void 0),
      t
    )
  }
  return (
    _createClass(r, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(r.prototype), 'parseData', this).call(this, t),
            (this.roomName = t.content.room_name),
            (this.errorMsg = t.content.error_msg)
        }
      },
      {
        key: 'getRoomName',
        value: function () {
          return this.roomName
        }
      },
      {
        key: 'getErrorMsg',
        value: function () {
          return this.errorMsg
        }
      }
    ]),
    r
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var ExitFailMessage = (function () {
  'use strict'
  _inherits(r, NotifyMessage)
  var e = _createSuper(r)
  function r() {
    var t
    return (
      _classCallCheck(this, r),
      ((t = e.call(this)).roomName = void 0),
      (t.errorMsg = void 0),
      t
    )
  }
  return (
    _createClass(r, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(r.prototype), 'parseData', this).call(this, t),
            (this.roomName = t.content.room_name),
            (this.errorMsg = t.content.error_msg)
        }
      },
      {
        key: 'getRoomName',
        value: function () {
          return this.roomName
        }
      },
      {
        key: 'getErrorMsg',
        value: function () {
          return this.errorMsg
        }
      }
    ]),
    r
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var StatusMessage = (function () {
  'use strict'
  _inherits(r, NotifyMessage)
  var e = _createSuper(r)
  function r() {
    var t
    return (
      _classCallCheck(this, r),
      ((t = e.call(this)).roomName = void 0),
      (t.uid = void 0),
      t
    )
  }
  return (
    _createClass(r, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(r.prototype), 'parseData', this).call(this, t),
            (this.roomName = t.content.room_name),
            (this.uid = t.content.uid)
        }
      },
      {
        key: 'getRoomName',
        value: function () {
          return this.roomName
        }
      },
      {
        key: 'getUid',
        value: function () {
          return this.uid
        }
      }
    ]),
    r
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var UpdateRoomInfoMessage = (function () {
  'use strict'
  _inherits(r, NotifyMessage)
  var e = _createSuper(r)
  function r() {
    var t
    return (
      _classCallCheck(this, r),
      ((t = e.call(this)).roomName = void 0),
      (t.byUser = void 0),
      (t.attr = void 0),
      (t.oldVal = void 0),
      (t.newVal = void 0),
      t
    )
  }
  return (
    _createClass(r, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(r.prototype), 'parseData', this).call(this, t),
            (this.roomName = t.content.room_name),
            (this.byUser = t.content.by),
            (this.attr = t.content.attr),
            (this.oldVal = t.content.old_val),
            (this.newVal = t.content.new_val)
        }
      },
      {
        key: 'getRoomName',
        value: function () {
          return this.roomName
        }
      },
      {
        key: 'getByUser',
        value: function () {
          return this.byUser
        }
      },
      {
        key: 'getAttribute',
        value: function () {
          return this.attr
        }
      },
      {
        key: 'getOldValue',
        value: function () {
          return this.oldVal
        }
      },
      {
        key: 'getNewValue',
        value: function () {
          return this.newVal
        }
      }
    ]),
    r
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var UpdateUserInfoMessage = (function () {
  'use strict'
  _inherits(r, NotifyMessage)
  var e = _createSuper(r)
  function r() {
    var t
    return (
      _classCallCheck(this, r),
      ((t = e.call(this)).roomName = void 0),
      (t.uid = void 0),
      (t.attr = void 0),
      (t.oldVal = void 0),
      (t.newVal = void 0),
      t
    )
  }
  return (
    _createClass(r, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(r.prototype), 'parseData', this).call(this, t),
            (this.roomName = t.content.room_name),
            (this.uid = t.content.uid),
            (this.attr = t.content.attr),
            (this.oldVal = t.content.old_val),
            (this.newVal = t.content.new_val)
        }
      },
      {
        key: 'getRoomName',
        value: function () {
          return this.roomName
        }
      },
      {
        key: 'getUid',
        value: function () {
          return this.uid
        }
      },
      {
        key: 'getAttribute',
        value: function () {
          return this.attr
        }
      },
      {
        key: 'getOldValue',
        value: function () {
          return this.oldVal
        }
      },
      {
        key: 'getNewValue',
        value: function () {
          return this.newVal
        }
      }
    ]),
    r
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var AnswerMessage = (function () {
  'use strict'
  _inherits(i, InRoomMessage)
  var s = _createSuper(i)
  function i(t, e, r, o, n) {
    return (
      _classCallCheck(this, i),
      ((e = s.call(this, t, e)).sendTo = r),
      (e.type = 'answer'),
      (e.peerName = o),
      (e.sdp = n),
      e
    )
  }
  return (
    _createClass(i, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(i.prototype), 'parseData', this).call(this, t),
            (this.sendTo = t.send_to),
            (this.type = t.type),
            (this.sdp = t.sdp),
            (this.peerName = t.peerName || 'def')
        }
      },
      {
        key: 'toJson',
        value: function () {
          var t = _get(_getPrototypeOf(i.prototype), 'toJson', this).call(this)
          return (
            (t.sdp = this.sdp),
            (t.type = this.type),
            (t.send_to = this.sendTo),
            (t.peerName = this.peerName),
            t
          )
        }
      },
      {
        key: 'getSdp',
        value: function () {
          return this.sdp
        }
      }
    ]),
    i
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var CallMessage = (function () {
  'use strict'
  _inherits(n, InRoomMessage)
  var o = _createSuper(n)
  function n(t, e, r) {
    return (
      _classCallCheck(this, n),
      ((e = o.call(this, t, e)).sendTo = r),
      (e.type = 'call'),
      e
    )
  }
  return (
    _createClass(n, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(n.prototype), 'parseData', this).call(this, t),
            (this.sendTo = t.send_to),
            (this.type = t.type)
        }
      },
      {
        key: 'toJson',
        value: function () {
          var t = _get(_getPrototypeOf(n.prototype), 'toJson', this).call(this)
          return (t.type = this.type), (t.send_to = this.sendTo), t
        }
      }
    ]),
    n
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var n = 0; n < e.length; n++) {
    var r = e[n]
    ;(r.enumerable = r.enumerable || !1),
      (r.configurable = !0),
      'value' in r && (r.writable = !0),
      Object.defineProperty(t, r.key, r)
  }
}
function _createClass(t, e, n) {
  return e && _defineProperties(t.prototype, e), n && _defineProperties(t, n), t
}
function _get(t, e, n) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, n) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(n) : e.value
          }
        })(t, e, n || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(n) {
  var r = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(n)
    return _possibleConstructorReturn(
      this,
      r
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var CandidateMessage = (function () {
  'use strict'
  _inherits(u, InRoomMessage)
  var c = _createSuper(u)
  function u(t, e, n, r, o, i, s) {
    return (
      _classCallCheck(this, u),
      ((e = c.call(this, t, e)).sendTo = n),
      (e.type = 'candidate'),
      (e.sdpMLineIndex = o),
      (e.sdpMid = i),
      (e.candidate = s),
      (e.peerName = r),
      e
    )
  }
  return (
    _createClass(u, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(u.prototype), 'parseData', this).call(this, t),
            (this.sendTo = t.send_to),
            (this.type = t.type),
            (this.sdpMLineIndex = t.sdp_m_line_index),
            (this.sdpMid = t.sdp_mid),
            (this.candidate = t.candidate),
            (this.peerName = t.peerName || 'def')
        }
      },
      {
        key: 'toJson',
        value: function () {
          var t = _get(_getPrototypeOf(u.prototype), 'toJson', this).call(this)
          return (
            (t.type = this.type),
            (t.send_to = this.sendTo),
            (t.sdp_m_line_index = this.sdpMLineIndex),
            (t.sdp_mid = this.sdpMid),
            (t.candidate = this.candidate),
            (t.peerName = this.peerName),
            t
          )
        }
      },
      {
        key: 'getSdpMLineIndex',
        value: function () {
          return this.sdpMLineIndex
        }
      },
      {
        key: 'getSdpMid',
        value: function () {
          return this.sdpMid
        }
      },
      {
        key: 'getCandidate',
        value: function () {
          return this.candidate
        }
      }
    ]),
    u
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var HangupMessage = (function () {
  'use strict'
  _inherits(i, InRoomMessage)
  var n = _createSuper(i)
  function i(t, e, r, o) {
    return (
      _classCallCheck(this, i),
      ((e = n.call(this, t, e)).sendTo = r),
      (e.type = 'hangup'),
      (e.peerName = o),
      e
    )
  }
  return (
    _createClass(i, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(i.prototype), 'parseData', this).call(this, t),
            (this.sendTo = t.send_to),
            (this.type = t.type),
            (this.peerName = t.peerName || 'def')
        }
      },
      {
        key: 'toJson',
        value: function () {
          var t = _get(_getPrototypeOf(i.prototype), 'toJson', this).call(this)
          return (
            (t.type = this.type),
            (t.send_to = this.sendTo),
            (t.peerName = this.peerName),
            t
          )
        }
      }
    ]),
    i
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var OfferMessage = (function () {
  'use strict'
  _inherits(s, InRoomMessage)
  var i = _createSuper(s)
  function s(t, e, r, o, n) {
    return (
      _classCallCheck(this, s),
      ((e = i.call(this, t, e)).sendTo = r),
      (e.type = 'offer'),
      (e.peerName = o),
      (e.sdp = n),
      e
    )
  }
  return (
    _createClass(s, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(s.prototype), 'parseData', this).call(this, t),
            (this.sendTo = t.send_to),
            (this.type = t.type),
            (this.sdp = t.sdp),
            (this.peerName = t.peerName || 'def')
        }
      },
      {
        key: 'toJson',
        value: function () {
          var t = _get(_getPrototypeOf(s.prototype), 'toJson', this).call(this)
          return (
            (t.sdp = this.sdp),
            (t.type = this.type),
            (t.send_to = this.sendTo),
            (t.peerName = this.peerName),
            t
          )
        }
      },
      {
        key: 'getSdp',
        value: function () {
          return this.sdp
        }
      }
    ]),
    s
  )
})()
function _typeof(t) {
  return (_typeof =
    'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
      ? function (t) {
          return typeof t
        }
      : function (t) {
          return t &&
            'function' == typeof Symbol &&
            t.constructor === Symbol &&
            t !== Symbol.prototype
            ? 'symbol'
            : typeof t
        })(t)
}
function _classCallCheck(t, e) {
  if (!(t instanceof e))
    throw new TypeError('Cannot call a class as a function')
}
function _defineProperties(t, e) {
  for (var r = 0; r < e.length; r++) {
    var o = e[r]
    ;(o.enumerable = o.enumerable || !1),
      (o.configurable = !0),
      'value' in o && (o.writable = !0),
      Object.defineProperty(t, o.key, o)
  }
}
function _createClass(t, e, r) {
  return e && _defineProperties(t.prototype, e), r && _defineProperties(t, r), t
}
function _get(t, e, r) {
  return (_get =
    'undefined' != typeof Reflect && Reflect.get
      ? Reflect.get
      : function (t, e, r) {
          t = _superPropBase(t, e)
          if (t) {
            e = Object.getOwnPropertyDescriptor(t, e)
            return e.get ? e.get.call(r) : e.value
          }
        })(t, e, r || t)
}
function _superPropBase(t, e) {
  for (
    ;
    !Object.prototype.hasOwnProperty.call(t, e) &&
    null !== (t = _getPrototypeOf(t));

  );
  return t
}
function _inherits(t, e) {
  if ('function' != typeof e && null !== e)
    throw new TypeError('Super expression must either be null or a function')
  ;(t.prototype = Object.create(e && e.prototype, {
    constructor: { value: t, writable: !0, configurable: !0 }
  })),
    e && _setPrototypeOf(t, e)
}
function _setPrototypeOf(t, e) {
  return (_setPrototypeOf =
    Object.setPrototypeOf ||
    function (t, e) {
      return (t.__proto__ = e), t
    })(t, e)
}
function _createSuper(r) {
  var o = _isNativeReflectConstruct()
  return function () {
    var t,
      e = _getPrototypeOf(r)
    return _possibleConstructorReturn(
      this,
      o
        ? ((t = _getPrototypeOf(this).constructor),
          Reflect.construct(e, arguments, t))
        : e.apply(this, arguments)
    )
  }
}
function _possibleConstructorReturn(t, e) {
  return !e || ('object' !== _typeof(e) && 'function' != typeof e)
    ? _assertThisInitialized(t)
    : e
}
function _assertThisInitialized(t) {
  if (void 0 === t)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    )
  return t
}
function _isNativeReflectConstruct() {
  if ('undefined' == typeof Reflect || !Reflect.construct) return !1
  if (Reflect.construct.sham) return !1
  if ('function' == typeof Proxy) return !0
  try {
    return (
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {})),
      !0
    )
  } catch (t) {
    return !1
  }
}
function _getPrototypeOf(t) {
  return (_getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t)
      })(t)
}
var ResponseMessage = (function () {
  'use strict'
  _inherits(i, InRoomMessage)
  var n = _createSuper(i)
  function i(t, e, r, o) {
    return (
      _classCallCheck(this, i),
      ((e = n.call(this, t, e)).sendTo = r),
      (e.deny = o),
      (e.type = 'response'),
      e
    )
  }
  return (
    _createClass(i, [
      {
        key: 'parseData',
        value: function (t) {
          _get(_getPrototypeOf(i.prototype), 'parseData', this).call(this, t),
            (this.sendTo = t.send_to),
            (this.deny = t.deny),
            (this.type = t.type)
        }
      },
      {
        key: 'toJson',
        value: function () {
          var t = _get(_getPrototypeOf(i.prototype), 'toJson', this).call(this)
          return (
            (t.type = this.type),
            (t.send_to = this.sendTo),
            (t.deny = this.deny),
            t
          )
        }
      }
    ]),
    i
  )
})()
